

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat May 13 18:28:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	dabs	1,0x320,16
    95                           	dabs	1,0x2A0,80
    96                           	dabs	1,0x250,32
    97                           	dabs	1,0x220,48
    98                           	dabs	1,0x1A0,80
    99                           	dabs	1,0x2170,0,__u16TransmitBuffer
   100                           	dabs	1,0x20F0,0,__u16ResponseBuffer
   101                           	dabs	1,0x7E,2
   102  0000                     
   103                           ; Version 1.41
   104                           ; Generated 25/01/2017 GMT
   105                           ; 
   106                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC16F18344 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0097                     	;# 
   180  009B                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  0111                     	;# 
   190  0112                     	;# 
   191  0113                     	;# 
   192  0114                     	;# 
   193  0115                     	;# 
   194  0116                     	;# 
   195  0117                     	;# 
   196  0118                     	;# 
   197  0119                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  0197                     	;# 
   202  0199                     	;# 
   203  0199                     	;# 
   204  0199                     	;# 
   205  019A                     	;# 
   206  019A                     	;# 
   207  019A                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  019C                     	;# 
   215  019C                     	;# 
   216  019D                     	;# 
   217  019D                     	;# 
   218  019D                     	;# 
   219  019E                     	;# 
   220  019E                     	;# 
   221  019E                     	;# 
   222  019F                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  019F                     	;# 
   227  020C                     	;# 
   228  020D                     	;# 
   229  020E                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  028C                     	;# 
   247  028D                     	;# 
   248  028E                     	;# 
   249  0291                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0294                     	;# 
   254  0295                     	;# 
   255  0295                     	;# 
   256  0296                     	;# 
   257  0297                     	;# 
   258  0298                     	;# 
   259  029F                     	;# 
   260  030C                     	;# 
   261  030D                     	;# 
   262  030E                     	;# 
   263  0311                     	;# 
   264  0311                     	;# 
   265  0312                     	;# 
   266  0313                     	;# 
   267  0314                     	;# 
   268  0315                     	;# 
   269  0315                     	;# 
   270  0316                     	;# 
   271  0317                     	;# 
   272  0318                     	;# 
   273  038C                     	;# 
   274  038D                     	;# 
   275  038E                     	;# 
   276  0391                     	;# 
   277  0392                     	;# 
   278  0393                     	;# 
   279  0394                     	;# 
   280  0395                     	;# 
   281  0396                     	;# 
   282  0397                     	;# 
   283  0398                     	;# 
   284  0399                     	;# 
   285  039A                     	;# 
   286  039C                     	;# 
   287  039D                     	;# 
   288  039E                     	;# 
   289  039F                     	;# 
   290  0411                     	;# 
   291  0411                     	;# 
   292  0412                     	;# 
   293  0413                     	;# 
   294  0414                     	;# 
   295  0415                     	;# 
   296  0416                     	;# 
   297  0417                     	;# 
   298  0418                     	;# 
   299  0418                     	;# 
   300  0419                     	;# 
   301  041A                     	;# 
   302  041B                     	;# 
   303  041C                     	;# 
   304  041D                     	;# 
   305  041E                     	;# 
   306  041F                     	;# 
   307  0498                     	;# 
   308  0498                     	;# 
   309  0499                     	;# 
   310  049A                     	;# 
   311  049B                     	;# 
   312  049B                     	;# 
   313  049C                     	;# 
   314  049D                     	;# 
   315  049E                     	;# 
   316  049F                     	;# 
   317  0617                     	;# 
   318  0618                     	;# 
   319  0619                     	;# 
   320  0619                     	;# 
   321  061A                     	;# 
   322  061B                     	;# 
   323  061C                     	;# 
   324  061C                     	;# 
   325  061F                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  0695                     	;# 
   331  0696                     	;# 
   332  0697                     	;# 
   333  0698                     	;# 
   334  0699                     	;# 
   335  0711                     	;# 
   336  0712                     	;# 
   337  0713                     	;# 
   338  0714                     	;# 
   339  0715                     	;# 
   340  0716                     	;# 
   341  0717                     	;# 
   342  0718                     	;# 
   343  0719                     	;# 
   344  0891                     	;# 
   345  0891                     	;# 
   346  0891                     	;# 
   347  0891                     	;# 
   348  0891                     	;# 
   349  0891                     	;# 
   350  0892                     	;# 
   351  0892                     	;# 
   352  0892                     	;# 
   353  0893                     	;# 
   354  0893                     	;# 
   355  0893                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0894                     	;# 
   360  0894                     	;# 
   361  0894                     	;# 
   362  0895                     	;# 
   363  0895                     	;# 
   364  0895                     	;# 
   365  0896                     	;# 
   366  0896                     	;# 
   367  0896                     	;# 
   368  089B                     	;# 
   369  0911                     	;# 
   370  0912                     	;# 
   371  0913                     	;# 
   372  0914                     	;# 
   373  0915                     	;# 
   374  0916                     	;# 
   375  0918                     	;# 
   376  0919                     	;# 
   377  091A                     	;# 
   378  091B                     	;# 
   379  091C                     	;# 
   380  091D                     	;# 
   381  091E                     	;# 
   382  091F                     	;# 
   383  0E0F                     	;# 
   384  0E10                     	;# 
   385  0E11                     	;# 
   386  0E12                     	;# 
   387  0E13                     	;# 
   388  0E14                     	;# 
   389  0E15                     	;# 
   390  0E16                     	;# 
   391  0E17                     	;# 
   392  0E18                     	;# 
   393  0E19                     	;# 
   394  0E1A                     	;# 
   395  0E1B                     	;# 
   396  0E1C                     	;# 
   397  0E20                     	;# 
   398  0E21                     	;# 
   399  0E22                     	;# 
   400  0E24                     	;# 
   401  0E25                     	;# 
   402  0E28                     	;# 
   403  0E29                     	;# 
   404  0E2A                     	;# 
   405  0E2B                     	;# 
   406  0E2C                     	;# 
   407  0E2D                     	;# 
   408  0E2E                     	;# 
   409  0E2F                     	;# 
   410  0E90                     	;# 
   411  0E91                     	;# 
   412  0E92                     	;# 
   413  0E94                     	;# 
   414  0E95                     	;# 
   415  0E9C                     	;# 
   416  0E9D                     	;# 
   417  0E9E                     	;# 
   418  0E9F                     	;# 
   419  0EA0                     	;# 
   420  0EA1                     	;# 
   421  0EA2                     	;# 
   422  0EA3                     	;# 
   423  0EA4                     	;# 
   424  0EA5                     	;# 
   425  0EA6                     	;# 
   426  0EA7                     	;# 
   427  0F0F                     	;# 
   428  0F10                     	;# 
   429  0F11                     	;# 
   430  0F12                     	;# 
   431  0F13                     	;# 
   432  0F14                     	;# 
   433  0F15                     	;# 
   434  0F16                     	;# 
   435  0F17                     	;# 
   436  0F18                     	;# 
   437  0F19                     	;# 
   438  0F1A                     	;# 
   439  0F1B                     	;# 
   440  0F1C                     	;# 
   441  0F1D                     	;# 
   442  0F1E                     	;# 
   443  0F1F                     	;# 
   444  0F20                     	;# 
   445  0F21                     	;# 
   446  0F22                     	;# 
   447  0F23                     	;# 
   448  0F24                     	;# 
   449  0F25                     	;# 
   450  0F26                     	;# 
   451  0F27                     	;# 
   452  0F28                     	;# 
   453  0F29                     	;# 
   454  0F2A                     	;# 
   455  0F2B                     	;# 
   456  0F2C                     	;# 
   457  0F2D                     	;# 
   458  0F2E                     	;# 
   459  0F2F                     	;# 
   460  0F30                     	;# 
   461  0F31                     	;# 
   462  0F32                     	;# 
   463  0F33                     	;# 
   464  0F34                     	;# 
   465  0F35                     	;# 
   466  0F36                     	;# 
   467  0F37                     	;# 
   468  0FE4                     	;# 
   469  0FE5                     	;# 
   470  0FE6                     	;# 
   471  0FE7                     	;# 
   472  0FE8                     	;# 
   473  0FE9                     	;# 
   474  0FEA                     	;# 
   475  0FEB                     	;# 
   476  0FED                     	;# 
   477  0FEE                     	;# 
   478  0FEF                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  0010                     	;# 
   495  0011                     	;# 
   496  0012                     	;# 
   497  0013                     	;# 
   498  0014                     	;# 
   499  0015                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0097                     	;# 
   522  009B                     	;# 
   523  009B                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  0111                     	;# 
   532  0112                     	;# 
   533  0113                     	;# 
   534  0114                     	;# 
   535  0115                     	;# 
   536  0116                     	;# 
   537  0117                     	;# 
   538  0118                     	;# 
   539  0119                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542  018E                     	;# 
   543  0197                     	;# 
   544  0199                     	;# 
   545  0199                     	;# 
   546  0199                     	;# 
   547  019A                     	;# 
   548  019A                     	;# 
   549  019A                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019C                     	;# 
   556  019C                     	;# 
   557  019C                     	;# 
   558  019D                     	;# 
   559  019D                     	;# 
   560  019D                     	;# 
   561  019E                     	;# 
   562  019E                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  019F                     	;# 
   566  019F                     	;# 
   567  019F                     	;# 
   568  019F                     	;# 
   569  020C                     	;# 
   570  020D                     	;# 
   571  020E                     	;# 
   572  0211                     	;# 
   573  0211                     	;# 
   574  0212                     	;# 
   575  0212                     	;# 
   576  0213                     	;# 
   577  0213                     	;# 
   578  0214                     	;# 
   579  0214                     	;# 
   580  0215                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0216                     	;# 
   585  0216                     	;# 
   586  0217                     	;# 
   587  0217                     	;# 
   588  028C                     	;# 
   589  028D                     	;# 
   590  028E                     	;# 
   591  0291                     	;# 
   592  0291                     	;# 
   593  0292                     	;# 
   594  0293                     	;# 
   595  0294                     	;# 
   596  0295                     	;# 
   597  0295                     	;# 
   598  0296                     	;# 
   599  0297                     	;# 
   600  0298                     	;# 
   601  029F                     	;# 
   602  030C                     	;# 
   603  030D                     	;# 
   604  030E                     	;# 
   605  0311                     	;# 
   606  0311                     	;# 
   607  0312                     	;# 
   608  0313                     	;# 
   609  0314                     	;# 
   610  0315                     	;# 
   611  0315                     	;# 
   612  0316                     	;# 
   613  0317                     	;# 
   614  0318                     	;# 
   615  038C                     	;# 
   616  038D                     	;# 
   617  038E                     	;# 
   618  0391                     	;# 
   619  0392                     	;# 
   620  0393                     	;# 
   621  0394                     	;# 
   622  0395                     	;# 
   623  0396                     	;# 
   624  0397                     	;# 
   625  0398                     	;# 
   626  0399                     	;# 
   627  039A                     	;# 
   628  039C                     	;# 
   629  039D                     	;# 
   630  039E                     	;# 
   631  039F                     	;# 
   632  0411                     	;# 
   633  0411                     	;# 
   634  0412                     	;# 
   635  0413                     	;# 
   636  0414                     	;# 
   637  0415                     	;# 
   638  0416                     	;# 
   639  0417                     	;# 
   640  0418                     	;# 
   641  0418                     	;# 
   642  0419                     	;# 
   643  041A                     	;# 
   644  041B                     	;# 
   645  041C                     	;# 
   646  041D                     	;# 
   647  041E                     	;# 
   648  041F                     	;# 
   649  0498                     	;# 
   650  0498                     	;# 
   651  0499                     	;# 
   652  049A                     	;# 
   653  049B                     	;# 
   654  049B                     	;# 
   655  049C                     	;# 
   656  049D                     	;# 
   657  049E                     	;# 
   658  049F                     	;# 
   659  0617                     	;# 
   660  0618                     	;# 
   661  0619                     	;# 
   662  0619                     	;# 
   663  061A                     	;# 
   664  061B                     	;# 
   665  061C                     	;# 
   666  061C                     	;# 
   667  061F                     	;# 
   668  0691                     	;# 
   669  0692                     	;# 
   670  0693                     	;# 
   671  0694                     	;# 
   672  0695                     	;# 
   673  0696                     	;# 
   674  0697                     	;# 
   675  0698                     	;# 
   676  0699                     	;# 
   677  0711                     	;# 
   678  0712                     	;# 
   679  0713                     	;# 
   680  0714                     	;# 
   681  0715                     	;# 
   682  0716                     	;# 
   683  0717                     	;# 
   684  0718                     	;# 
   685  0719                     	;# 
   686  0891                     	;# 
   687  0891                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0892                     	;# 
   693  0892                     	;# 
   694  0892                     	;# 
   695  0893                     	;# 
   696  0893                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0894                     	;# 
   702  0894                     	;# 
   703  0894                     	;# 
   704  0895                     	;# 
   705  0895                     	;# 
   706  0895                     	;# 
   707  0896                     	;# 
   708  0896                     	;# 
   709  0896                     	;# 
   710  089B                     	;# 
   711  0911                     	;# 
   712  0912                     	;# 
   713  0913                     	;# 
   714  0914                     	;# 
   715  0915                     	;# 
   716  0916                     	;# 
   717  0918                     	;# 
   718  0919                     	;# 
   719  091A                     	;# 
   720  091B                     	;# 
   721  091C                     	;# 
   722  091D                     	;# 
   723  091E                     	;# 
   724  091F                     	;# 
   725  0E0F                     	;# 
   726  0E10                     	;# 
   727  0E11                     	;# 
   728  0E12                     	;# 
   729  0E13                     	;# 
   730  0E14                     	;# 
   731  0E15                     	;# 
   732  0E16                     	;# 
   733  0E17                     	;# 
   734  0E18                     	;# 
   735  0E19                     	;# 
   736  0E1A                     	;# 
   737  0E1B                     	;# 
   738  0E1C                     	;# 
   739  0E20                     	;# 
   740  0E21                     	;# 
   741  0E22                     	;# 
   742  0E24                     	;# 
   743  0E25                     	;# 
   744  0E28                     	;# 
   745  0E29                     	;# 
   746  0E2A                     	;# 
   747  0E2B                     	;# 
   748  0E2C                     	;# 
   749  0E2D                     	;# 
   750  0E2E                     	;# 
   751  0E2F                     	;# 
   752  0E90                     	;# 
   753  0E91                     	;# 
   754  0E92                     	;# 
   755  0E94                     	;# 
   756  0E95                     	;# 
   757  0E9C                     	;# 
   758  0E9D                     	;# 
   759  0E9E                     	;# 
   760  0E9F                     	;# 
   761  0EA0                     	;# 
   762  0EA1                     	;# 
   763  0EA2                     	;# 
   764  0EA3                     	;# 
   765  0EA4                     	;# 
   766  0EA5                     	;# 
   767  0EA6                     	;# 
   768  0EA7                     	;# 
   769  0F0F                     	;# 
   770  0F10                     	;# 
   771  0F11                     	;# 
   772  0F12                     	;# 
   773  0F13                     	;# 
   774  0F14                     	;# 
   775  0F15                     	;# 
   776  0F16                     	;# 
   777  0F17                     	;# 
   778  0F18                     	;# 
   779  0F19                     	;# 
   780  0F1A                     	;# 
   781  0F1B                     	;# 
   782  0F1C                     	;# 
   783  0F1D                     	;# 
   784  0F1E                     	;# 
   785  0F1F                     	;# 
   786  0F20                     	;# 
   787  0F21                     	;# 
   788  0F22                     	;# 
   789  0F23                     	;# 
   790  0F24                     	;# 
   791  0F25                     	;# 
   792  0F26                     	;# 
   793  0F27                     	;# 
   794  0F28                     	;# 
   795  0F29                     	;# 
   796  0F2A                     	;# 
   797  0F2B                     	;# 
   798  0F2C                     	;# 
   799  0F2D                     	;# 
   800  0F2E                     	;# 
   801  0F2F                     	;# 
   802  0F30                     	;# 
   803  0F31                     	;# 
   804  0F32                     	;# 
   805  0F33                     	;# 
   806  0F34                     	;# 
   807  0F35                     	;# 
   808  0F36                     	;# 
   809  0F37                     	;# 
   810  0FE4                     	;# 
   811  0FE5                     	;# 
   812  0FE6                     	;# 
   813  0FE7                     	;# 
   814  0FE8                     	;# 
   815  0FE9                     	;# 
   816  0FEA                     	;# 
   817  0FEB                     	;# 
   818  0FED                     	;# 
   819  0FEE                     	;# 
   820  0FEF                     	;# 
   821  0000                     	;# 
   822  0001                     	;# 
   823  0002                     	;# 
   824  0003                     	;# 
   825  0004                     	;# 
   826  0005                     	;# 
   827  0006                     	;# 
   828  0007                     	;# 
   829  0008                     	;# 
   830  0009                     	;# 
   831  000A                     	;# 
   832  000B                     	;# 
   833  000C                     	;# 
   834  000D                     	;# 
   835  000E                     	;# 
   836  0010                     	;# 
   837  0011                     	;# 
   838  0012                     	;# 
   839  0013                     	;# 
   840  0014                     	;# 
   841  0015                     	;# 
   842  0015                     	;# 
   843  0016                     	;# 
   844  0016                     	;# 
   845  0017                     	;# 
   846  0018                     	;# 
   847  0019                     	;# 
   848  0019                     	;# 
   849  001A                     	;# 
   850  001B                     	;# 
   851  001C                     	;# 
   852  001D                     	;# 
   853  001E                     	;# 
   854  001F                     	;# 
   855  008C                     	;# 
   856  008D                     	;# 
   857  008E                     	;# 
   858  0090                     	;# 
   859  0091                     	;# 
   860  0092                     	;# 
   861  0093                     	;# 
   862  0094                     	;# 
   863  0097                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  009F                     	;# 
   870  010C                     	;# 
   871  010D                     	;# 
   872  010E                     	;# 
   873  0111                     	;# 
   874  0112                     	;# 
   875  0113                     	;# 
   876  0114                     	;# 
   877  0115                     	;# 
   878  0116                     	;# 
   879  0117                     	;# 
   880  0118                     	;# 
   881  0119                     	;# 
   882  018C                     	;# 
   883  018D                     	;# 
   884  018E                     	;# 
   885  0197                     	;# 
   886  0199                     	;# 
   887  0199                     	;# 
   888  0199                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019A                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019C                     	;# 
   900  019D                     	;# 
   901  019D                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019E                     	;# 
   905  019E                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  019F                     	;# 
   911  020C                     	;# 
   912  020D                     	;# 
   913  020E                     	;# 
   914  0211                     	;# 
   915  0211                     	;# 
   916  0212                     	;# 
   917  0212                     	;# 
   918  0213                     	;# 
   919  0213                     	;# 
   920  0214                     	;# 
   921  0214                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  028C                     	;# 
   931  028D                     	;# 
   932  028E                     	;# 
   933  0291                     	;# 
   934  0291                     	;# 
   935  0292                     	;# 
   936  0293                     	;# 
   937  0294                     	;# 
   938  0295                     	;# 
   939  0295                     	;# 
   940  0296                     	;# 
   941  0297                     	;# 
   942  0298                     	;# 
   943  029F                     	;# 
   944  030C                     	;# 
   945  030D                     	;# 
   946  030E                     	;# 
   947  0311                     	;# 
   948  0311                     	;# 
   949  0312                     	;# 
   950  0313                     	;# 
   951  0314                     	;# 
   952  0315                     	;# 
   953  0315                     	;# 
   954  0316                     	;# 
   955  0317                     	;# 
   956  0318                     	;# 
   957  038C                     	;# 
   958  038D                     	;# 
   959  038E                     	;# 
   960  0391                     	;# 
   961  0392                     	;# 
   962  0393                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0397                     	;# 
   967  0398                     	;# 
   968  0399                     	;# 
   969  039A                     	;# 
   970  039C                     	;# 
   971  039D                     	;# 
   972  039E                     	;# 
   973  039F                     	;# 
   974  0411                     	;# 
   975  0411                     	;# 
   976  0412                     	;# 
   977  0413                     	;# 
   978  0414                     	;# 
   979  0415                     	;# 
   980  0416                     	;# 
   981  0417                     	;# 
   982  0418                     	;# 
   983  0418                     	;# 
   984  0419                     	;# 
   985  041A                     	;# 
   986  041B                     	;# 
   987  041C                     	;# 
   988  041D                     	;# 
   989  041E                     	;# 
   990  041F                     	;# 
   991  0498                     	;# 
   992  0498                     	;# 
   993  0499                     	;# 
   994  049A                     	;# 
   995  049B                     	;# 
   996  049B                     	;# 
   997  049C                     	;# 
   998  049D                     	;# 
   999  049E                     	;# 
  1000  049F                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061C                     	;# 
  1009  061F                     	;# 
  1010  0691                     	;# 
  1011  0692                     	;# 
  1012  0693                     	;# 
  1013  0694                     	;# 
  1014  0695                     	;# 
  1015  0696                     	;# 
  1016  0697                     	;# 
  1017  0698                     	;# 
  1018  0699                     	;# 
  1019  0711                     	;# 
  1020  0712                     	;# 
  1021  0713                     	;# 
  1022  0714                     	;# 
  1023  0715                     	;# 
  1024  0716                     	;# 
  1025  0717                     	;# 
  1026  0718                     	;# 
  1027  0719                     	;# 
  1028  0891                     	;# 
  1029  0891                     	;# 
  1030  0891                     	;# 
  1031  0891                     	;# 
  1032  0891                     	;# 
  1033  0891                     	;# 
  1034  0892                     	;# 
  1035  0892                     	;# 
  1036  0892                     	;# 
  1037  0893                     	;# 
  1038  0893                     	;# 
  1039  0893                     	;# 
  1040  0893                     	;# 
  1041  0893                     	;# 
  1042  0893                     	;# 
  1043  0894                     	;# 
  1044  0894                     	;# 
  1045  0894                     	;# 
  1046  0895                     	;# 
  1047  0895                     	;# 
  1048  0895                     	;# 
  1049  0896                     	;# 
  1050  0896                     	;# 
  1051  0896                     	;# 
  1052  089B                     	;# 
  1053  0911                     	;# 
  1054  0912                     	;# 
  1055  0913                     	;# 
  1056  0914                     	;# 
  1057  0915                     	;# 
  1058  0916                     	;# 
  1059  0918                     	;# 
  1060  0919                     	;# 
  1061  091A                     	;# 
  1062  091B                     	;# 
  1063  091C                     	;# 
  1064  091D                     	;# 
  1065  091E                     	;# 
  1066  091F                     	;# 
  1067  0E0F                     	;# 
  1068  0E10                     	;# 
  1069  0E11                     	;# 
  1070  0E12                     	;# 
  1071  0E13                     	;# 
  1072  0E14                     	;# 
  1073  0E15                     	;# 
  1074  0E16                     	;# 
  1075  0E17                     	;# 
  1076  0E18                     	;# 
  1077  0E19                     	;# 
  1078  0E1A                     	;# 
  1079  0E1B                     	;# 
  1080  0E1C                     	;# 
  1081  0E20                     	;# 
  1082  0E21                     	;# 
  1083  0E22                     	;# 
  1084  0E24                     	;# 
  1085  0E25                     	;# 
  1086  0E28                     	;# 
  1087  0E29                     	;# 
  1088  0E2A                     	;# 
  1089  0E2B                     	;# 
  1090  0E2C                     	;# 
  1091  0E2D                     	;# 
  1092  0E2E                     	;# 
  1093  0E2F                     	;# 
  1094  0E90                     	;# 
  1095  0E91                     	;# 
  1096  0E92                     	;# 
  1097  0E94                     	;# 
  1098  0E95                     	;# 
  1099  0E9C                     	;# 
  1100  0E9D                     	;# 
  1101  0E9E                     	;# 
  1102  0E9F                     	;# 
  1103  0EA0                     	;# 
  1104  0EA1                     	;# 
  1105  0EA2                     	;# 
  1106  0EA3                     	;# 
  1107  0EA4                     	;# 
  1108  0EA5                     	;# 
  1109  0EA6                     	;# 
  1110  0EA7                     	;# 
  1111  0F0F                     	;# 
  1112  0F10                     	;# 
  1113  0F11                     	;# 
  1114  0F12                     	;# 
  1115  0F13                     	;# 
  1116  0F14                     	;# 
  1117  0F15                     	;# 
  1118  0F16                     	;# 
  1119  0F17                     	;# 
  1120  0F18                     	;# 
  1121  0F19                     	;# 
  1122  0F1A                     	;# 
  1123  0F1B                     	;# 
  1124  0F1C                     	;# 
  1125  0F1D                     	;# 
  1126  0F1E                     	;# 
  1127  0F1F                     	;# 
  1128  0F20                     	;# 
  1129  0F21                     	;# 
  1130  0F22                     	;# 
  1131  0F23                     	;# 
  1132  0F24                     	;# 
  1133  0F25                     	;# 
  1134  0F26                     	;# 
  1135  0F27                     	;# 
  1136  0F28                     	;# 
  1137  0F29                     	;# 
  1138  0F2A                     	;# 
  1139  0F2B                     	;# 
  1140  0F2C                     	;# 
  1141  0F2D                     	;# 
  1142  0F2E                     	;# 
  1143  0F2F                     	;# 
  1144  0F30                     	;# 
  1145  0F31                     	;# 
  1146  0F32                     	;# 
  1147  0F33                     	;# 
  1148  0F34                     	;# 
  1149  0F35                     	;# 
  1150  0F36                     	;# 
  1151  0F37                     	;# 
  1152  0FE4                     	;# 
  1153  0FE5                     	;# 
  1154  0FE6                     	;# 
  1155  0FE7                     	;# 
  1156  0FE8                     	;# 
  1157  0FE9                     	;# 
  1158  0FEA                     	;# 
  1159  0FEB                     	;# 
  1160  0FED                     	;# 
  1161  0FEE                     	;# 
  1162  0FEF                     	;# 
  1163  0000                     	;# 
  1164  0001                     	;# 
  1165  0002                     	;# 
  1166  0003                     	;# 
  1167  0004                     	;# 
  1168  0005                     	;# 
  1169  0006                     	;# 
  1170  0007                     	;# 
  1171  0008                     	;# 
  1172  0009                     	;# 
  1173  000A                     	;# 
  1174  000B                     	;# 
  1175  000C                     	;# 
  1176  000D                     	;# 
  1177  000E                     	;# 
  1178  0010                     	;# 
  1179  0011                     	;# 
  1180  0012                     	;# 
  1181  0013                     	;# 
  1182  0014                     	;# 
  1183  0015                     	;# 
  1184  0015                     	;# 
  1185  0016                     	;# 
  1186  0016                     	;# 
  1187  0017                     	;# 
  1188  0018                     	;# 
  1189  0019                     	;# 
  1190  0019                     	;# 
  1191  001A                     	;# 
  1192  001B                     	;# 
  1193  001C                     	;# 
  1194  001D                     	;# 
  1195  001E                     	;# 
  1196  001F                     	;# 
  1197  008C                     	;# 
  1198  008D                     	;# 
  1199  008E                     	;# 
  1200  0090                     	;# 
  1201  0091                     	;# 
  1202  0092                     	;# 
  1203  0093                     	;# 
  1204  0094                     	;# 
  1205  0097                     	;# 
  1206  009B                     	;# 
  1207  009B                     	;# 
  1208  009C                     	;# 
  1209  009D                     	;# 
  1210  009E                     	;# 
  1211  009F                     	;# 
  1212  010C                     	;# 
  1213  010D                     	;# 
  1214  010E                     	;# 
  1215  0111                     	;# 
  1216  0112                     	;# 
  1217  0113                     	;# 
  1218  0114                     	;# 
  1219  0115                     	;# 
  1220  0116                     	;# 
  1221  0117                     	;# 
  1222  0118                     	;# 
  1223  0119                     	;# 
  1224  018C                     	;# 
  1225  018D                     	;# 
  1226  018E                     	;# 
  1227  0197                     	;# 
  1228  0199                     	;# 
  1229  0199                     	;# 
  1230  0199                     	;# 
  1231  019A                     	;# 
  1232  019A                     	;# 
  1233  019A                     	;# 
  1234  019B                     	;# 
  1235  019B                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019B                     	;# 
  1239  019C                     	;# 
  1240  019C                     	;# 
  1241  019C                     	;# 
  1242  019D                     	;# 
  1243  019D                     	;# 
  1244  019D                     	;# 
  1245  019E                     	;# 
  1246  019E                     	;# 
  1247  019E                     	;# 
  1248  019F                     	;# 
  1249  019F                     	;# 
  1250  019F                     	;# 
  1251  019F                     	;# 
  1252  019F                     	;# 
  1253  020C                     	;# 
  1254  020D                     	;# 
  1255  020E                     	;# 
  1256  0211                     	;# 
  1257  0211                     	;# 
  1258  0212                     	;# 
  1259  0212                     	;# 
  1260  0213                     	;# 
  1261  0213                     	;# 
  1262  0214                     	;# 
  1263  0214                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0216                     	;# 
  1269  0216                     	;# 
  1270  0217                     	;# 
  1271  0217                     	;# 
  1272  028C                     	;# 
  1273  028D                     	;# 
  1274  028E                     	;# 
  1275  0291                     	;# 
  1276  0291                     	;# 
  1277  0292                     	;# 
  1278  0293                     	;# 
  1279  0294                     	;# 
  1280  0295                     	;# 
  1281  0295                     	;# 
  1282  0296                     	;# 
  1283  0297                     	;# 
  1284  0298                     	;# 
  1285  029F                     	;# 
  1286  030C                     	;# 
  1287  030D                     	;# 
  1288  030E                     	;# 
  1289  0311                     	;# 
  1290  0311                     	;# 
  1291  0312                     	;# 
  1292  0313                     	;# 
  1293  0314                     	;# 
  1294  0315                     	;# 
  1295  0315                     	;# 
  1296  0316                     	;# 
  1297  0317                     	;# 
  1298  0318                     	;# 
  1299  038C                     	;# 
  1300  038D                     	;# 
  1301  038E                     	;# 
  1302  0391                     	;# 
  1303  0392                     	;# 
  1304  0393                     	;# 
  1305  0394                     	;# 
  1306  0395                     	;# 
  1307  0396                     	;# 
  1308  0397                     	;# 
  1309  0398                     	;# 
  1310  0399                     	;# 
  1311  039A                     	;# 
  1312  039C                     	;# 
  1313  039D                     	;# 
  1314  039E                     	;# 
  1315  039F                     	;# 
  1316  0411                     	;# 
  1317  0411                     	;# 
  1318  0412                     	;# 
  1319  0413                     	;# 
  1320  0414                     	;# 
  1321  0415                     	;# 
  1322  0416                     	;# 
  1323  0417                     	;# 
  1324  0418                     	;# 
  1325  0418                     	;# 
  1326  0419                     	;# 
  1327  041A                     	;# 
  1328  041B                     	;# 
  1329  041C                     	;# 
  1330  041D                     	;# 
  1331  041E                     	;# 
  1332  041F                     	;# 
  1333  0498                     	;# 
  1334  0498                     	;# 
  1335  0499                     	;# 
  1336  049A                     	;# 
  1337  049B                     	;# 
  1338  049B                     	;# 
  1339  049C                     	;# 
  1340  049D                     	;# 
  1341  049E                     	;# 
  1342  049F                     	;# 
  1343  0617                     	;# 
  1344  0618                     	;# 
  1345  0619                     	;# 
  1346  0619                     	;# 
  1347  061A                     	;# 
  1348  061B                     	;# 
  1349  061C                     	;# 
  1350  061C                     	;# 
  1351  061F                     	;# 
  1352  0691                     	;# 
  1353  0692                     	;# 
  1354  0693                     	;# 
  1355  0694                     	;# 
  1356  0695                     	;# 
  1357  0696                     	;# 
  1358  0697                     	;# 
  1359  0698                     	;# 
  1360  0699                     	;# 
  1361  0711                     	;# 
  1362  0712                     	;# 
  1363  0713                     	;# 
  1364  0714                     	;# 
  1365  0715                     	;# 
  1366  0716                     	;# 
  1367  0717                     	;# 
  1368  0718                     	;# 
  1369  0719                     	;# 
  1370  0891                     	;# 
  1371  0891                     	;# 
  1372  0891                     	;# 
  1373  0891                     	;# 
  1374  0891                     	;# 
  1375  0891                     	;# 
  1376  0892                     	;# 
  1377  0892                     	;# 
  1378  0892                     	;# 
  1379  0893                     	;# 
  1380  0893                     	;# 
  1381  0893                     	;# 
  1382  0893                     	;# 
  1383  0893                     	;# 
  1384  0893                     	;# 
  1385  0894                     	;# 
  1386  0894                     	;# 
  1387  0894                     	;# 
  1388  0895                     	;# 
  1389  0895                     	;# 
  1390  0895                     	;# 
  1391  0896                     	;# 
  1392  0896                     	;# 
  1393  0896                     	;# 
  1394  089B                     	;# 
  1395  0911                     	;# 
  1396  0912                     	;# 
  1397  0913                     	;# 
  1398  0914                     	;# 
  1399  0915                     	;# 
  1400  0916                     	;# 
  1401  0918                     	;# 
  1402  0919                     	;# 
  1403  091A                     	;# 
  1404  091B                     	;# 
  1405  091C                     	;# 
  1406  091D                     	;# 
  1407  091E                     	;# 
  1408  091F                     	;# 
  1409  0E0F                     	;# 
  1410  0E10                     	;# 
  1411  0E11                     	;# 
  1412  0E12                     	;# 
  1413  0E13                     	;# 
  1414  0E14                     	;# 
  1415  0E15                     	;# 
  1416  0E16                     	;# 
  1417  0E17                     	;# 
  1418  0E18                     	;# 
  1419  0E19                     	;# 
  1420  0E1A                     	;# 
  1421  0E1B                     	;# 
  1422  0E1C                     	;# 
  1423  0E20                     	;# 
  1424  0E21                     	;# 
  1425  0E22                     	;# 
  1426  0E24                     	;# 
  1427  0E25                     	;# 
  1428  0E28                     	;# 
  1429  0E29                     	;# 
  1430  0E2A                     	;# 
  1431  0E2B                     	;# 
  1432  0E2C                     	;# 
  1433  0E2D                     	;# 
  1434  0E2E                     	;# 
  1435  0E2F                     	;# 
  1436  0E90                     	;# 
  1437  0E91                     	;# 
  1438  0E92                     	;# 
  1439  0E94                     	;# 
  1440  0E95                     	;# 
  1441  0E9C                     	;# 
  1442  0E9D                     	;# 
  1443  0E9E                     	;# 
  1444  0E9F                     	;# 
  1445  0EA0                     	;# 
  1446  0EA1                     	;# 
  1447  0EA2                     	;# 
  1448  0EA3                     	;# 
  1449  0EA4                     	;# 
  1450  0EA5                     	;# 
  1451  0EA6                     	;# 
  1452  0EA7                     	;# 
  1453  0F0F                     	;# 
  1454  0F10                     	;# 
  1455  0F11                     	;# 
  1456  0F12                     	;# 
  1457  0F13                     	;# 
  1458  0F14                     	;# 
  1459  0F15                     	;# 
  1460  0F16                     	;# 
  1461  0F17                     	;# 
  1462  0F18                     	;# 
  1463  0F19                     	;# 
  1464  0F1A                     	;# 
  1465  0F1B                     	;# 
  1466  0F1C                     	;# 
  1467  0F1D                     	;# 
  1468  0F1E                     	;# 
  1469  0F1F                     	;# 
  1470  0F20                     	;# 
  1471  0F21                     	;# 
  1472  0F22                     	;# 
  1473  0F23                     	;# 
  1474  0F24                     	;# 
  1475  0F25                     	;# 
  1476  0F26                     	;# 
  1477  0F27                     	;# 
  1478  0F28                     	;# 
  1479  0F29                     	;# 
  1480  0F2A                     	;# 
  1481  0F2B                     	;# 
  1482  0F2C                     	;# 
  1483  0F2D                     	;# 
  1484  0F2E                     	;# 
  1485  0F2F                     	;# 
  1486  0F30                     	;# 
  1487  0F31                     	;# 
  1488  0F32                     	;# 
  1489  0F33                     	;# 
  1490  0F34                     	;# 
  1491  0F35                     	;# 
  1492  0F36                     	;# 
  1493  0F37                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  000E                     	;# 
  1520  0010                     	;# 
  1521  0011                     	;# 
  1522  0012                     	;# 
  1523  0013                     	;# 
  1524  0014                     	;# 
  1525  0015                     	;# 
  1526  0015                     	;# 
  1527  0016                     	;# 
  1528  0016                     	;# 
  1529  0017                     	;# 
  1530  0018                     	;# 
  1531  0019                     	;# 
  1532  0019                     	;# 
  1533  001A                     	;# 
  1534  001B                     	;# 
  1535  001C                     	;# 
  1536  001D                     	;# 
  1537  001E                     	;# 
  1538  001F                     	;# 
  1539  008C                     	;# 
  1540  008D                     	;# 
  1541  008E                     	;# 
  1542  0090                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0093                     	;# 
  1546  0094                     	;# 
  1547  0097                     	;# 
  1548  009B                     	;# 
  1549  009B                     	;# 
  1550  009C                     	;# 
  1551  009D                     	;# 
  1552  009E                     	;# 
  1553  009F                     	;# 
  1554  010C                     	;# 
  1555  010D                     	;# 
  1556  010E                     	;# 
  1557  0111                     	;# 
  1558  0112                     	;# 
  1559  0113                     	;# 
  1560  0114                     	;# 
  1561  0115                     	;# 
  1562  0116                     	;# 
  1563  0117                     	;# 
  1564  0118                     	;# 
  1565  0119                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  018E                     	;# 
  1569  0197                     	;# 
  1570  0199                     	;# 
  1571  0199                     	;# 
  1572  0199                     	;# 
  1573  019A                     	;# 
  1574  019A                     	;# 
  1575  019A                     	;# 
  1576  019B                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019C                     	;# 
  1582  019C                     	;# 
  1583  019C                     	;# 
  1584  019D                     	;# 
  1585  019D                     	;# 
  1586  019D                     	;# 
  1587  019E                     	;# 
  1588  019E                     	;# 
  1589  019E                     	;# 
  1590  019F                     	;# 
  1591  019F                     	;# 
  1592  019F                     	;# 
  1593  019F                     	;# 
  1594  019F                     	;# 
  1595  020C                     	;# 
  1596  020D                     	;# 
  1597  020E                     	;# 
  1598  0211                     	;# 
  1599  0211                     	;# 
  1600  0212                     	;# 
  1601  0212                     	;# 
  1602  0213                     	;# 
  1603  0213                     	;# 
  1604  0214                     	;# 
  1605  0214                     	;# 
  1606  0215                     	;# 
  1607  0215                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0216                     	;# 
  1611  0216                     	;# 
  1612  0217                     	;# 
  1613  0217                     	;# 
  1614  028C                     	;# 
  1615  028D                     	;# 
  1616  028E                     	;# 
  1617  0291                     	;# 
  1618  0291                     	;# 
  1619  0292                     	;# 
  1620  0293                     	;# 
  1621  0294                     	;# 
  1622  0295                     	;# 
  1623  0295                     	;# 
  1624  0296                     	;# 
  1625  0297                     	;# 
  1626  0298                     	;# 
  1627  029F                     	;# 
  1628  030C                     	;# 
  1629  030D                     	;# 
  1630  030E                     	;# 
  1631  0311                     	;# 
  1632  0311                     	;# 
  1633  0312                     	;# 
  1634  0313                     	;# 
  1635  0314                     	;# 
  1636  0315                     	;# 
  1637  0315                     	;# 
  1638  0316                     	;# 
  1639  0317                     	;# 
  1640  0318                     	;# 
  1641  038C                     	;# 
  1642  038D                     	;# 
  1643  038E                     	;# 
  1644  0391                     	;# 
  1645  0392                     	;# 
  1646  0393                     	;# 
  1647  0394                     	;# 
  1648  0395                     	;# 
  1649  0396                     	;# 
  1650  0397                     	;# 
  1651  0398                     	;# 
  1652  0399                     	;# 
  1653  039A                     	;# 
  1654  039C                     	;# 
  1655  039D                     	;# 
  1656  039E                     	;# 
  1657  039F                     	;# 
  1658  0411                     	;# 
  1659  0411                     	;# 
  1660  0412                     	;# 
  1661  0413                     	;# 
  1662  0414                     	;# 
  1663  0415                     	;# 
  1664  0416                     	;# 
  1665  0417                     	;# 
  1666  0418                     	;# 
  1667  0418                     	;# 
  1668  0419                     	;# 
  1669  041A                     	;# 
  1670  041B                     	;# 
  1671  041C                     	;# 
  1672  041D                     	;# 
  1673  041E                     	;# 
  1674  041F                     	;# 
  1675  0498                     	;# 
  1676  0498                     	;# 
  1677  0499                     	;# 
  1678  049A                     	;# 
  1679  049B                     	;# 
  1680  049B                     	;# 
  1681  049C                     	;# 
  1682  049D                     	;# 
  1683  049E                     	;# 
  1684  049F                     	;# 
  1685  0617                     	;# 
  1686  0618                     	;# 
  1687  0619                     	;# 
  1688  0619                     	;# 
  1689  061A                     	;# 
  1690  061B                     	;# 
  1691  061C                     	;# 
  1692  061C                     	;# 
  1693  061F                     	;# 
  1694  0691                     	;# 
  1695  0692                     	;# 
  1696  0693                     	;# 
  1697  0694                     	;# 
  1698  0695                     	;# 
  1699  0696                     	;# 
  1700  0697                     	;# 
  1701  0698                     	;# 
  1702  0699                     	;# 
  1703  0711                     	;# 
  1704  0712                     	;# 
  1705  0713                     	;# 
  1706  0714                     	;# 
  1707  0715                     	;# 
  1708  0716                     	;# 
  1709  0717                     	;# 
  1710  0718                     	;# 
  1711  0719                     	;# 
  1712  0891                     	;# 
  1713  0891                     	;# 
  1714  0891                     	;# 
  1715  0891                     	;# 
  1716  0891                     	;# 
  1717  0891                     	;# 
  1718  0892                     	;# 
  1719  0892                     	;# 
  1720  0892                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0894                     	;# 
  1728  0894                     	;# 
  1729  0894                     	;# 
  1730  0895                     	;# 
  1731  0895                     	;# 
  1732  0895                     	;# 
  1733  0896                     	;# 
  1734  0896                     	;# 
  1735  0896                     	;# 
  1736  089B                     	;# 
  1737  0911                     	;# 
  1738  0912                     	;# 
  1739  0913                     	;# 
  1740  0914                     	;# 
  1741  0915                     	;# 
  1742  0916                     	;# 
  1743  0918                     	;# 
  1744  0919                     	;# 
  1745  091A                     	;# 
  1746  091B                     	;# 
  1747  091C                     	;# 
  1748  091D                     	;# 
  1749  091E                     	;# 
  1750  091F                     	;# 
  1751  0E0F                     	;# 
  1752  0E10                     	;# 
  1753  0E11                     	;# 
  1754  0E12                     	;# 
  1755  0E13                     	;# 
  1756  0E14                     	;# 
  1757  0E15                     	;# 
  1758  0E16                     	;# 
  1759  0E17                     	;# 
  1760  0E18                     	;# 
  1761  0E19                     	;# 
  1762  0E1A                     	;# 
  1763  0E1B                     	;# 
  1764  0E1C                     	;# 
  1765  0E20                     	;# 
  1766  0E21                     	;# 
  1767  0E22                     	;# 
  1768  0E24                     	;# 
  1769  0E25                     	;# 
  1770  0E28                     	;# 
  1771  0E29                     	;# 
  1772  0E2A                     	;# 
  1773  0E2B                     	;# 
  1774  0E2C                     	;# 
  1775  0E2D                     	;# 
  1776  0E2E                     	;# 
  1777  0E2F                     	;# 
  1778  0E90                     	;# 
  1779  0E91                     	;# 
  1780  0E92                     	;# 
  1781  0E94                     	;# 
  1782  0E95                     	;# 
  1783  0E9C                     	;# 
  1784  0E9D                     	;# 
  1785  0E9E                     	;# 
  1786  0E9F                     	;# 
  1787  0EA0                     	;# 
  1788  0EA1                     	;# 
  1789  0EA2                     	;# 
  1790  0EA3                     	;# 
  1791  0EA4                     	;# 
  1792  0EA5                     	;# 
  1793  0EA6                     	;# 
  1794  0EA7                     	;# 
  1795  0F0F                     	;# 
  1796  0F10                     	;# 
  1797  0F11                     	;# 
  1798  0F12                     	;# 
  1799  0F13                     	;# 
  1800  0F14                     	;# 
  1801  0F15                     	;# 
  1802  0F16                     	;# 
  1803  0F17                     	;# 
  1804  0F18                     	;# 
  1805  0F19                     	;# 
  1806  0F1A                     	;# 
  1807  0F1B                     	;# 
  1808  0F1C                     	;# 
  1809  0F1D                     	;# 
  1810  0F1E                     	;# 
  1811  0F1F                     	;# 
  1812  0F20                     	;# 
  1813  0F21                     	;# 
  1814  0F22                     	;# 
  1815  0F23                     	;# 
  1816  0F24                     	;# 
  1817  0F25                     	;# 
  1818  0F26                     	;# 
  1819  0F27                     	;# 
  1820  0F28                     	;# 
  1821  0F29                     	;# 
  1822  0F2A                     	;# 
  1823  0F2B                     	;# 
  1824  0F2C                     	;# 
  1825  0F2D                     	;# 
  1826  0F2E                     	;# 
  1827  0F2F                     	;# 
  1828  0F30                     	;# 
  1829  0F31                     	;# 
  1830  0F32                     	;# 
  1831  0F33                     	;# 
  1832  0F34                     	;# 
  1833  0F35                     	;# 
  1834  0F36                     	;# 
  1835  0F37                     	;# 
  1836  0FE4                     	;# 
  1837  0FE5                     	;# 
  1838  0FE6                     	;# 
  1839  0FE7                     	;# 
  1840  0FE8                     	;# 
  1841  0FE9                     	;# 
  1842  0FEA                     	;# 
  1843  0FEB                     	;# 
  1844  0FED                     	;# 
  1845  0FEE                     	;# 
  1846  0FEF                     	;# 
  1847  0000                     	;# 
  1848  0001                     	;# 
  1849  0002                     	;# 
  1850  0003                     	;# 
  1851  0004                     	;# 
  1852  0005                     	;# 
  1853  0006                     	;# 
  1854  0007                     	;# 
  1855  0008                     	;# 
  1856  0009                     	;# 
  1857  000A                     	;# 
  1858  000B                     	;# 
  1859  000C                     	;# 
  1860  000D                     	;# 
  1861  000E                     	;# 
  1862  0010                     	;# 
  1863  0011                     	;# 
  1864  0012                     	;# 
  1865  0013                     	;# 
  1866  0014                     	;# 
  1867  0015                     	;# 
  1868  0015                     	;# 
  1869  0016                     	;# 
  1870  0016                     	;# 
  1871  0017                     	;# 
  1872  0018                     	;# 
  1873  0019                     	;# 
  1874  0019                     	;# 
  1875  001A                     	;# 
  1876  001B                     	;# 
  1877  001C                     	;# 
  1878  001D                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  008E                     	;# 
  1884  0090                     	;# 
  1885  0091                     	;# 
  1886  0092                     	;# 
  1887  0093                     	;# 
  1888  0094                     	;# 
  1889  0097                     	;# 
  1890  009B                     	;# 
  1891  009B                     	;# 
  1892  009C                     	;# 
  1893  009D                     	;# 
  1894  009E                     	;# 
  1895  009F                     	;# 
  1896  010C                     	;# 
  1897  010D                     	;# 
  1898  010E                     	;# 
  1899  0111                     	;# 
  1900  0112                     	;# 
  1901  0113                     	;# 
  1902  0114                     	;# 
  1903  0115                     	;# 
  1904  0116                     	;# 
  1905  0117                     	;# 
  1906  0118                     	;# 
  1907  0119                     	;# 
  1908  018C                     	;# 
  1909  018D                     	;# 
  1910  018E                     	;# 
  1911  0197                     	;# 
  1912  0199                     	;# 
  1913  0199                     	;# 
  1914  0199                     	;# 
  1915  019A                     	;# 
  1916  019A                     	;# 
  1917  019A                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019C                     	;# 
  1924  019C                     	;# 
  1925  019C                     	;# 
  1926  019D                     	;# 
  1927  019D                     	;# 
  1928  019D                     	;# 
  1929  019E                     	;# 
  1930  019E                     	;# 
  1931  019E                     	;# 
  1932  019F                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  020C                     	;# 
  1938  020D                     	;# 
  1939  020E                     	;# 
  1940  0211                     	;# 
  1941  0211                     	;# 
  1942  0212                     	;# 
  1943  0212                     	;# 
  1944  0213                     	;# 
  1945  0213                     	;# 
  1946  0214                     	;# 
  1947  0214                     	;# 
  1948  0215                     	;# 
  1949  0215                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0216                     	;# 
  1953  0216                     	;# 
  1954  0217                     	;# 
  1955  0217                     	;# 
  1956  028C                     	;# 
  1957  028D                     	;# 
  1958  028E                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0297                     	;# 
  1968  0298                     	;# 
  1969  029F                     	;# 
  1970  030C                     	;# 
  1971  030D                     	;# 
  1972  030E                     	;# 
  1973  0311                     	;# 
  1974  0311                     	;# 
  1975  0312                     	;# 
  1976  0313                     	;# 
  1977  0314                     	;# 
  1978  0315                     	;# 
  1979  0315                     	;# 
  1980  0316                     	;# 
  1981  0317                     	;# 
  1982  0318                     	;# 
  1983  038C                     	;# 
  1984  038D                     	;# 
  1985  038E                     	;# 
  1986  0391                     	;# 
  1987  0392                     	;# 
  1988  0393                     	;# 
  1989  0394                     	;# 
  1990  0395                     	;# 
  1991  0396                     	;# 
  1992  0397                     	;# 
  1993  0398                     	;# 
  1994  0399                     	;# 
  1995  039A                     	;# 
  1996  039C                     	;# 
  1997  039D                     	;# 
  1998  039E                     	;# 
  1999  039F                     	;# 
  2000  0411                     	;# 
  2001  0411                     	;# 
  2002  0412                     	;# 
  2003  0413                     	;# 
  2004  0414                     	;# 
  2005  0415                     	;# 
  2006  0416                     	;# 
  2007  0417                     	;# 
  2008  0418                     	;# 
  2009  0418                     	;# 
  2010  0419                     	;# 
  2011  041A                     	;# 
  2012  041B                     	;# 
  2013  041C                     	;# 
  2014  041D                     	;# 
  2015  041E                     	;# 
  2016  041F                     	;# 
  2017  0498                     	;# 
  2018  0498                     	;# 
  2019  0499                     	;# 
  2020  049A                     	;# 
  2021  049B                     	;# 
  2022  049B                     	;# 
  2023  049C                     	;# 
  2024  049D                     	;# 
  2025  049E                     	;# 
  2026  049F                     	;# 
  2027  0617                     	;# 
  2028  0618                     	;# 
  2029  0619                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061C                     	;# 
  2035  061F                     	;# 
  2036  0691                     	;# 
  2037  0692                     	;# 
  2038  0693                     	;# 
  2039  0694                     	;# 
  2040  0695                     	;# 
  2041  0696                     	;# 
  2042  0697                     	;# 
  2043  0698                     	;# 
  2044  0699                     	;# 
  2045  0711                     	;# 
  2046  0712                     	;# 
  2047  0713                     	;# 
  2048  0714                     	;# 
  2049  0715                     	;# 
  2050  0716                     	;# 
  2051  0717                     	;# 
  2052  0718                     	;# 
  2053  0719                     	;# 
  2054  0891                     	;# 
  2055  0891                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0892                     	;# 
  2061  0892                     	;# 
  2062  0892                     	;# 
  2063  0893                     	;# 
  2064  0893                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0894                     	;# 
  2070  0894                     	;# 
  2071  0894                     	;# 
  2072  0895                     	;# 
  2073  0895                     	;# 
  2074  0895                     	;# 
  2075  0896                     	;# 
  2076  0896                     	;# 
  2077  0896                     	;# 
  2078  089B                     	;# 
  2079  0911                     	;# 
  2080  0912                     	;# 
  2081  0913                     	;# 
  2082  0914                     	;# 
  2083  0915                     	;# 
  2084  0916                     	;# 
  2085  0918                     	;# 
  2086  0919                     	;# 
  2087  091A                     	;# 
  2088  091B                     	;# 
  2089  091C                     	;# 
  2090  091D                     	;# 
  2091  091E                     	;# 
  2092  091F                     	;# 
  2093  0E0F                     	;# 
  2094  0E10                     	;# 
  2095  0E11                     	;# 
  2096  0E12                     	;# 
  2097  0E13                     	;# 
  2098  0E14                     	;# 
  2099  0E15                     	;# 
  2100  0E16                     	;# 
  2101  0E17                     	;# 
  2102  0E18                     	;# 
  2103  0E19                     	;# 
  2104  0E1A                     	;# 
  2105  0E1B                     	;# 
  2106  0E1C                     	;# 
  2107  0E20                     	;# 
  2108  0E21                     	;# 
  2109  0E22                     	;# 
  2110  0E24                     	;# 
  2111  0E25                     	;# 
  2112  0E28                     	;# 
  2113  0E29                     	;# 
  2114  0E2A                     	;# 
  2115  0E2B                     	;# 
  2116  0E2C                     	;# 
  2117  0E2D                     	;# 
  2118  0E2E                     	;# 
  2119  0E2F                     	;# 
  2120  0E90                     	;# 
  2121  0E91                     	;# 
  2122  0E92                     	;# 
  2123  0E94                     	;# 
  2124  0E95                     	;# 
  2125  0E9C                     	;# 
  2126  0E9D                     	;# 
  2127  0E9E                     	;# 
  2128  0E9F                     	;# 
  2129  0EA0                     	;# 
  2130  0EA1                     	;# 
  2131  0EA2                     	;# 
  2132  0EA3                     	;# 
  2133  0EA4                     	;# 
  2134  0EA5                     	;# 
  2135  0EA6                     	;# 
  2136  0EA7                     	;# 
  2137  0F0F                     	;# 
  2138  0F10                     	;# 
  2139  0F11                     	;# 
  2140  0F12                     	;# 
  2141  0F13                     	;# 
  2142  0F14                     	;# 
  2143  0F15                     	;# 
  2144  0F16                     	;# 
  2145  0F17                     	;# 
  2146  0F18                     	;# 
  2147  0F19                     	;# 
  2148  0F1A                     	;# 
  2149  0F1B                     	;# 
  2150  0F1C                     	;# 
  2151  0F1D                     	;# 
  2152  0F1E                     	;# 
  2153  0F1F                     	;# 
  2154  0F20                     	;# 
  2155  0F21                     	;# 
  2156  0F22                     	;# 
  2157  0F23                     	;# 
  2158  0F24                     	;# 
  2159  0F25                     	;# 
  2160  0F26                     	;# 
  2161  0F27                     	;# 
  2162  0F28                     	;# 
  2163  0F29                     	;# 
  2164  0F2A                     	;# 
  2165  0F2B                     	;# 
  2166  0F2C                     	;# 
  2167  0F2D                     	;# 
  2168  0F2E                     	;# 
  2169  0F2F                     	;# 
  2170  0F30                     	;# 
  2171  0F31                     	;# 
  2172  0F32                     	;# 
  2173  0F33                     	;# 
  2174  0F34                     	;# 
  2175  0F35                     	;# 
  2176  0F36                     	;# 
  2177  0F37                     	;# 
  2178  0FE4                     	;# 
  2179  0FE5                     	;# 
  2180  0FE6                     	;# 
  2181  0FE7                     	;# 
  2182  0FE8                     	;# 
  2183  0FE9                     	;# 
  2184  0FEA                     	;# 
  2185  0FEB                     	;# 
  2186  0FED                     	;# 
  2187  0FEE                     	;# 
  2188  0FEF                     	;# 
  2189  0000                     	;# 
  2190  0001                     	;# 
  2191  0002                     	;# 
  2192  0003                     	;# 
  2193  0004                     	;# 
  2194  0005                     	;# 
  2195  0006                     	;# 
  2196  0007                     	;# 
  2197  0008                     	;# 
  2198  0009                     	;# 
  2199  000A                     	;# 
  2200  000B                     	;# 
  2201  000C                     	;# 
  2202  000D                     	;# 
  2203  000E                     	;# 
  2204  0010                     	;# 
  2205  0011                     	;# 
  2206  0012                     	;# 
  2207  0013                     	;# 
  2208  0014                     	;# 
  2209  0015                     	;# 
  2210  0015                     	;# 
  2211  0016                     	;# 
  2212  0016                     	;# 
  2213  0017                     	;# 
  2214  0018                     	;# 
  2215  0019                     	;# 
  2216  0019                     	;# 
  2217  001A                     	;# 
  2218  001B                     	;# 
  2219  001C                     	;# 
  2220  001D                     	;# 
  2221  001E                     	;# 
  2222  001F                     	;# 
  2223  008C                     	;# 
  2224  008D                     	;# 
  2225  008E                     	;# 
  2226  0090                     	;# 
  2227  0091                     	;# 
  2228  0092                     	;# 
  2229  0093                     	;# 
  2230  0094                     	;# 
  2231  0097                     	;# 
  2232  009B                     	;# 
  2233  009B                     	;# 
  2234  009C                     	;# 
  2235  009D                     	;# 
  2236  009E                     	;# 
  2237  009F                     	;# 
  2238  010C                     	;# 
  2239  010D                     	;# 
  2240  010E                     	;# 
  2241  0111                     	;# 
  2242  0112                     	;# 
  2243  0113                     	;# 
  2244  0114                     	;# 
  2245  0115                     	;# 
  2246  0116                     	;# 
  2247  0117                     	;# 
  2248  0118                     	;# 
  2249  0119                     	;# 
  2250  018C                     	;# 
  2251  018D                     	;# 
  2252  018E                     	;# 
  2253  0197                     	;# 
  2254  0199                     	;# 
  2255  0199                     	;# 
  2256  0199                     	;# 
  2257  019A                     	;# 
  2258  019A                     	;# 
  2259  019A                     	;# 
  2260  019B                     	;# 
  2261  019B                     	;# 
  2262  019B                     	;# 
  2263  019B                     	;# 
  2264  019B                     	;# 
  2265  019C                     	;# 
  2266  019C                     	;# 
  2267  019C                     	;# 
  2268  019D                     	;# 
  2269  019D                     	;# 
  2270  019D                     	;# 
  2271  019E                     	;# 
  2272  019E                     	;# 
  2273  019E                     	;# 
  2274  019F                     	;# 
  2275  019F                     	;# 
  2276  019F                     	;# 
  2277  019F                     	;# 
  2278  019F                     	;# 
  2279  020C                     	;# 
  2280  020D                     	;# 
  2281  020E                     	;# 
  2282  0211                     	;# 
  2283  0211                     	;# 
  2284  0212                     	;# 
  2285  0212                     	;# 
  2286  0213                     	;# 
  2287  0213                     	;# 
  2288  0214                     	;# 
  2289  0214                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0215                     	;# 
  2294  0216                     	;# 
  2295  0216                     	;# 
  2296  0217                     	;# 
  2297  0217                     	;# 
  2298  028C                     	;# 
  2299  028D                     	;# 
  2300  028E                     	;# 
  2301  0291                     	;# 
  2302  0291                     	;# 
  2303  0292                     	;# 
  2304  0293                     	;# 
  2305  0294                     	;# 
  2306  0295                     	;# 
  2307  0295                     	;# 
  2308  0296                     	;# 
  2309  0297                     	;# 
  2310  0298                     	;# 
  2311  029F                     	;# 
  2312  030C                     	;# 
  2313  030D                     	;# 
  2314  030E                     	;# 
  2315  0311                     	;# 
  2316  0311                     	;# 
  2317  0312                     	;# 
  2318  0313                     	;# 
  2319  0314                     	;# 
  2320  0315                     	;# 
  2321  0315                     	;# 
  2322  0316                     	;# 
  2323  0317                     	;# 
  2324  0318                     	;# 
  2325  038C                     	;# 
  2326  038D                     	;# 
  2327  038E                     	;# 
  2328  0391                     	;# 
  2329  0392                     	;# 
  2330  0393                     	;# 
  2331  0394                     	;# 
  2332  0395                     	;# 
  2333  0396                     	;# 
  2334  0397                     	;# 
  2335  0398                     	;# 
  2336  0399                     	;# 
  2337  039A                     	;# 
  2338  039C                     	;# 
  2339  039D                     	;# 
  2340  039E                     	;# 
  2341  039F                     	;# 
  2342  0411                     	;# 
  2343  0411                     	;# 
  2344  0412                     	;# 
  2345  0413                     	;# 
  2346  0414                     	;# 
  2347  0415                     	;# 
  2348  0416                     	;# 
  2349  0417                     	;# 
  2350  0418                     	;# 
  2351  0418                     	;# 
  2352  0419                     	;# 
  2353  041A                     	;# 
  2354  041B                     	;# 
  2355  041C                     	;# 
  2356  041D                     	;# 
  2357  041E                     	;# 
  2358  041F                     	;# 
  2359  0498                     	;# 
  2360  0498                     	;# 
  2361  0499                     	;# 
  2362  049A                     	;# 
  2363  049B                     	;# 
  2364  049B                     	;# 
  2365  049C                     	;# 
  2366  049D                     	;# 
  2367  049E                     	;# 
  2368  049F                     	;# 
  2369  0617                     	;# 
  2370  0618                     	;# 
  2371  0619                     	;# 
  2372  0619                     	;# 
  2373  061A                     	;# 
  2374  061B                     	;# 
  2375  061C                     	;# 
  2376  061C                     	;# 
  2377  061F                     	;# 
  2378  0691                     	;# 
  2379  0692                     	;# 
  2380  0693                     	;# 
  2381  0694                     	;# 
  2382  0695                     	;# 
  2383  0696                     	;# 
  2384  0697                     	;# 
  2385  0698                     	;# 
  2386  0699                     	;# 
  2387  0711                     	;# 
  2388  0712                     	;# 
  2389  0713                     	;# 
  2390  0714                     	;# 
  2391  0715                     	;# 
  2392  0716                     	;# 
  2393  0717                     	;# 
  2394  0718                     	;# 
  2395  0719                     	;# 
  2396  0891                     	;# 
  2397  0891                     	;# 
  2398  0891                     	;# 
  2399  0891                     	;# 
  2400  0891                     	;# 
  2401  0891                     	;# 
  2402  0892                     	;# 
  2403  0892                     	;# 
  2404  0892                     	;# 
  2405  0893                     	;# 
  2406  0893                     	;# 
  2407  0893                     	;# 
  2408  0893                     	;# 
  2409  0893                     	;# 
  2410  0893                     	;# 
  2411  0894                     	;# 
  2412  0894                     	;# 
  2413  0894                     	;# 
  2414  0895                     	;# 
  2415  0895                     	;# 
  2416  0895                     	;# 
  2417  0896                     	;# 
  2418  0896                     	;# 
  2419  0896                     	;# 
  2420  089B                     	;# 
  2421  0911                     	;# 
  2422  0912                     	;# 
  2423  0913                     	;# 
  2424  0914                     	;# 
  2425  0915                     	;# 
  2426  0916                     	;# 
  2427  0918                     	;# 
  2428  0919                     	;# 
  2429  091A                     	;# 
  2430  091B                     	;# 
  2431  091C                     	;# 
  2432  091D                     	;# 
  2433  091E                     	;# 
  2434  091F                     	;# 
  2435  0E0F                     	;# 
  2436  0E10                     	;# 
  2437  0E11                     	;# 
  2438  0E12                     	;# 
  2439  0E13                     	;# 
  2440  0E14                     	;# 
  2441  0E15                     	;# 
  2442  0E16                     	;# 
  2443  0E17                     	;# 
  2444  0E18                     	;# 
  2445  0E19                     	;# 
  2446  0E1A                     	;# 
  2447  0E1B                     	;# 
  2448  0E1C                     	;# 
  2449  0E20                     	;# 
  2450  0E21                     	;# 
  2451  0E22                     	;# 
  2452  0E24                     	;# 
  2453  0E25                     	;# 
  2454  0E28                     	;# 
  2455  0E29                     	;# 
  2456  0E2A                     	;# 
  2457  0E2B                     	;# 
  2458  0E2C                     	;# 
  2459  0E2D                     	;# 
  2460  0E2E                     	;# 
  2461  0E2F                     	;# 
  2462  0E90                     	;# 
  2463  0E91                     	;# 
  2464  0E92                     	;# 
  2465  0E94                     	;# 
  2466  0E95                     	;# 
  2467  0E9C                     	;# 
  2468  0E9D                     	;# 
  2469  0E9E                     	;# 
  2470  0E9F                     	;# 
  2471  0EA0                     	;# 
  2472  0EA1                     	;# 
  2473  0EA2                     	;# 
  2474  0EA3                     	;# 
  2475  0EA4                     	;# 
  2476  0EA5                     	;# 
  2477  0EA6                     	;# 
  2478  0EA7                     	;# 
  2479  0F0F                     	;# 
  2480  0F10                     	;# 
  2481  0F11                     	;# 
  2482  0F12                     	;# 
  2483  0F13                     	;# 
  2484  0F14                     	;# 
  2485  0F15                     	;# 
  2486  0F16                     	;# 
  2487  0F17                     	;# 
  2488  0F18                     	;# 
  2489  0F19                     	;# 
  2490  0F1A                     	;# 
  2491  0F1B                     	;# 
  2492  0F1C                     	;# 
  2493  0F1D                     	;# 
  2494  0F1E                     	;# 
  2495  0F1F                     	;# 
  2496  0F20                     	;# 
  2497  0F21                     	;# 
  2498  0F22                     	;# 
  2499  0F23                     	;# 
  2500  0F24                     	;# 
  2501  0F25                     	;# 
  2502  0F26                     	;# 
  2503  0F27                     	;# 
  2504  0F28                     	;# 
  2505  0F29                     	;# 
  2506  0F2A                     	;# 
  2507  0F2B                     	;# 
  2508  0F2C                     	;# 
  2509  0F2D                     	;# 
  2510  0F2E                     	;# 
  2511  0F2F                     	;# 
  2512  0F30                     	;# 
  2513  0F31                     	;# 
  2514  0F32                     	;# 
  2515  0F33                     	;# 
  2516  0F34                     	;# 
  2517  0F35                     	;# 
  2518  0F36                     	;# 
  2519  0F37                     	;# 
  2520  0FE4                     	;# 
  2521  0FE5                     	;# 
  2522  0FE6                     	;# 
  2523  0FE7                     	;# 
  2524  0FE8                     	;# 
  2525  0FE9                     	;# 
  2526  0FEA                     	;# 
  2527  0FEB                     	;# 
  2528  0FED                     	;# 
  2529  0FEE                     	;# 
  2530  0FEF                     	;# 
  2531  0000                     	;# 
  2532  0001                     	;# 
  2533  0002                     	;# 
  2534  0003                     	;# 
  2535  0004                     	;# 
  2536  0005                     	;# 
  2537  0006                     	;# 
  2538  0007                     	;# 
  2539  0008                     	;# 
  2540  0009                     	;# 
  2541  000A                     	;# 
  2542  000B                     	;# 
  2543  000C                     	;# 
  2544  000D                     	;# 
  2545  000E                     	;# 
  2546  0010                     	;# 
  2547  0011                     	;# 
  2548  0012                     	;# 
  2549  0013                     	;# 
  2550  0014                     	;# 
  2551  0015                     	;# 
  2552  0015                     	;# 
  2553  0016                     	;# 
  2554  0016                     	;# 
  2555  0017                     	;# 
  2556  0018                     	;# 
  2557  0019                     	;# 
  2558  0019                     	;# 
  2559  001A                     	;# 
  2560  001B                     	;# 
  2561  001C                     	;# 
  2562  001D                     	;# 
  2563  001E                     	;# 
  2564  001F                     	;# 
  2565  008C                     	;# 
  2566  008D                     	;# 
  2567  008E                     	;# 
  2568  0090                     	;# 
  2569  0091                     	;# 
  2570  0092                     	;# 
  2571  0093                     	;# 
  2572  0094                     	;# 
  2573  0097                     	;# 
  2574  009B                     	;# 
  2575  009B                     	;# 
  2576  009C                     	;# 
  2577  009D                     	;# 
  2578  009E                     	;# 
  2579  009F                     	;# 
  2580  010C                     	;# 
  2581  010D                     	;# 
  2582  010E                     	;# 
  2583  0111                     	;# 
  2584  0112                     	;# 
  2585  0113                     	;# 
  2586  0114                     	;# 
  2587  0115                     	;# 
  2588  0116                     	;# 
  2589  0117                     	;# 
  2590  0118                     	;# 
  2591  0119                     	;# 
  2592  018C                     	;# 
  2593  018D                     	;# 
  2594  018E                     	;# 
  2595  0197                     	;# 
  2596  0199                     	;# 
  2597  0199                     	;# 
  2598  0199                     	;# 
  2599  019A                     	;# 
  2600  019A                     	;# 
  2601  019A                     	;# 
  2602  019B                     	;# 
  2603  019B                     	;# 
  2604  019B                     	;# 
  2605  019B                     	;# 
  2606  019B                     	;# 
  2607  019C                     	;# 
  2608  019C                     	;# 
  2609  019C                     	;# 
  2610  019D                     	;# 
  2611  019D                     	;# 
  2612  019D                     	;# 
  2613  019E                     	;# 
  2614  019E                     	;# 
  2615  019E                     	;# 
  2616  019F                     	;# 
  2617  019F                     	;# 
  2618  019F                     	;# 
  2619  019F                     	;# 
  2620  019F                     	;# 
  2621  020C                     	;# 
  2622  020D                     	;# 
  2623  020E                     	;# 
  2624  0211                     	;# 
  2625  0211                     	;# 
  2626  0212                     	;# 
  2627  0212                     	;# 
  2628  0213                     	;# 
  2629  0213                     	;# 
  2630  0214                     	;# 
  2631  0214                     	;# 
  2632  0215                     	;# 
  2633  0215                     	;# 
  2634  0215                     	;# 
  2635  0215                     	;# 
  2636  0216                     	;# 
  2637  0216                     	;# 
  2638  0217                     	;# 
  2639  0217                     	;# 
  2640  028C                     	;# 
  2641  028D                     	;# 
  2642  028E                     	;# 
  2643  0291                     	;# 
  2644  0291                     	;# 
  2645  0292                     	;# 
  2646  0293                     	;# 
  2647  0294                     	;# 
  2648  0295                     	;# 
  2649  0295                     	;# 
  2650  0296                     	;# 
  2651  0297                     	;# 
  2652  0298                     	;# 
  2653  029F                     	;# 
  2654  030C                     	;# 
  2655  030D                     	;# 
  2656  030E                     	;# 
  2657  0311                     	;# 
  2658  0311                     	;# 
  2659  0312                     	;# 
  2660  0313                     	;# 
  2661  0314                     	;# 
  2662  0315                     	;# 
  2663  0315                     	;# 
  2664  0316                     	;# 
  2665  0317                     	;# 
  2666  0318                     	;# 
  2667  038C                     	;# 
  2668  038D                     	;# 
  2669  038E                     	;# 
  2670  0391                     	;# 
  2671  0392                     	;# 
  2672  0393                     	;# 
  2673  0394                     	;# 
  2674  0395                     	;# 
  2675  0396                     	;# 
  2676  0397                     	;# 
  2677  0398                     	;# 
  2678  0399                     	;# 
  2679  039A                     	;# 
  2680  039C                     	;# 
  2681  039D                     	;# 
  2682  039E                     	;# 
  2683  039F                     	;# 
  2684  0411                     	;# 
  2685  0411                     	;# 
  2686  0412                     	;# 
  2687  0413                     	;# 
  2688  0414                     	;# 
  2689  0415                     	;# 
  2690  0416                     	;# 
  2691  0417                     	;# 
  2692  0418                     	;# 
  2693  0418                     	;# 
  2694  0419                     	;# 
  2695  041A                     	;# 
  2696  041B                     	;# 
  2697  041C                     	;# 
  2698  041D                     	;# 
  2699  041E                     	;# 
  2700  041F                     	;# 
  2701  0498                     	;# 
  2702  0498                     	;# 
  2703  0499                     	;# 
  2704  049A                     	;# 
  2705  049B                     	;# 
  2706  049B                     	;# 
  2707  049C                     	;# 
  2708  049D                     	;# 
  2709  049E                     	;# 
  2710  049F                     	;# 
  2711  0617                     	;# 
  2712  0618                     	;# 
  2713  0619                     	;# 
  2714  0619                     	;# 
  2715  061A                     	;# 
  2716  061B                     	;# 
  2717  061C                     	;# 
  2718  061C                     	;# 
  2719  061F                     	;# 
  2720  0691                     	;# 
  2721  0692                     	;# 
  2722  0693                     	;# 
  2723  0694                     	;# 
  2724  0695                     	;# 
  2725  0696                     	;# 
  2726  0697                     	;# 
  2727  0698                     	;# 
  2728  0699                     	;# 
  2729  0711                     	;# 
  2730  0712                     	;# 
  2731  0713                     	;# 
  2732  0714                     	;# 
  2733  0715                     	;# 
  2734  0716                     	;# 
  2735  0717                     	;# 
  2736  0718                     	;# 
  2737  0719                     	;# 
  2738  0891                     	;# 
  2739  0891                     	;# 
  2740  0891                     	;# 
  2741  0891                     	;# 
  2742  0891                     	;# 
  2743  0891                     	;# 
  2744  0892                     	;# 
  2745  0892                     	;# 
  2746  0892                     	;# 
  2747  0893                     	;# 
  2748  0893                     	;# 
  2749  0893                     	;# 
  2750  0893                     	;# 
  2751  0893                     	;# 
  2752  0893                     	;# 
  2753  0894                     	;# 
  2754  0894                     	;# 
  2755  0894                     	;# 
  2756  0895                     	;# 
  2757  0895                     	;# 
  2758  0895                     	;# 
  2759  0896                     	;# 
  2760  0896                     	;# 
  2761  0896                     	;# 
  2762  089B                     	;# 
  2763  0911                     	;# 
  2764  0912                     	;# 
  2765  0913                     	;# 
  2766  0914                     	;# 
  2767  0915                     	;# 
  2768  0916                     	;# 
  2769  0918                     	;# 
  2770  0919                     	;# 
  2771  091A                     	;# 
  2772  091B                     	;# 
  2773  091C                     	;# 
  2774  091D                     	;# 
  2775  091E                     	;# 
  2776  091F                     	;# 
  2777  0E0F                     	;# 
  2778  0E10                     	;# 
  2779  0E11                     	;# 
  2780  0E12                     	;# 
  2781  0E13                     	;# 
  2782  0E14                     	;# 
  2783  0E15                     	;# 
  2784  0E16                     	;# 
  2785  0E17                     	;# 
  2786  0E18                     	;# 
  2787  0E19                     	;# 
  2788  0E1A                     	;# 
  2789  0E1B                     	;# 
  2790  0E1C                     	;# 
  2791  0E20                     	;# 
  2792  0E21                     	;# 
  2793  0E22                     	;# 
  2794  0E24                     	;# 
  2795  0E25                     	;# 
  2796  0E28                     	;# 
  2797  0E29                     	;# 
  2798  0E2A                     	;# 
  2799  0E2B                     	;# 
  2800  0E2C                     	;# 
  2801  0E2D                     	;# 
  2802  0E2E                     	;# 
  2803  0E2F                     	;# 
  2804  0E90                     	;# 
  2805  0E91                     	;# 
  2806  0E92                     	;# 
  2807  0E94                     	;# 
  2808  0E95                     	;# 
  2809  0E9C                     	;# 
  2810  0E9D                     	;# 
  2811  0E9E                     	;# 
  2812  0E9F                     	;# 
  2813  0EA0                     	;# 
  2814  0EA1                     	;# 
  2815  0EA2                     	;# 
  2816  0EA3                     	;# 
  2817  0EA4                     	;# 
  2818  0EA5                     	;# 
  2819  0EA6                     	;# 
  2820  0EA7                     	;# 
  2821  0F0F                     	;# 
  2822  0F10                     	;# 
  2823  0F11                     	;# 
  2824  0F12                     	;# 
  2825  0F13                     	;# 
  2826  0F14                     	;# 
  2827  0F15                     	;# 
  2828  0F16                     	;# 
  2829  0F17                     	;# 
  2830  0F18                     	;# 
  2831  0F19                     	;# 
  2832  0F1A                     	;# 
  2833  0F1B                     	;# 
  2834  0F1C                     	;# 
  2835  0F1D                     	;# 
  2836  0F1E                     	;# 
  2837  0F1F                     	;# 
  2838  0F20                     	;# 
  2839  0F21                     	;# 
  2840  0F22                     	;# 
  2841  0F23                     	;# 
  2842  0F24                     	;# 
  2843  0F25                     	;# 
  2844  0F26                     	;# 
  2845  0F27                     	;# 
  2846  0F28                     	;# 
  2847  0F29                     	;# 
  2848  0F2A                     	;# 
  2849  0F2B                     	;# 
  2850  0F2C                     	;# 
  2851  0F2D                     	;# 
  2852  0F2E                     	;# 
  2853  0F2F                     	;# 
  2854  0F30                     	;# 
  2855  0F31                     	;# 
  2856  0F32                     	;# 
  2857  0F33                     	;# 
  2858  0F34                     	;# 
  2859  0F35                     	;# 
  2860  0F36                     	;# 
  2861  0F37                     	;# 
  2862  0FE4                     	;# 
  2863  0FE5                     	;# 
  2864  0FE6                     	;# 
  2865  0FE7                     	;# 
  2866  0FE8                     	;# 
  2867  0FE9                     	;# 
  2868  0FEA                     	;# 
  2869  0FEB                     	;# 
  2870  0FED                     	;# 
  2871  0FEE                     	;# 
  2872  0FEF                     	;# 
  2873  0000                     	;# 
  2874  0001                     	;# 
  2875  0002                     	;# 
  2876  0003                     	;# 
  2877  0004                     	;# 
  2878  0005                     	;# 
  2879  0006                     	;# 
  2880  0007                     	;# 
  2881  0008                     	;# 
  2882  0009                     	;# 
  2883  000A                     	;# 
  2884  000B                     	;# 
  2885  000C                     	;# 
  2886  000D                     	;# 
  2887  000E                     	;# 
  2888  0010                     	;# 
  2889  0011                     	;# 
  2890  0012                     	;# 
  2891  0013                     	;# 
  2892  0014                     	;# 
  2893  0015                     	;# 
  2894  0015                     	;# 
  2895  0016                     	;# 
  2896  0016                     	;# 
  2897  0017                     	;# 
  2898  0018                     	;# 
  2899  0019                     	;# 
  2900  0019                     	;# 
  2901  001A                     	;# 
  2902  001B                     	;# 
  2903  001C                     	;# 
  2904  001D                     	;# 
  2905  001E                     	;# 
  2906  001F                     	;# 
  2907  008C                     	;# 
  2908  008D                     	;# 
  2909  008E                     	;# 
  2910  0090                     	;# 
  2911  0091                     	;# 
  2912  0092                     	;# 
  2913  0093                     	;# 
  2914  0094                     	;# 
  2915  0097                     	;# 
  2916  009B                     	;# 
  2917  009B                     	;# 
  2918  009C                     	;# 
  2919  009D                     	;# 
  2920  009E                     	;# 
  2921  009F                     	;# 
  2922  010C                     	;# 
  2923  010D                     	;# 
  2924  010E                     	;# 
  2925  0111                     	;# 
  2926  0112                     	;# 
  2927  0113                     	;# 
  2928  0114                     	;# 
  2929  0115                     	;# 
  2930  0116                     	;# 
  2931  0117                     	;# 
  2932  0118                     	;# 
  2933  0119                     	;# 
  2934  018C                     	;# 
  2935  018D                     	;# 
  2936  018E                     	;# 
  2937  0197                     	;# 
  2938  0199                     	;# 
  2939  0199                     	;# 
  2940  0199                     	;# 
  2941  019A                     	;# 
  2942  019A                     	;# 
  2943  019A                     	;# 
  2944  019B                     	;# 
  2945  019B                     	;# 
  2946  019B                     	;# 
  2947  019B                     	;# 
  2948  019B                     	;# 
  2949  019C                     	;# 
  2950  019C                     	;# 
  2951  019C                     	;# 
  2952  019D                     	;# 
  2953  019D                     	;# 
  2954  019D                     	;# 
  2955  019E                     	;# 
  2956  019E                     	;# 
  2957  019E                     	;# 
  2958  019F                     	;# 
  2959  019F                     	;# 
  2960  019F                     	;# 
  2961  019F                     	;# 
  2962  019F                     	;# 
  2963  020C                     	;# 
  2964  020D                     	;# 
  2965  020E                     	;# 
  2966  0211                     	;# 
  2967  0211                     	;# 
  2968  0212                     	;# 
  2969  0212                     	;# 
  2970  0213                     	;# 
  2971  0213                     	;# 
  2972  0214                     	;# 
  2973  0214                     	;# 
  2974  0215                     	;# 
  2975  0215                     	;# 
  2976  0215                     	;# 
  2977  0215                     	;# 
  2978  0216                     	;# 
  2979  0216                     	;# 
  2980  0217                     	;# 
  2981  0217                     	;# 
  2982  028C                     	;# 
  2983  028D                     	;# 
  2984  028E                     	;# 
  2985  0291                     	;# 
  2986  0291                     	;# 
  2987  0292                     	;# 
  2988  0293                     	;# 
  2989  0294                     	;# 
  2990  0295                     	;# 
  2991  0295                     	;# 
  2992  0296                     	;# 
  2993  0297                     	;# 
  2994  0298                     	;# 
  2995  029F                     	;# 
  2996  030C                     	;# 
  2997  030D                     	;# 
  2998  030E                     	;# 
  2999  0311                     	;# 
  3000  0311                     	;# 
  3001  0312                     	;# 
  3002  0313                     	;# 
  3003  0314                     	;# 
  3004  0315                     	;# 
  3005  0315                     	;# 
  3006  0316                     	;# 
  3007  0317                     	;# 
  3008  0318                     	;# 
  3009  038C                     	;# 
  3010  038D                     	;# 
  3011  038E                     	;# 
  3012  0391                     	;# 
  3013  0392                     	;# 
  3014  0393                     	;# 
  3015  0394                     	;# 
  3016  0395                     	;# 
  3017  0396                     	;# 
  3018  0397                     	;# 
  3019  0398                     	;# 
  3020  0399                     	;# 
  3021  039A                     	;# 
  3022  039C                     	;# 
  3023  039D                     	;# 
  3024  039E                     	;# 
  3025  039F                     	;# 
  3026  0411                     	;# 
  3027  0411                     	;# 
  3028  0412                     	;# 
  3029  0413                     	;# 
  3030  0414                     	;# 
  3031  0415                     	;# 
  3032  0416                     	;# 
  3033  0417                     	;# 
  3034  0418                     	;# 
  3035  0418                     	;# 
  3036  0419                     	;# 
  3037  041A                     	;# 
  3038  041B                     	;# 
  3039  041C                     	;# 
  3040  041D                     	;# 
  3041  041E                     	;# 
  3042  041F                     	;# 
  3043  0498                     	;# 
  3044  0498                     	;# 
  3045  0499                     	;# 
  3046  049A                     	;# 
  3047  049B                     	;# 
  3048  049B                     	;# 
  3049  049C                     	;# 
  3050  049D                     	;# 
  3051  049E                     	;# 
  3052  049F                     	;# 
  3053  0617                     	;# 
  3054  0618                     	;# 
  3055  0619                     	;# 
  3056  0619                     	;# 
  3057  061A                     	;# 
  3058  061B                     	;# 
  3059  061C                     	;# 
  3060  061C                     	;# 
  3061  061F                     	;# 
  3062  0691                     	;# 
  3063  0692                     	;# 
  3064  0693                     	;# 
  3065  0694                     	;# 
  3066  0695                     	;# 
  3067  0696                     	;# 
  3068  0697                     	;# 
  3069  0698                     	;# 
  3070  0699                     	;# 
  3071  0711                     	;# 
  3072  0712                     	;# 
  3073  0713                     	;# 
  3074  0714                     	;# 
  3075  0715                     	;# 
  3076  0716                     	;# 
  3077  0717                     	;# 
  3078  0718                     	;# 
  3079  0719                     	;# 
  3080  0891                     	;# 
  3081  0891                     	;# 
  3082  0891                     	;# 
  3083  0891                     	;# 
  3084  0891                     	;# 
  3085  0891                     	;# 
  3086  0892                     	;# 
  3087  0892                     	;# 
  3088  0892                     	;# 
  3089  0893                     	;# 
  3090  0893                     	;# 
  3091  0893                     	;# 
  3092  0893                     	;# 
  3093  0893                     	;# 
  3094  0893                     	;# 
  3095  0894                     	;# 
  3096  0894                     	;# 
  3097  0894                     	;# 
  3098  0895                     	;# 
  3099  0895                     	;# 
  3100  0895                     	;# 
  3101  0896                     	;# 
  3102  0896                     	;# 
  3103  0896                     	;# 
  3104  089B                     	;# 
  3105  0911                     	;# 
  3106  0912                     	;# 
  3107  0913                     	;# 
  3108  0914                     	;# 
  3109  0915                     	;# 
  3110  0916                     	;# 
  3111  0918                     	;# 
  3112  0919                     	;# 
  3113  091A                     	;# 
  3114  091B                     	;# 
  3115  091C                     	;# 
  3116  091D                     	;# 
  3117  091E                     	;# 
  3118  091F                     	;# 
  3119  0E0F                     	;# 
  3120  0E10                     	;# 
  3121  0E11                     	;# 
  3122  0E12                     	;# 
  3123  0E13                     	;# 
  3124  0E14                     	;# 
  3125  0E15                     	;# 
  3126  0E16                     	;# 
  3127  0E17                     	;# 
  3128  0E18                     	;# 
  3129  0E19                     	;# 
  3130  0E1A                     	;# 
  3131  0E1B                     	;# 
  3132  0E1C                     	;# 
  3133  0E20                     	;# 
  3134  0E21                     	;# 
  3135  0E22                     	;# 
  3136  0E24                     	;# 
  3137  0E25                     	;# 
  3138  0E28                     	;# 
  3139  0E29                     	;# 
  3140  0E2A                     	;# 
  3141  0E2B                     	;# 
  3142  0E2C                     	;# 
  3143  0E2D                     	;# 
  3144  0E2E                     	;# 
  3145  0E2F                     	;# 
  3146  0E90                     	;# 
  3147  0E91                     	;# 
  3148  0E92                     	;# 
  3149  0E94                     	;# 
  3150  0E95                     	;# 
  3151  0E9C                     	;# 
  3152  0E9D                     	;# 
  3153  0E9E                     	;# 
  3154  0E9F                     	;# 
  3155  0EA0                     	;# 
  3156  0EA1                     	;# 
  3157  0EA2                     	;# 
  3158  0EA3                     	;# 
  3159  0EA4                     	;# 
  3160  0EA5                     	;# 
  3161  0EA6                     	;# 
  3162  0EA7                     	;# 
  3163  0F0F                     	;# 
  3164  0F10                     	;# 
  3165  0F11                     	;# 
  3166  0F12                     	;# 
  3167  0F13                     	;# 
  3168  0F14                     	;# 
  3169  0F15                     	;# 
  3170  0F16                     	;# 
  3171  0F17                     	;# 
  3172  0F18                     	;# 
  3173  0F19                     	;# 
  3174  0F1A                     	;# 
  3175  0F1B                     	;# 
  3176  0F1C                     	;# 
  3177  0F1D                     	;# 
  3178  0F1E                     	;# 
  3179  0F1F                     	;# 
  3180  0F20                     	;# 
  3181  0F21                     	;# 
  3182  0F22                     	;# 
  3183  0F23                     	;# 
  3184  0F24                     	;# 
  3185  0F25                     	;# 
  3186  0F26                     	;# 
  3187  0F27                     	;# 
  3188  0F28                     	;# 
  3189  0F29                     	;# 
  3190  0F2A                     	;# 
  3191  0F2B                     	;# 
  3192  0F2C                     	;# 
  3193  0F2D                     	;# 
  3194  0F2E                     	;# 
  3195  0F2F                     	;# 
  3196  0F30                     	;# 
  3197  0F31                     	;# 
  3198  0F32                     	;# 
  3199  0F33                     	;# 
  3200  0F34                     	;# 
  3201  0F35                     	;# 
  3202  0F36                     	;# 
  3203  0F37                     	;# 
  3204  0FE4                     	;# 
  3205  0FE5                     	;# 
  3206  0FE6                     	;# 
  3207  0FE7                     	;# 
  3208  0FE8                     	;# 
  3209  0FE9                     	;# 
  3210  0FEA                     	;# 
  3211  0FEB                     	;# 
  3212  0FED                     	;# 
  3213  0FEE                     	;# 
  3214  0FEF                     	;# 
  3215  0000                     	;# 
  3216  0001                     	;# 
  3217  0002                     	;# 
  3218  0003                     	;# 
  3219  0004                     	;# 
  3220  0005                     	;# 
  3221  0006                     	;# 
  3222  0007                     	;# 
  3223  0008                     	;# 
  3224  0009                     	;# 
  3225  000A                     	;# 
  3226  000B                     	;# 
  3227  000C                     	;# 
  3228  000D                     	;# 
  3229  000E                     	;# 
  3230  0010                     	;# 
  3231  0011                     	;# 
  3232  0012                     	;# 
  3233  0013                     	;# 
  3234  0014                     	;# 
  3235  0015                     	;# 
  3236  0015                     	;# 
  3237  0016                     	;# 
  3238  0016                     	;# 
  3239  0017                     	;# 
  3240  0018                     	;# 
  3241  0019                     	;# 
  3242  0019                     	;# 
  3243  001A                     	;# 
  3244  001B                     	;# 
  3245  001C                     	;# 
  3246  001D                     	;# 
  3247  001E                     	;# 
  3248  001F                     	;# 
  3249  008C                     	;# 
  3250  008D                     	;# 
  3251  008E                     	;# 
  3252  0090                     	;# 
  3253  0091                     	;# 
  3254  0092                     	;# 
  3255  0093                     	;# 
  3256  0094                     	;# 
  3257  0097                     	;# 
  3258  009B                     	;# 
  3259  009B                     	;# 
  3260  009C                     	;# 
  3261  009D                     	;# 
  3262  009E                     	;# 
  3263  009F                     	;# 
  3264  010C                     	;# 
  3265  010D                     	;# 
  3266  010E                     	;# 
  3267  0111                     	;# 
  3268  0112                     	;# 
  3269  0113                     	;# 
  3270  0114                     	;# 
  3271  0115                     	;# 
  3272  0116                     	;# 
  3273  0117                     	;# 
  3274  0118                     	;# 
  3275  0119                     	;# 
  3276  018C                     	;# 
  3277  018D                     	;# 
  3278  018E                     	;# 
  3279  0197                     	;# 
  3280  0199                     	;# 
  3281  0199                     	;# 
  3282  0199                     	;# 
  3283  019A                     	;# 
  3284  019A                     	;# 
  3285  019A                     	;# 
  3286  019B                     	;# 
  3287  019B                     	;# 
  3288  019B                     	;# 
  3289  019B                     	;# 
  3290  019B                     	;# 
  3291  019C                     	;# 
  3292  019C                     	;# 
  3293  019C                     	;# 
  3294  019D                     	;# 
  3295  019D                     	;# 
  3296  019D                     	;# 
  3297  019E                     	;# 
  3298  019E                     	;# 
  3299  019E                     	;# 
  3300  019F                     	;# 
  3301  019F                     	;# 
  3302  019F                     	;# 
  3303  019F                     	;# 
  3304  019F                     	;# 
  3305  020C                     	;# 
  3306  020D                     	;# 
  3307  020E                     	;# 
  3308  0211                     	;# 
  3309  0211                     	;# 
  3310  0212                     	;# 
  3311  0212                     	;# 
  3312  0213                     	;# 
  3313  0213                     	;# 
  3314  0214                     	;# 
  3315  0214                     	;# 
  3316  0215                     	;# 
  3317  0215                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0216                     	;# 
  3321  0216                     	;# 
  3322  0217                     	;# 
  3323  0217                     	;# 
  3324  028C                     	;# 
  3325  028D                     	;# 
  3326  028E                     	;# 
  3327  0291                     	;# 
  3328  0291                     	;# 
  3329  0292                     	;# 
  3330  0293                     	;# 
  3331  0294                     	;# 
  3332  0295                     	;# 
  3333  0295                     	;# 
  3334  0296                     	;# 
  3335  0297                     	;# 
  3336  0298                     	;# 
  3337  029F                     	;# 
  3338  030C                     	;# 
  3339  030D                     	;# 
  3340  030E                     	;# 
  3341  0311                     	;# 
  3342  0311                     	;# 
  3343  0312                     	;# 
  3344  0313                     	;# 
  3345  0314                     	;# 
  3346  0315                     	;# 
  3347  0315                     	;# 
  3348  0316                     	;# 
  3349  0317                     	;# 
  3350  0318                     	;# 
  3351  038C                     	;# 
  3352  038D                     	;# 
  3353  038E                     	;# 
  3354  0391                     	;# 
  3355  0392                     	;# 
  3356  0393                     	;# 
  3357  0394                     	;# 
  3358  0395                     	;# 
  3359  0396                     	;# 
  3360  0397                     	;# 
  3361  0398                     	;# 
  3362  0399                     	;# 
  3363  039A                     	;# 
  3364  039C                     	;# 
  3365  039D                     	;# 
  3366  039E                     	;# 
  3367  039F                     	;# 
  3368  0411                     	;# 
  3369  0411                     	;# 
  3370  0412                     	;# 
  3371  0413                     	;# 
  3372  0414                     	;# 
  3373  0415                     	;# 
  3374  0416                     	;# 
  3375  0417                     	;# 
  3376  0418                     	;# 
  3377  0418                     	;# 
  3378  0419                     	;# 
  3379  041A                     	;# 
  3380  041B                     	;# 
  3381  041C                     	;# 
  3382  041D                     	;# 
  3383  041E                     	;# 
  3384  041F                     	;# 
  3385  0498                     	;# 
  3386  0498                     	;# 
  3387  0499                     	;# 
  3388  049A                     	;# 
  3389  049B                     	;# 
  3390  049B                     	;# 
  3391  049C                     	;# 
  3392  049D                     	;# 
  3393  049E                     	;# 
  3394  049F                     	;# 
  3395  0617                     	;# 
  3396  0618                     	;# 
  3397  0619                     	;# 
  3398  0619                     	;# 
  3399  061A                     	;# 
  3400  061B                     	;# 
  3401  061C                     	;# 
  3402  061C                     	;# 
  3403  061F                     	;# 
  3404  0691                     	;# 
  3405  0692                     	;# 
  3406  0693                     	;# 
  3407  0694                     	;# 
  3408  0695                     	;# 
  3409  0696                     	;# 
  3410  0697                     	;# 
  3411  0698                     	;# 
  3412  0699                     	;# 
  3413  0711                     	;# 
  3414  0712                     	;# 
  3415  0713                     	;# 
  3416  0714                     	;# 
  3417  0715                     	;# 
  3418  0716                     	;# 
  3419  0717                     	;# 
  3420  0718                     	;# 
  3421  0719                     	;# 
  3422  0891                     	;# 
  3423  0891                     	;# 
  3424  0891                     	;# 
  3425  0891                     	;# 
  3426  0891                     	;# 
  3427  0891                     	;# 
  3428  0892                     	;# 
  3429  0892                     	;# 
  3430  0892                     	;# 
  3431  0893                     	;# 
  3432  0893                     	;# 
  3433  0893                     	;# 
  3434  0893                     	;# 
  3435  0893                     	;# 
  3436  0893                     	;# 
  3437  0894                     	;# 
  3438  0894                     	;# 
  3439  0894                     	;# 
  3440  0895                     	;# 
  3441  0895                     	;# 
  3442  0895                     	;# 
  3443  0896                     	;# 
  3444  0896                     	;# 
  3445  0896                     	;# 
  3446  089B                     	;# 
  3447  0911                     	;# 
  3448  0912                     	;# 
  3449  0913                     	;# 
  3450  0914                     	;# 
  3451  0915                     	;# 
  3452  0916                     	;# 
  3453  0918                     	;# 
  3454  0919                     	;# 
  3455  091A                     	;# 
  3456  091B                     	;# 
  3457  091C                     	;# 
  3458  091D                     	;# 
  3459  091E                     	;# 
  3460  091F                     	;# 
  3461  0E0F                     	;# 
  3462  0E10                     	;# 
  3463  0E11                     	;# 
  3464  0E12                     	;# 
  3465  0E13                     	;# 
  3466  0E14                     	;# 
  3467  0E15                     	;# 
  3468  0E16                     	;# 
  3469  0E17                     	;# 
  3470  0E18                     	;# 
  3471  0E19                     	;# 
  3472  0E1A                     	;# 
  3473  0E1B                     	;# 
  3474  0E1C                     	;# 
  3475  0E20                     	;# 
  3476  0E21                     	;# 
  3477  0E22                     	;# 
  3478  0E24                     	;# 
  3479  0E25                     	;# 
  3480  0E28                     	;# 
  3481  0E29                     	;# 
  3482  0E2A                     	;# 
  3483  0E2B                     	;# 
  3484  0E2C                     	;# 
  3485  0E2D                     	;# 
  3486  0E2E                     	;# 
  3487  0E2F                     	;# 
  3488  0E90                     	;# 
  3489  0E91                     	;# 
  3490  0E92                     	;# 
  3491  0E94                     	;# 
  3492  0E95                     	;# 
  3493  0E9C                     	;# 
  3494  0E9D                     	;# 
  3495  0E9E                     	;# 
  3496  0E9F                     	;# 
  3497  0EA0                     	;# 
  3498  0EA1                     	;# 
  3499  0EA2                     	;# 
  3500  0EA3                     	;# 
  3501  0EA4                     	;# 
  3502  0EA5                     	;# 
  3503  0EA6                     	;# 
  3504  0EA7                     	;# 
  3505  0F0F                     	;# 
  3506  0F10                     	;# 
  3507  0F11                     	;# 
  3508  0F12                     	;# 
  3509  0F13                     	;# 
  3510  0F14                     	;# 
  3511  0F15                     	;# 
  3512  0F16                     	;# 
  3513  0F17                     	;# 
  3514  0F18                     	;# 
  3515  0F19                     	;# 
  3516  0F1A                     	;# 
  3517  0F1B                     	;# 
  3518  0F1C                     	;# 
  3519  0F1D                     	;# 
  3520  0F1E                     	;# 
  3521  0F1F                     	;# 
  3522  0F20                     	;# 
  3523  0F21                     	;# 
  3524  0F22                     	;# 
  3525  0F23                     	;# 
  3526  0F24                     	;# 
  3527  0F25                     	;# 
  3528  0F26                     	;# 
  3529  0F27                     	;# 
  3530  0F28                     	;# 
  3531  0F29                     	;# 
  3532  0F2A                     	;# 
  3533  0F2B                     	;# 
  3534  0F2C                     	;# 
  3535  0F2D                     	;# 
  3536  0F2E                     	;# 
  3537  0F2F                     	;# 
  3538  0F30                     	;# 
  3539  0F31                     	;# 
  3540  0F32                     	;# 
  3541  0F33                     	;# 
  3542  0F34                     	;# 
  3543  0F35                     	;# 
  3544  0F36                     	;# 
  3545  0F37                     	;# 
  3546  0FE4                     	;# 
  3547  0FE5                     	;# 
  3548  0FE6                     	;# 
  3549  0FE7                     	;# 
  3550  0FE8                     	;# 
  3551  0FE9                     	;# 
  3552  0FEA                     	;# 
  3553  0FEB                     	;# 
  3554  0FED                     	;# 
  3555  0FEE                     	;# 
  3556  0FEF                     	;# 
  3557  0000                     	;# 
  3558  0001                     	;# 
  3559  0002                     	;# 
  3560  0003                     	;# 
  3561  0004                     	;# 
  3562  0005                     	;# 
  3563  0006                     	;# 
  3564  0007                     	;# 
  3565  0008                     	;# 
  3566  0009                     	;# 
  3567  000A                     	;# 
  3568  000B                     	;# 
  3569  000C                     	;# 
  3570  000D                     	;# 
  3571  000E                     	;# 
  3572  0010                     	;# 
  3573  0011                     	;# 
  3574  0012                     	;# 
  3575  0013                     	;# 
  3576  0014                     	;# 
  3577  0015                     	;# 
  3578  0015                     	;# 
  3579  0016                     	;# 
  3580  0016                     	;# 
  3581  0017                     	;# 
  3582  0018                     	;# 
  3583  0019                     	;# 
  3584  0019                     	;# 
  3585  001A                     	;# 
  3586  001B                     	;# 
  3587  001C                     	;# 
  3588  001D                     	;# 
  3589  001E                     	;# 
  3590  001F                     	;# 
  3591  008C                     	;# 
  3592  008D                     	;# 
  3593  008E                     	;# 
  3594  0090                     	;# 
  3595  0091                     	;# 
  3596  0092                     	;# 
  3597  0093                     	;# 
  3598  0094                     	;# 
  3599  0097                     	;# 
  3600  009B                     	;# 
  3601  009B                     	;# 
  3602  009C                     	;# 
  3603  009D                     	;# 
  3604  009E                     	;# 
  3605  009F                     	;# 
  3606  010C                     	;# 
  3607  010D                     	;# 
  3608  010E                     	;# 
  3609  0111                     	;# 
  3610  0112                     	;# 
  3611  0113                     	;# 
  3612  0114                     	;# 
  3613  0115                     	;# 
  3614  0116                     	;# 
  3615  0117                     	;# 
  3616  0118                     	;# 
  3617  0119                     	;# 
  3618  018C                     	;# 
  3619  018D                     	;# 
  3620  018E                     	;# 
  3621  0197                     	;# 
  3622  0199                     	;# 
  3623  0199                     	;# 
  3624  0199                     	;# 
  3625  019A                     	;# 
  3626  019A                     	;# 
  3627  019A                     	;# 
  3628  019B                     	;# 
  3629  019B                     	;# 
  3630  019B                     	;# 
  3631  019B                     	;# 
  3632  019B                     	;# 
  3633  019C                     	;# 
  3634  019C                     	;# 
  3635  019C                     	;# 
  3636  019D                     	;# 
  3637  019D                     	;# 
  3638  019D                     	;# 
  3639  019E                     	;# 
  3640  019E                     	;# 
  3641  019E                     	;# 
  3642  019F                     	;# 
  3643  019F                     	;# 
  3644  019F                     	;# 
  3645  019F                     	;# 
  3646  019F                     	;# 
  3647  020C                     	;# 
  3648  020D                     	;# 
  3649  020E                     	;# 
  3650  0211                     	;# 
  3651  0211                     	;# 
  3652  0212                     	;# 
  3653  0212                     	;# 
  3654  0213                     	;# 
  3655  0213                     	;# 
  3656  0214                     	;# 
  3657  0214                     	;# 
  3658  0215                     	;# 
  3659  0215                     	;# 
  3660  0215                     	;# 
  3661  0215                     	;# 
  3662  0216                     	;# 
  3663  0216                     	;# 
  3664  0217                     	;# 
  3665  0217                     	;# 
  3666  028C                     	;# 
  3667  028D                     	;# 
  3668  028E                     	;# 
  3669  0291                     	;# 
  3670  0291                     	;# 
  3671  0292                     	;# 
  3672  0293                     	;# 
  3673  0294                     	;# 
  3674  0295                     	;# 
  3675  0295                     	;# 
  3676  0296                     	;# 
  3677  0297                     	;# 
  3678  0298                     	;# 
  3679  029F                     	;# 
  3680  030C                     	;# 
  3681  030D                     	;# 
  3682  030E                     	;# 
  3683  0311                     	;# 
  3684  0311                     	;# 
  3685  0312                     	;# 
  3686  0313                     	;# 
  3687  0314                     	;# 
  3688  0315                     	;# 
  3689  0315                     	;# 
  3690  0316                     	;# 
  3691  0317                     	;# 
  3692  0318                     	;# 
  3693  038C                     	;# 
  3694  038D                     	;# 
  3695  038E                     	;# 
  3696  0391                     	;# 
  3697  0392                     	;# 
  3698  0393                     	;# 
  3699  0394                     	;# 
  3700  0395                     	;# 
  3701  0396                     	;# 
  3702  0397                     	;# 
  3703  0398                     	;# 
  3704  0399                     	;# 
  3705  039A                     	;# 
  3706  039C                     	;# 
  3707  039D                     	;# 
  3708  039E                     	;# 
  3709  039F                     	;# 
  3710  0411                     	;# 
  3711  0411                     	;# 
  3712  0412                     	;# 
  3713  0413                     	;# 
  3714  0414                     	;# 
  3715  0415                     	;# 
  3716  0416                     	;# 
  3717  0417                     	;# 
  3718  0418                     	;# 
  3719  0418                     	;# 
  3720  0419                     	;# 
  3721  041A                     	;# 
  3722  041B                     	;# 
  3723  041C                     	;# 
  3724  041D                     	;# 
  3725  041E                     	;# 
  3726  041F                     	;# 
  3727  0498                     	;# 
  3728  0498                     	;# 
  3729  0499                     	;# 
  3730  049A                     	;# 
  3731  049B                     	;# 
  3732  049B                     	;# 
  3733  049C                     	;# 
  3734  049D                     	;# 
  3735  049E                     	;# 
  3736  049F                     	;# 
  3737  0617                     	;# 
  3738  0618                     	;# 
  3739  0619                     	;# 
  3740  0619                     	;# 
  3741  061A                     	;# 
  3742  061B                     	;# 
  3743  061C                     	;# 
  3744  061C                     	;# 
  3745  061F                     	;# 
  3746  0691                     	;# 
  3747  0692                     	;# 
  3748  0693                     	;# 
  3749  0694                     	;# 
  3750  0695                     	;# 
  3751  0696                     	;# 
  3752  0697                     	;# 
  3753  0698                     	;# 
  3754  0699                     	;# 
  3755  0711                     	;# 
  3756  0712                     	;# 
  3757  0713                     	;# 
  3758  0714                     	;# 
  3759  0715                     	;# 
  3760  0716                     	;# 
  3761  0717                     	;# 
  3762  0718                     	;# 
  3763  0719                     	;# 
  3764  0891                     	;# 
  3765  0891                     	;# 
  3766  0891                     	;# 
  3767  0891                     	;# 
  3768  0891                     	;# 
  3769  0891                     	;# 
  3770  0892                     	;# 
  3771  0892                     	;# 
  3772  0892                     	;# 
  3773  0893                     	;# 
  3774  0893                     	;# 
  3775  0893                     	;# 
  3776  0893                     	;# 
  3777  0893                     	;# 
  3778  0893                     	;# 
  3779  0894                     	;# 
  3780  0894                     	;# 
  3781  0894                     	;# 
  3782  0895                     	;# 
  3783  0895                     	;# 
  3784  0895                     	;# 
  3785  0896                     	;# 
  3786  0896                     	;# 
  3787  0896                     	;# 
  3788  089B                     	;# 
  3789  0911                     	;# 
  3790  0912                     	;# 
  3791  0913                     	;# 
  3792  0914                     	;# 
  3793  0915                     	;# 
  3794  0916                     	;# 
  3795  0918                     	;# 
  3796  0919                     	;# 
  3797  091A                     	;# 
  3798  091B                     	;# 
  3799  091C                     	;# 
  3800  091D                     	;# 
  3801  091E                     	;# 
  3802  091F                     	;# 
  3803  0E0F                     	;# 
  3804  0E10                     	;# 
  3805  0E11                     	;# 
  3806  0E12                     	;# 
  3807  0E13                     	;# 
  3808  0E14                     	;# 
  3809  0E15                     	;# 
  3810  0E16                     	;# 
  3811  0E17                     	;# 
  3812  0E18                     	;# 
  3813  0E19                     	;# 
  3814  0E1A                     	;# 
  3815  0E1B                     	;# 
  3816  0E1C                     	;# 
  3817  0E20                     	;# 
  3818  0E21                     	;# 
  3819  0E22                     	;# 
  3820  0E24                     	;# 
  3821  0E25                     	;# 
  3822  0E28                     	;# 
  3823  0E29                     	;# 
  3824  0E2A                     	;# 
  3825  0E2B                     	;# 
  3826  0E2C                     	;# 
  3827  0E2D                     	;# 
  3828  0E2E                     	;# 
  3829  0E2F                     	;# 
  3830  0E90                     	;# 
  3831  0E91                     	;# 
  3832  0E92                     	;# 
  3833  0E94                     	;# 
  3834  0E95                     	;# 
  3835  0E9C                     	;# 
  3836  0E9D                     	;# 
  3837  0E9E                     	;# 
  3838  0E9F                     	;# 
  3839  0EA0                     	;# 
  3840  0EA1                     	;# 
  3841  0EA2                     	;# 
  3842  0EA3                     	;# 
  3843  0EA4                     	;# 
  3844  0EA5                     	;# 
  3845  0EA6                     	;# 
  3846  0EA7                     	;# 
  3847  0F0F                     	;# 
  3848  0F10                     	;# 
  3849  0F11                     	;# 
  3850  0F12                     	;# 
  3851  0F13                     	;# 
  3852  0F14                     	;# 
  3853  0F15                     	;# 
  3854  0F16                     	;# 
  3855  0F17                     	;# 
  3856  0F18                     	;# 
  3857  0F19                     	;# 
  3858  0F1A                     	;# 
  3859  0F1B                     	;# 
  3860  0F1C                     	;# 
  3861  0F1D                     	;# 
  3862  0F1E                     	;# 
  3863  0F1F                     	;# 
  3864  0F20                     	;# 
  3865  0F21                     	;# 
  3866  0F22                     	;# 
  3867  0F23                     	;# 
  3868  0F24                     	;# 
  3869  0F25                     	;# 
  3870  0F26                     	;# 
  3871  0F27                     	;# 
  3872  0F28                     	;# 
  3873  0F29                     	;# 
  3874  0F2A                     	;# 
  3875  0F2B                     	;# 
  3876  0F2C                     	;# 
  3877  0F2D                     	;# 
  3878  0F2E                     	;# 
  3879  0F2F                     	;# 
  3880  0F30                     	;# 
  3881  0F31                     	;# 
  3882  0F32                     	;# 
  3883  0F33                     	;# 
  3884  0F34                     	;# 
  3885  0F35                     	;# 
  3886  0F36                     	;# 
  3887  0F37                     	;# 
  3888  0FE4                     	;# 
  3889  0FE5                     	;# 
  3890  0FE6                     	;# 
  3891  0FE7                     	;# 
  3892  0FE8                     	;# 
  3893  0FE9                     	;# 
  3894  0FEA                     	;# 
  3895  0FEB                     	;# 
  3896  0FED                     	;# 
  3897  0FEE                     	;# 
  3898  0FEF                     	;# 
  3899  0000                     	;# 
  3900  0001                     	;# 
  3901  0002                     	;# 
  3902  0003                     	;# 
  3903  0004                     	;# 
  3904  0005                     	;# 
  3905  0006                     	;# 
  3906  0007                     	;# 
  3907  0008                     	;# 
  3908  0009                     	;# 
  3909  000A                     	;# 
  3910  000B                     	;# 
  3911  000C                     	;# 
  3912  000D                     	;# 
  3913  000E                     	;# 
  3914  0010                     	;# 
  3915  0011                     	;# 
  3916  0012                     	;# 
  3917  0013                     	;# 
  3918  0014                     	;# 
  3919  0015                     	;# 
  3920  0015                     	;# 
  3921  0016                     	;# 
  3922  0016                     	;# 
  3923  0017                     	;# 
  3924  0018                     	;# 
  3925  0019                     	;# 
  3926  0019                     	;# 
  3927  001A                     	;# 
  3928  001B                     	;# 
  3929  001C                     	;# 
  3930  001D                     	;# 
  3931  001E                     	;# 
  3932  001F                     	;# 
  3933  008C                     	;# 
  3934  008D                     	;# 
  3935  008E                     	;# 
  3936  0090                     	;# 
  3937  0091                     	;# 
  3938  0092                     	;# 
  3939  0093                     	;# 
  3940  0094                     	;# 
  3941  0097                     	;# 
  3942  009B                     	;# 
  3943  009B                     	;# 
  3944  009C                     	;# 
  3945  009D                     	;# 
  3946  009E                     	;# 
  3947  009F                     	;# 
  3948  010C                     	;# 
  3949  010D                     	;# 
  3950  010E                     	;# 
  3951  0111                     	;# 
  3952  0112                     	;# 
  3953  0113                     	;# 
  3954  0114                     	;# 
  3955  0115                     	;# 
  3956  0116                     	;# 
  3957  0117                     	;# 
  3958  0118                     	;# 
  3959  0119                     	;# 
  3960  018C                     	;# 
  3961  018D                     	;# 
  3962  018E                     	;# 
  3963  0197                     	;# 
  3964  0199                     	;# 
  3965  0199                     	;# 
  3966  0199                     	;# 
  3967  019A                     	;# 
  3968  019A                     	;# 
  3969  019A                     	;# 
  3970  019B                     	;# 
  3971  019B                     	;# 
  3972  019B                     	;# 
  3973  019B                     	;# 
  3974  019B                     	;# 
  3975  019C                     	;# 
  3976  019C                     	;# 
  3977  019C                     	;# 
  3978  019D                     	;# 
  3979  019D                     	;# 
  3980  019D                     	;# 
  3981  019E                     	;# 
  3982  019E                     	;# 
  3983  019E                     	;# 
  3984  019F                     	;# 
  3985  019F                     	;# 
  3986  019F                     	;# 
  3987  019F                     	;# 
  3988  019F                     	;# 
  3989  020C                     	;# 
  3990  020D                     	;# 
  3991  020E                     	;# 
  3992  0211                     	;# 
  3993  0211                     	;# 
  3994  0212                     	;# 
  3995  0212                     	;# 
  3996  0213                     	;# 
  3997  0213                     	;# 
  3998  0214                     	;# 
  3999  0214                     	;# 
  4000  0215                     	;# 
  4001  0215                     	;# 
  4002  0215                     	;# 
  4003  0215                     	;# 
  4004  0216                     	;# 
  4005  0216                     	;# 
  4006  0217                     	;# 
  4007  0217                     	;# 
  4008  028C                     	;# 
  4009  028D                     	;# 
  4010  028E                     	;# 
  4011  0291                     	;# 
  4012  0291                     	;# 
  4013  0292                     	;# 
  4014  0293                     	;# 
  4015  0294                     	;# 
  4016  0295                     	;# 
  4017  0295                     	;# 
  4018  0296                     	;# 
  4019  0297                     	;# 
  4020  0298                     	;# 
  4021  029F                     	;# 
  4022  030C                     	;# 
  4023  030D                     	;# 
  4024  030E                     	;# 
  4025  0311                     	;# 
  4026  0311                     	;# 
  4027  0312                     	;# 
  4028  0313                     	;# 
  4029  0314                     	;# 
  4030  0315                     	;# 
  4031  0315                     	;# 
  4032  0316                     	;# 
  4033  0317                     	;# 
  4034  0318                     	;# 
  4035  038C                     	;# 
  4036  038D                     	;# 
  4037  038E                     	;# 
  4038  0391                     	;# 
  4039  0392                     	;# 
  4040  0393                     	;# 
  4041  0394                     	;# 
  4042  0395                     	;# 
  4043  0396                     	;# 
  4044  0397                     	;# 
  4045  0398                     	;# 
  4046  0399                     	;# 
  4047  039A                     	;# 
  4048  039C                     	;# 
  4049  039D                     	;# 
  4050  039E                     	;# 
  4051  039F                     	;# 
  4052  0411                     	;# 
  4053  0411                     	;# 
  4054  0412                     	;# 
  4055  0413                     	;# 
  4056  0414                     	;# 
  4057  0415                     	;# 
  4058  0416                     	;# 
  4059  0417                     	;# 
  4060  0418                     	;# 
  4061  0418                     	;# 
  4062  0419                     	;# 
  4063  041A                     	;# 
  4064  041B                     	;# 
  4065  041C                     	;# 
  4066  041D                     	;# 
  4067  041E                     	;# 
  4068  041F                     	;# 
  4069  0498                     	;# 
  4070  0498                     	;# 
  4071  0499                     	;# 
  4072  049A                     	;# 
  4073  049B                     	;# 
  4074  049B                     	;# 
  4075  049C                     	;# 
  4076  049D                     	;# 
  4077  049E                     	;# 
  4078  049F                     	;# 
  4079  0617                     	;# 
  4080  0618                     	;# 
  4081  0619                     	;# 
  4082  0619                     	;# 
  4083  061A                     	;# 
  4084  061B                     	;# 
  4085  061C                     	;# 
  4086  061C                     	;# 
  4087  061F                     	;# 
  4088  0691                     	;# 
  4089  0692                     	;# 
  4090  0693                     	;# 
  4091  0694                     	;# 
  4092  0695                     	;# 
  4093  0696                     	;# 
  4094  0697                     	;# 
  4095  0698                     	;# 
  4096  0699                     	;# 
  4097  0711                     	;# 
  4098  0712                     	;# 
  4099  0713                     	;# 
  4100  0714                     	;# 
  4101  0715                     	;# 
  4102  0716                     	;# 
  4103  0717                     	;# 
  4104  0718                     	;# 
  4105  0719                     	;# 
  4106  0891                     	;# 
  4107  0891                     	;# 
  4108  0891                     	;# 
  4109  0891                     	;# 
  4110  0891                     	;# 
  4111  0891                     	;# 
  4112  0892                     	;# 
  4113  0892                     	;# 
  4114  0892                     	;# 
  4115  0893                     	;# 
  4116  0893                     	;# 
  4117  0893                     	;# 
  4118  0893                     	;# 
  4119  0893                     	;# 
  4120  0893                     	;# 
  4121  0894                     	;# 
  4122  0894                     	;# 
  4123  0894                     	;# 
  4124  0895                     	;# 
  4125  0895                     	;# 
  4126  0895                     	;# 
  4127  0896                     	;# 
  4128  0896                     	;# 
  4129  0896                     	;# 
  4130  089B                     	;# 
  4131  0911                     	;# 
  4132  0912                     	;# 
  4133  0913                     	;# 
  4134  0914                     	;# 
  4135  0915                     	;# 
  4136  0916                     	;# 
  4137  0918                     	;# 
  4138  0919                     	;# 
  4139  091A                     	;# 
  4140  091B                     	;# 
  4141  091C                     	;# 
  4142  091D                     	;# 
  4143  091E                     	;# 
  4144  091F                     	;# 
  4145  0E0F                     	;# 
  4146  0E10                     	;# 
  4147  0E11                     	;# 
  4148  0E12                     	;# 
  4149  0E13                     	;# 
  4150  0E14                     	;# 
  4151  0E15                     	;# 
  4152  0E16                     	;# 
  4153  0E17                     	;# 
  4154  0E18                     	;# 
  4155  0E19                     	;# 
  4156  0E1A                     	;# 
  4157  0E1B                     	;# 
  4158  0E1C                     	;# 
  4159  0E20                     	;# 
  4160  0E21                     	;# 
  4161  0E22                     	;# 
  4162  0E24                     	;# 
  4163  0E25                     	;# 
  4164  0E28                     	;# 
  4165  0E29                     	;# 
  4166  0E2A                     	;# 
  4167  0E2B                     	;# 
  4168  0E2C                     	;# 
  4169  0E2D                     	;# 
  4170  0E2E                     	;# 
  4171  0E2F                     	;# 
  4172  0E90                     	;# 
  4173  0E91                     	;# 
  4174  0E92                     	;# 
  4175  0E94                     	;# 
  4176  0E95                     	;# 
  4177  0E9C                     	;# 
  4178  0E9D                     	;# 
  4179  0E9E                     	;# 
  4180  0E9F                     	;# 
  4181  0EA0                     	;# 
  4182  0EA1                     	;# 
  4183  0EA2                     	;# 
  4184  0EA3                     	;# 
  4185  0EA4                     	;# 
  4186  0EA5                     	;# 
  4187  0EA6                     	;# 
  4188  0EA7                     	;# 
  4189  0F0F                     	;# 
  4190  0F10                     	;# 
  4191  0F11                     	;# 
  4192  0F12                     	;# 
  4193  0F13                     	;# 
  4194  0F14                     	;# 
  4195  0F15                     	;# 
  4196  0F16                     	;# 
  4197  0F17                     	;# 
  4198  0F18                     	;# 
  4199  0F19                     	;# 
  4200  0F1A                     	;# 
  4201  0F1B                     	;# 
  4202  0F1C                     	;# 
  4203  0F1D                     	;# 
  4204  0F1E                     	;# 
  4205  0F1F                     	;# 
  4206  0F20                     	;# 
  4207  0F21                     	;# 
  4208  0F22                     	;# 
  4209  0F23                     	;# 
  4210  0F24                     	;# 
  4211  0F25                     	;# 
  4212  0F26                     	;# 
  4213  0F27                     	;# 
  4214  0F28                     	;# 
  4215  0F29                     	;# 
  4216  0F2A                     	;# 
  4217  0F2B                     	;# 
  4218  0F2C                     	;# 
  4219  0F2D                     	;# 
  4220  0F2E                     	;# 
  4221  0F2F                     	;# 
  4222  0F30                     	;# 
  4223  0F31                     	;# 
  4224  0F32                     	;# 
  4225  0F33                     	;# 
  4226  0F34                     	;# 
  4227  0F35                     	;# 
  4228  0F36                     	;# 
  4229  0F37                     	;# 
  4230  0FE4                     	;# 
  4231  0FE5                     	;# 
  4232  0FE6                     	;# 
  4233  0FE7                     	;# 
  4234  0FE8                     	;# 
  4235  0FE9                     	;# 
  4236  0FEA                     	;# 
  4237  0FEB                     	;# 
  4238  0FED                     	;# 
  4239  0FEE                     	;# 
  4240  0FEF                     	;# 
  4241  0000                     	;# 
  4242  0001                     	;# 
  4243  0002                     	;# 
  4244  0003                     	;# 
  4245  0004                     	;# 
  4246  0005                     	;# 
  4247  0006                     	;# 
  4248  0007                     	;# 
  4249  0008                     	;# 
  4250  0009                     	;# 
  4251  000A                     	;# 
  4252  000B                     	;# 
  4253  000C                     	;# 
  4254  000D                     	;# 
  4255  000E                     	;# 
  4256  0010                     	;# 
  4257  0011                     	;# 
  4258  0012                     	;# 
  4259  0013                     	;# 
  4260  0014                     	;# 
  4261  0015                     	;# 
  4262  0015                     	;# 
  4263  0016                     	;# 
  4264  0016                     	;# 
  4265  0017                     	;# 
  4266  0018                     	;# 
  4267  0019                     	;# 
  4268  0019                     	;# 
  4269  001A                     	;# 
  4270  001B                     	;# 
  4271  001C                     	;# 
  4272  001D                     	;# 
  4273  001E                     	;# 
  4274  001F                     	;# 
  4275  008C                     	;# 
  4276  008D                     	;# 
  4277  008E                     	;# 
  4278  0090                     	;# 
  4279  0091                     	;# 
  4280  0092                     	;# 
  4281  0093                     	;# 
  4282  0094                     	;# 
  4283  0097                     	;# 
  4284  009B                     	;# 
  4285  009B                     	;# 
  4286  009C                     	;# 
  4287  009D                     	;# 
  4288  009E                     	;# 
  4289  009F                     	;# 
  4290  010C                     	;# 
  4291  010D                     	;# 
  4292  010E                     	;# 
  4293  0111                     	;# 
  4294  0112                     	;# 
  4295  0113                     	;# 
  4296  0114                     	;# 
  4297  0115                     	;# 
  4298  0116                     	;# 
  4299  0117                     	;# 
  4300  0118                     	;# 
  4301  0119                     	;# 
  4302  018C                     	;# 
  4303  018D                     	;# 
  4304  018E                     	;# 
  4305  0197                     	;# 
  4306  0199                     	;# 
  4307  0199                     	;# 
  4308  0199                     	;# 
  4309  019A                     	;# 
  4310  019A                     	;# 
  4311  019A                     	;# 
  4312  019B                     	;# 
  4313  019B                     	;# 
  4314  019B                     	;# 
  4315  019B                     	;# 
  4316  019B                     	;# 
  4317  019C                     	;# 
  4318  019C                     	;# 
  4319  019C                     	;# 
  4320  019D                     	;# 
  4321  019D                     	;# 
  4322  019D                     	;# 
  4323  019E                     	;# 
  4324  019E                     	;# 
  4325  019E                     	;# 
  4326  019F                     	;# 
  4327  019F                     	;# 
  4328  019F                     	;# 
  4329  019F                     	;# 
  4330  019F                     	;# 
  4331  020C                     	;# 
  4332  020D                     	;# 
  4333  020E                     	;# 
  4334  0211                     	;# 
  4335  0211                     	;# 
  4336  0212                     	;# 
  4337  0212                     	;# 
  4338  0213                     	;# 
  4339  0213                     	;# 
  4340  0214                     	;# 
  4341  0214                     	;# 
  4342  0215                     	;# 
  4343  0215                     	;# 
  4344  0215                     	;# 
  4345  0215                     	;# 
  4346  0216                     	;# 
  4347  0216                     	;# 
  4348  0217                     	;# 
  4349  0217                     	;# 
  4350  028C                     	;# 
  4351  028D                     	;# 
  4352  028E                     	;# 
  4353  0291                     	;# 
  4354  0291                     	;# 
  4355  0292                     	;# 
  4356  0293                     	;# 
  4357  0294                     	;# 
  4358  0295                     	;# 
  4359  0295                     	;# 
  4360  0296                     	;# 
  4361  0297                     	;# 
  4362  0298                     	;# 
  4363  029F                     	;# 
  4364  030C                     	;# 
  4365  030D                     	;# 
  4366  030E                     	;# 
  4367  0311                     	;# 
  4368  0311                     	;# 
  4369  0312                     	;# 
  4370  0313                     	;# 
  4371  0314                     	;# 
  4372  0315                     	;# 
  4373  0315                     	;# 
  4374  0316                     	;# 
  4375  0317                     	;# 
  4376  0318                     	;# 
  4377  038C                     	;# 
  4378  038D                     	;# 
  4379  038E                     	;# 
  4380  0391                     	;# 
  4381  0392                     	;# 
  4382  0393                     	;# 
  4383  0394                     	;# 
  4384  0395                     	;# 
  4385  0396                     	;# 
  4386  0397                     	;# 
  4387  0398                     	;# 
  4388  0399                     	;# 
  4389  039A                     	;# 
  4390  039C                     	;# 
  4391  039D                     	;# 
  4392  039E                     	;# 
  4393  039F                     	;# 
  4394  0411                     	;# 
  4395  0411                     	;# 
  4396  0412                     	;# 
  4397  0413                     	;# 
  4398  0414                     	;# 
  4399  0415                     	;# 
  4400  0416                     	;# 
  4401  0417                     	;# 
  4402  0418                     	;# 
  4403  0418                     	;# 
  4404  0419                     	;# 
  4405  041A                     	;# 
  4406  041B                     	;# 
  4407  041C                     	;# 
  4408  041D                     	;# 
  4409  041E                     	;# 
  4410  041F                     	;# 
  4411  0498                     	;# 
  4412  0498                     	;# 
  4413  0499                     	;# 
  4414  049A                     	;# 
  4415  049B                     	;# 
  4416  049B                     	;# 
  4417  049C                     	;# 
  4418  049D                     	;# 
  4419  049E                     	;# 
  4420  049F                     	;# 
  4421  0617                     	;# 
  4422  0618                     	;# 
  4423  0619                     	;# 
  4424  0619                     	;# 
  4425  061A                     	;# 
  4426  061B                     	;# 
  4427  061C                     	;# 
  4428  061C                     	;# 
  4429  061F                     	;# 
  4430  0691                     	;# 
  4431  0692                     	;# 
  4432  0693                     	;# 
  4433  0694                     	;# 
  4434  0695                     	;# 
  4435  0696                     	;# 
  4436  0697                     	;# 
  4437  0698                     	;# 
  4438  0699                     	;# 
  4439  0711                     	;# 
  4440  0712                     	;# 
  4441  0713                     	;# 
  4442  0714                     	;# 
  4443  0715                     	;# 
  4444  0716                     	;# 
  4445  0717                     	;# 
  4446  0718                     	;# 
  4447  0719                     	;# 
  4448  0891                     	;# 
  4449  0891                     	;# 
  4450  0891                     	;# 
  4451  0891                     	;# 
  4452  0891                     	;# 
  4453  0891                     	;# 
  4454  0892                     	;# 
  4455  0892                     	;# 
  4456  0892                     	;# 
  4457  0893                     	;# 
  4458  0893                     	;# 
  4459  0893                     	;# 
  4460  0893                     	;# 
  4461  0893                     	;# 
  4462  0893                     	;# 
  4463  0894                     	;# 
  4464  0894                     	;# 
  4465  0894                     	;# 
  4466  0895                     	;# 
  4467  0895                     	;# 
  4468  0895                     	;# 
  4469  0896                     	;# 
  4470  0896                     	;# 
  4471  0896                     	;# 
  4472  089B                     	;# 
  4473  0911                     	;# 
  4474  0912                     	;# 
  4475  0913                     	;# 
  4476  0914                     	;# 
  4477  0915                     	;# 
  4478  0916                     	;# 
  4479  0918                     	;# 
  4480  0919                     	;# 
  4481  091A                     	;# 
  4482  091B                     	;# 
  4483  091C                     	;# 
  4484  091D                     	;# 
  4485  091E                     	;# 
  4486  091F                     	;# 
  4487  0E0F                     	;# 
  4488  0E10                     	;# 
  4489  0E11                     	;# 
  4490  0E12                     	;# 
  4491  0E13                     	;# 
  4492  0E14                     	;# 
  4493  0E15                     	;# 
  4494  0E16                     	;# 
  4495  0E17                     	;# 
  4496  0E18                     	;# 
  4497  0E19                     	;# 
  4498  0E1A                     	;# 
  4499  0E1B                     	;# 
  4500  0E1C                     	;# 
  4501  0E20                     	;# 
  4502  0E21                     	;# 
  4503  0E22                     	;# 
  4504  0E24                     	;# 
  4505  0E25                     	;# 
  4506  0E28                     	;# 
  4507  0E29                     	;# 
  4508  0E2A                     	;# 
  4509  0E2B                     	;# 
  4510  0E2C                     	;# 
  4511  0E2D                     	;# 
  4512  0E2E                     	;# 
  4513  0E2F                     	;# 
  4514  0E90                     	;# 
  4515  0E91                     	;# 
  4516  0E92                     	;# 
  4517  0E94                     	;# 
  4518  0E95                     	;# 
  4519  0E9C                     	;# 
  4520  0E9D                     	;# 
  4521  0E9E                     	;# 
  4522  0E9F                     	;# 
  4523  0EA0                     	;# 
  4524  0EA1                     	;# 
  4525  0EA2                     	;# 
  4526  0EA3                     	;# 
  4527  0EA4                     	;# 
  4528  0EA5                     	;# 
  4529  0EA6                     	;# 
  4530  0EA7                     	;# 
  4531  0F0F                     	;# 
  4532  0F10                     	;# 
  4533  0F11                     	;# 
  4534  0F12                     	;# 
  4535  0F13                     	;# 
  4536  0F14                     	;# 
  4537  0F15                     	;# 
  4538  0F16                     	;# 
  4539  0F17                     	;# 
  4540  0F18                     	;# 
  4541  0F19                     	;# 
  4542  0F1A                     	;# 
  4543  0F1B                     	;# 
  4544  0F1C                     	;# 
  4545  0F1D                     	;# 
  4546  0F1E                     	;# 
  4547  0F1F                     	;# 
  4548  0F20                     	;# 
  4549  0F21                     	;# 
  4550  0F22                     	;# 
  4551  0F23                     	;# 
  4552  0F24                     	;# 
  4553  0F25                     	;# 
  4554  0F26                     	;# 
  4555  0F27                     	;# 
  4556  0F28                     	;# 
  4557  0F29                     	;# 
  4558  0F2A                     	;# 
  4559  0F2B                     	;# 
  4560  0F2C                     	;# 
  4561  0F2D                     	;# 
  4562  0F2E                     	;# 
  4563  0F2F                     	;# 
  4564  0F30                     	;# 
  4565  0F31                     	;# 
  4566  0F32                     	;# 
  4567  0F33                     	;# 
  4568  0F34                     	;# 
  4569  0F35                     	;# 
  4570  0F36                     	;# 
  4571  0F37                     	;# 
  4572  0FE4                     	;# 
  4573  0FE5                     	;# 
  4574  0FE6                     	;# 
  4575  0FE7                     	;# 
  4576  0FE8                     	;# 
  4577  0FE9                     	;# 
  4578  0FEA                     	;# 
  4579  0FEB                     	;# 
  4580  0FED                     	;# 
  4581  0FEE                     	;# 
  4582  0FEF                     	;# 
  4583  0000                     	;# 
  4584  0001                     	;# 
  4585  0002                     	;# 
  4586  0003                     	;# 
  4587  0004                     	;# 
  4588  0005                     	;# 
  4589  0006                     	;# 
  4590  0007                     	;# 
  4591  0008                     	;# 
  4592  0009                     	;# 
  4593  000A                     	;# 
  4594  000B                     	;# 
  4595  000C                     	;# 
  4596  000D                     	;# 
  4597  000E                     	;# 
  4598  0010                     	;# 
  4599  0011                     	;# 
  4600  0012                     	;# 
  4601  0013                     	;# 
  4602  0014                     	;# 
  4603  0015                     	;# 
  4604  0015                     	;# 
  4605  0016                     	;# 
  4606  0016                     	;# 
  4607  0017                     	;# 
  4608  0018                     	;# 
  4609  0019                     	;# 
  4610  0019                     	;# 
  4611  001A                     	;# 
  4612  001B                     	;# 
  4613  001C                     	;# 
  4614  001D                     	;# 
  4615  001E                     	;# 
  4616  001F                     	;# 
  4617  008C                     	;# 
  4618  008D                     	;# 
  4619  008E                     	;# 
  4620  0090                     	;# 
  4621  0091                     	;# 
  4622  0092                     	;# 
  4623  0093                     	;# 
  4624  0094                     	;# 
  4625  0097                     	;# 
  4626  009B                     	;# 
  4627  009B                     	;# 
  4628  009C                     	;# 
  4629  009D                     	;# 
  4630  009E                     	;# 
  4631  009F                     	;# 
  4632  010C                     	;# 
  4633  010D                     	;# 
  4634  010E                     	;# 
  4635  0111                     	;# 
  4636  0112                     	;# 
  4637  0113                     	;# 
  4638  0114                     	;# 
  4639  0115                     	;# 
  4640  0116                     	;# 
  4641  0117                     	;# 
  4642  0118                     	;# 
  4643  0119                     	;# 
  4644  018C                     	;# 
  4645  018D                     	;# 
  4646  018E                     	;# 
  4647  0197                     	;# 
  4648  0199                     	;# 
  4649  0199                     	;# 
  4650  0199                     	;# 
  4651  019A                     	;# 
  4652  019A                     	;# 
  4653  019A                     	;# 
  4654  019B                     	;# 
  4655  019B                     	;# 
  4656  019B                     	;# 
  4657  019B                     	;# 
  4658  019B                     	;# 
  4659  019C                     	;# 
  4660  019C                     	;# 
  4661  019C                     	;# 
  4662  019D                     	;# 
  4663  019D                     	;# 
  4664  019D                     	;# 
  4665  019E                     	;# 
  4666  019E                     	;# 
  4667  019E                     	;# 
  4668  019F                     	;# 
  4669  019F                     	;# 
  4670  019F                     	;# 
  4671  019F                     	;# 
  4672  019F                     	;# 
  4673  020C                     	;# 
  4674  020D                     	;# 
  4675  020E                     	;# 
  4676  0211                     	;# 
  4677  0211                     	;# 
  4678  0212                     	;# 
  4679  0212                     	;# 
  4680  0213                     	;# 
  4681  0213                     	;# 
  4682  0214                     	;# 
  4683  0214                     	;# 
  4684  0215                     	;# 
  4685  0215                     	;# 
  4686  0215                     	;# 
  4687  0215                     	;# 
  4688  0216                     	;# 
  4689  0216                     	;# 
  4690  0217                     	;# 
  4691  0217                     	;# 
  4692  028C                     	;# 
  4693  028D                     	;# 
  4694  028E                     	;# 
  4695  0291                     	;# 
  4696  0291                     	;# 
  4697  0292                     	;# 
  4698  0293                     	;# 
  4699  0294                     	;# 
  4700  0295                     	;# 
  4701  0295                     	;# 
  4702  0296                     	;# 
  4703  0297                     	;# 
  4704  0298                     	;# 
  4705  029F                     	;# 
  4706  030C                     	;# 
  4707  030D                     	;# 
  4708  030E                     	;# 
  4709  0311                     	;# 
  4710  0311                     	;# 
  4711  0312                     	;# 
  4712  0313                     	;# 
  4713  0314                     	;# 
  4714  0315                     	;# 
  4715  0315                     	;# 
  4716  0316                     	;# 
  4717  0317                     	;# 
  4718  0318                     	;# 
  4719  038C                     	;# 
  4720  038D                     	;# 
  4721  038E                     	;# 
  4722  0391                     	;# 
  4723  0392                     	;# 
  4724  0393                     	;# 
  4725  0394                     	;# 
  4726  0395                     	;# 
  4727  0396                     	;# 
  4728  0397                     	;# 
  4729  0398                     	;# 
  4730  0399                     	;# 
  4731  039A                     	;# 
  4732  039C                     	;# 
  4733  039D                     	;# 
  4734  039E                     	;# 
  4735  039F                     	;# 
  4736  0411                     	;# 
  4737  0411                     	;# 
  4738  0412                     	;# 
  4739  0413                     	;# 
  4740  0414                     	;# 
  4741  0415                     	;# 
  4742  0416                     	;# 
  4743  0417                     	;# 
  4744  0418                     	;# 
  4745  0418                     	;# 
  4746  0419                     	;# 
  4747  041A                     	;# 
  4748  041B                     	;# 
  4749  041C                     	;# 
  4750  041D                     	;# 
  4751  041E                     	;# 
  4752  041F                     	;# 
  4753  0498                     	;# 
  4754  0498                     	;# 
  4755  0499                     	;# 
  4756  049A                     	;# 
  4757  049B                     	;# 
  4758  049B                     	;# 
  4759  049C                     	;# 
  4760  049D                     	;# 
  4761  049E                     	;# 
  4762  049F                     	;# 
  4763  0617                     	;# 
  4764  0618                     	;# 
  4765  0619                     	;# 
  4766  0619                     	;# 
  4767  061A                     	;# 
  4768  061B                     	;# 
  4769  061C                     	;# 
  4770  061C                     	;# 
  4771  061F                     	;# 
  4772  0691                     	;# 
  4773  0692                     	;# 
  4774  0693                     	;# 
  4775  0694                     	;# 
  4776  0695                     	;# 
  4777  0696                     	;# 
  4778  0697                     	;# 
  4779  0698                     	;# 
  4780  0699                     	;# 
  4781  0711                     	;# 
  4782  0712                     	;# 
  4783  0713                     	;# 
  4784  0714                     	;# 
  4785  0715                     	;# 
  4786  0716                     	;# 
  4787  0717                     	;# 
  4788  0718                     	;# 
  4789  0719                     	;# 
  4790  0891                     	;# 
  4791  0891                     	;# 
  4792  0891                     	;# 
  4793  0891                     	;# 
  4794  0891                     	;# 
  4795  0891                     	;# 
  4796  0892                     	;# 
  4797  0892                     	;# 
  4798  0892                     	;# 
  4799  0893                     	;# 
  4800  0893                     	;# 
  4801  0893                     	;# 
  4802  0893                     	;# 
  4803  0893                     	;# 
  4804  0893                     	;# 
  4805  0894                     	;# 
  4806  0894                     	;# 
  4807  0894                     	;# 
  4808  0895                     	;# 
  4809  0895                     	;# 
  4810  0895                     	;# 
  4811  0896                     	;# 
  4812  0896                     	;# 
  4813  0896                     	;# 
  4814  089B                     	;# 
  4815  0911                     	;# 
  4816  0912                     	;# 
  4817  0913                     	;# 
  4818  0914                     	;# 
  4819  0915                     	;# 
  4820  0916                     	;# 
  4821  0918                     	;# 
  4822  0919                     	;# 
  4823  091A                     	;# 
  4824  091B                     	;# 
  4825  091C                     	;# 
  4826  091D                     	;# 
  4827  091E                     	;# 
  4828  091F                     	;# 
  4829  0E0F                     	;# 
  4830  0E10                     	;# 
  4831  0E11                     	;# 
  4832  0E12                     	;# 
  4833  0E13                     	;# 
  4834  0E14                     	;# 
  4835  0E15                     	;# 
  4836  0E16                     	;# 
  4837  0E17                     	;# 
  4838  0E18                     	;# 
  4839  0E19                     	;# 
  4840  0E1A                     	;# 
  4841  0E1B                     	;# 
  4842  0E1C                     	;# 
  4843  0E20                     	;# 
  4844  0E21                     	;# 
  4845  0E22                     	;# 
  4846  0E24                     	;# 
  4847  0E25                     	;# 
  4848  0E28                     	;# 
  4849  0E29                     	;# 
  4850  0E2A                     	;# 
  4851  0E2B                     	;# 
  4852  0E2C                     	;# 
  4853  0E2D                     	;# 
  4854  0E2E                     	;# 
  4855  0E2F                     	;# 
  4856  0E90                     	;# 
  4857  0E91                     	;# 
  4858  0E92                     	;# 
  4859  0E94                     	;# 
  4860  0E95                     	;# 
  4861  0E9C                     	;# 
  4862  0E9D                     	;# 
  4863  0E9E                     	;# 
  4864  0E9F                     	;# 
  4865  0EA0                     	;# 
  4866  0EA1                     	;# 
  4867  0EA2                     	;# 
  4868  0EA3                     	;# 
  4869  0EA4                     	;# 
  4870  0EA5                     	;# 
  4871  0EA6                     	;# 
  4872  0EA7                     	;# 
  4873  0F0F                     	;# 
  4874  0F10                     	;# 
  4875  0F11                     	;# 
  4876  0F12                     	;# 
  4877  0F13                     	;# 
  4878  0F14                     	;# 
  4879  0F15                     	;# 
  4880  0F16                     	;# 
  4881  0F17                     	;# 
  4882  0F18                     	;# 
  4883  0F19                     	;# 
  4884  0F1A                     	;# 
  4885  0F1B                     	;# 
  4886  0F1C                     	;# 
  4887  0F1D                     	;# 
  4888  0F1E                     	;# 
  4889  0F1F                     	;# 
  4890  0F20                     	;# 
  4891  0F21                     	;# 
  4892  0F22                     	;# 
  4893  0F23                     	;# 
  4894  0F24                     	;# 
  4895  0F25                     	;# 
  4896  0F26                     	;# 
  4897  0F27                     	;# 
  4898  0F28                     	;# 
  4899  0F29                     	;# 
  4900  0F2A                     	;# 
  4901  0F2B                     	;# 
  4902  0F2C                     	;# 
  4903  0F2D                     	;# 
  4904  0F2E                     	;# 
  4905  0F2F                     	;# 
  4906  0F30                     	;# 
  4907  0F31                     	;# 
  4908  0F32                     	;# 
  4909  0F33                     	;# 
  4910  0F34                     	;# 
  4911  0F35                     	;# 
  4912  0F36                     	;# 
  4913  0F37                     	;# 
  4914  0FE4                     	;# 
  4915  0FE5                     	;# 
  4916  0FE6                     	;# 
  4917  0FE7                     	;# 
  4918  0FE8                     	;# 
  4919  0FE9                     	;# 
  4920  0FEA                     	;# 
  4921  0FEB                     	;# 
  4922  0FED                     	;# 
  4923  0FEE                     	;# 
  4924  0FEF                     	;# 
  4925  0000                     	;# 
  4926  0001                     	;# 
  4927  0002                     	;# 
  4928  0003                     	;# 
  4929  0004                     	;# 
  4930  0005                     	;# 
  4931  0006                     	;# 
  4932  0007                     	;# 
  4933  0008                     	;# 
  4934  0009                     	;# 
  4935  000A                     	;# 
  4936  000B                     	;# 
  4937  000C                     	;# 
  4938  000D                     	;# 
  4939  000E                     	;# 
  4940  0010                     	;# 
  4941  0011                     	;# 
  4942  0012                     	;# 
  4943  0013                     	;# 
  4944  0014                     	;# 
  4945  0015                     	;# 
  4946  0015                     	;# 
  4947  0016                     	;# 
  4948  0016                     	;# 
  4949  0017                     	;# 
  4950  0018                     	;# 
  4951  0019                     	;# 
  4952  0019                     	;# 
  4953  001A                     	;# 
  4954  001B                     	;# 
  4955  001C                     	;# 
  4956  001D                     	;# 
  4957  001E                     	;# 
  4958  001F                     	;# 
  4959  008C                     	;# 
  4960  008D                     	;# 
  4961  008E                     	;# 
  4962  0090                     	;# 
  4963  0091                     	;# 
  4964  0092                     	;# 
  4965  0093                     	;# 
  4966  0094                     	;# 
  4967  0097                     	;# 
  4968  009B                     	;# 
  4969  009B                     	;# 
  4970  009C                     	;# 
  4971  009D                     	;# 
  4972  009E                     	;# 
  4973  009F                     	;# 
  4974  010C                     	;# 
  4975  010D                     	;# 
  4976  010E                     	;# 
  4977  0111                     	;# 
  4978  0112                     	;# 
  4979  0113                     	;# 
  4980  0114                     	;# 
  4981  0115                     	;# 
  4982  0116                     	;# 
  4983  0117                     	;# 
  4984  0118                     	;# 
  4985  0119                     	;# 
  4986  018C                     	;# 
  4987  018D                     	;# 
  4988  018E                     	;# 
  4989  0197                     	;# 
  4990  0199                     	;# 
  4991  0199                     	;# 
  4992  0199                     	;# 
  4993  019A                     	;# 
  4994  019A                     	;# 
  4995  019A                     	;# 
  4996  019B                     	;# 
  4997  019B                     	;# 
  4998  019B                     	;# 
  4999  019B                     	;# 
  5000  019B                     	;# 
  5001  019C                     	;# 
  5002  019C                     	;# 
  5003  019C                     	;# 
  5004  019D                     	;# 
  5005  019D                     	;# 
  5006  019D                     	;# 
  5007  019E                     	;# 
  5008  019E                     	;# 
  5009  019E                     	;# 
  5010  019F                     	;# 
  5011  019F                     	;# 
  5012  019F                     	;# 
  5013  019F                     	;# 
  5014  019F                     	;# 
  5015  020C                     	;# 
  5016  020D                     	;# 
  5017  020E                     	;# 
  5018  0211                     	;# 
  5019  0211                     	;# 
  5020  0212                     	;# 
  5021  0212                     	;# 
  5022  0213                     	;# 
  5023  0213                     	;# 
  5024  0214                     	;# 
  5025  0214                     	;# 
  5026  0215                     	;# 
  5027  0215                     	;# 
  5028  0215                     	;# 
  5029  0215                     	;# 
  5030  0216                     	;# 
  5031  0216                     	;# 
  5032  0217                     	;# 
  5033  0217                     	;# 
  5034  028C                     	;# 
  5035  028D                     	;# 
  5036  028E                     	;# 
  5037  0291                     	;# 
  5038  0291                     	;# 
  5039  0292                     	;# 
  5040  0293                     	;# 
  5041  0294                     	;# 
  5042  0295                     	;# 
  5043  0295                     	;# 
  5044  0296                     	;# 
  5045  0297                     	;# 
  5046  0298                     	;# 
  5047  029F                     	;# 
  5048  030C                     	;# 
  5049  030D                     	;# 
  5050  030E                     	;# 
  5051  0311                     	;# 
  5052  0311                     	;# 
  5053  0312                     	;# 
  5054  0313                     	;# 
  5055  0314                     	;# 
  5056  0315                     	;# 
  5057  0315                     	;# 
  5058  0316                     	;# 
  5059  0317                     	;# 
  5060  0318                     	;# 
  5061  038C                     	;# 
  5062  038D                     	;# 
  5063  038E                     	;# 
  5064  0391                     	;# 
  5065  0392                     	;# 
  5066  0393                     	;# 
  5067  0394                     	;# 
  5068  0395                     	;# 
  5069  0396                     	;# 
  5070  0397                     	;# 
  5071  0398                     	;# 
  5072  0399                     	;# 
  5073  039A                     	;# 
  5074  039C                     	;# 
  5075  039D                     	;# 
  5076  039E                     	;# 
  5077  039F                     	;# 
  5078  0411                     	;# 
  5079  0411                     	;# 
  5080  0412                     	;# 
  5081  0413                     	;# 
  5082  0414                     	;# 
  5083  0415                     	;# 
  5084  0416                     	;# 
  5085  0417                     	;# 
  5086  0418                     	;# 
  5087  0418                     	;# 
  5088  0419                     	;# 
  5089  041A                     	;# 
  5090  041B                     	;# 
  5091  041C                     	;# 
  5092  041D                     	;# 
  5093  041E                     	;# 
  5094  041F                     	;# 
  5095  0498                     	;# 
  5096  0498                     	;# 
  5097  0499                     	;# 
  5098  049A                     	;# 
  5099  049B                     	;# 
  5100  049B                     	;# 
  5101  049C                     	;# 
  5102  049D                     	;# 
  5103  049E                     	;# 
  5104  049F                     	;# 
  5105  0617                     	;# 
  5106  0618                     	;# 
  5107  0619                     	;# 
  5108  0619                     	;# 
  5109  061A                     	;# 
  5110  061B                     	;# 
  5111  061C                     	;# 
  5112  061C                     	;# 
  5113  061F                     	;# 
  5114  0691                     	;# 
  5115  0692                     	;# 
  5116  0693                     	;# 
  5117  0694                     	;# 
  5118  0695                     	;# 
  5119  0696                     	;# 
  5120  0697                     	;# 
  5121  0698                     	;# 
  5122  0699                     	;# 
  5123  0711                     	;# 
  5124  0712                     	;# 
  5125  0713                     	;# 
  5126  0714                     	;# 
  5127  0715                     	;# 
  5128  0716                     	;# 
  5129  0717                     	;# 
  5130  0718                     	;# 
  5131  0719                     	;# 
  5132  0891                     	;# 
  5133  0891                     	;# 
  5134  0891                     	;# 
  5135  0891                     	;# 
  5136  0891                     	;# 
  5137  0891                     	;# 
  5138  0892                     	;# 
  5139  0892                     	;# 
  5140  0892                     	;# 
  5141  0893                     	;# 
  5142  0893                     	;# 
  5143  0893                     	;# 
  5144  0893                     	;# 
  5145  0893                     	;# 
  5146  0893                     	;# 
  5147  0894                     	;# 
  5148  0894                     	;# 
  5149  0894                     	;# 
  5150  0895                     	;# 
  5151  0895                     	;# 
  5152  0895                     	;# 
  5153  0896                     	;# 
  5154  0896                     	;# 
  5155  0896                     	;# 
  5156  089B                     	;# 
  5157  0911                     	;# 
  5158  0912                     	;# 
  5159  0913                     	;# 
  5160  0914                     	;# 
  5161  0915                     	;# 
  5162  0916                     	;# 
  5163  0918                     	;# 
  5164  0919                     	;# 
  5165  091A                     	;# 
  5166  091B                     	;# 
  5167  091C                     	;# 
  5168  091D                     	;# 
  5169  091E                     	;# 
  5170  091F                     	;# 
  5171  0E0F                     	;# 
  5172  0E10                     	;# 
  5173  0E11                     	;# 
  5174  0E12                     	;# 
  5175  0E13                     	;# 
  5176  0E14                     	;# 
  5177  0E15                     	;# 
  5178  0E16                     	;# 
  5179  0E17                     	;# 
  5180  0E18                     	;# 
  5181  0E19                     	;# 
  5182  0E1A                     	;# 
  5183  0E1B                     	;# 
  5184  0E1C                     	;# 
  5185  0E20                     	;# 
  5186  0E21                     	;# 
  5187  0E22                     	;# 
  5188  0E24                     	;# 
  5189  0E25                     	;# 
  5190  0E28                     	;# 
  5191  0E29                     	;# 
  5192  0E2A                     	;# 
  5193  0E2B                     	;# 
  5194  0E2C                     	;# 
  5195  0E2D                     	;# 
  5196  0E2E                     	;# 
  5197  0E2F                     	;# 
  5198  0E90                     	;# 
  5199  0E91                     	;# 
  5200  0E92                     	;# 
  5201  0E94                     	;# 
  5202  0E95                     	;# 
  5203  0E9C                     	;# 
  5204  0E9D                     	;# 
  5205  0E9E                     	;# 
  5206  0E9F                     	;# 
  5207  0EA0                     	;# 
  5208  0EA1                     	;# 
  5209  0EA2                     	;# 
  5210  0EA3                     	;# 
  5211  0EA4                     	;# 
  5212  0EA5                     	;# 
  5213  0EA6                     	;# 
  5214  0EA7                     	;# 
  5215  0F0F                     	;# 
  5216  0F10                     	;# 
  5217  0F11                     	;# 
  5218  0F12                     	;# 
  5219  0F13                     	;# 
  5220  0F14                     	;# 
  5221  0F15                     	;# 
  5222  0F16                     	;# 
  5223  0F17                     	;# 
  5224  0F18                     	;# 
  5225  0F19                     	;# 
  5226  0F1A                     	;# 
  5227  0F1B                     	;# 
  5228  0F1C                     	;# 
  5229  0F1D                     	;# 
  5230  0F1E                     	;# 
  5231  0F1F                     	;# 
  5232  0F20                     	;# 
  5233  0F21                     	;# 
  5234  0F22                     	;# 
  5235  0F23                     	;# 
  5236  0F24                     	;# 
  5237  0F25                     	;# 
  5238  0F26                     	;# 
  5239  0F27                     	;# 
  5240  0F28                     	;# 
  5241  0F29                     	;# 
  5242  0F2A                     	;# 
  5243  0F2B                     	;# 
  5244  0F2C                     	;# 
  5245  0F2D                     	;# 
  5246  0F2E                     	;# 
  5247  0F2F                     	;# 
  5248  0F30                     	;# 
  5249  0F31                     	;# 
  5250  0F32                     	;# 
  5251  0F33                     	;# 
  5252  0F34                     	;# 
  5253  0F35                     	;# 
  5254  0F36                     	;# 
  5255  0F37                     	;# 
  5256  0FE4                     	;# 
  5257  0FE5                     	;# 
  5258  0FE6                     	;# 
  5259  0FE7                     	;# 
  5260  0FE8                     	;# 
  5261  0FE9                     	;# 
  5262  0FEA                     	;# 
  5263  0FEB                     	;# 
  5264  0FED                     	;# 
  5265  0FEE                     	;# 
  5266  0FEF                     	;__u16ResponseBuffer
  5267                           
  5268                           	psect	idataBANK0
  5269  0003                     __pidataBANK0:	
  5270                           
  5271                           ;initializer for _LED_Color
  5272  0003  3401               	retlw	1
  5273                           
  5274                           	psect	idataBANK1
  5275  0D11                     __pidataBANK1:	
  5276                           
  5277                           ;initializer for _EncSpdredFact
  5278  0D11  341E               	retlw	30
  5279  0D12  3400               	retlw	0
  5280  0D13  3400               	retlw	0
  5281  0D14  3400               	retlw	0
  5282                           
  5283                           ;initializer for _EncEdgeMinTimeInterval
  5284  0D15  34FF               	retlw	255
  5285  0D16  34FF               	retlw	255
  5286  0D17  34FF               	retlw	255
  5287  0D18  34EF               	retlw	239
  5288                           
  5289                           	psect	nvBANK0
  5290  006B                     __pnvBANK0:	
  5291  006B                     _timer3ReloadVal:	
  5292  006B                     	ds	2
  5293  006D                     _timer5ReloadVal:	
  5294  006D                     	ds	2
  5295                           
  5296                           	psect	nvBANK1
  5297  00C0                     __pnvBANK1:	
  5298  00C0                     _INT_InterruptHandler:	
  5299  00C0                     	ds	2
  5300  00C2                     _IOCCF5_InterruptHandler:	
  5301  00C2                     	ds	2
  5302  00C4                     _IOCCF4_InterruptHandler:	
  5303  00C4                     	ds	2
  5304  00C6                     _TMR0_InterruptHandler:	
  5305  00C6                     	ds	2
  5306  00C8                     _TMR3_InterruptHandler:	
  5307  00C8                     	ds	2
  5308  00CA                     _TMR5_InterruptHandler:	
  5309  00CA                     	ds	2
  5310  000E                     _PORTCbits	set	14
  5311  000B                     _INTCONbits	set	11
  5312  0017                     _T0CON0bits	set	23
  5313  0010                     _PIR0bits	set	16
  5314  0015                     _TMR0L	set	21
  5315  0016                     _TMR0H	set	22
  5316  0018                     _T0CON1	set	24
  5317  0017                     _T0CON0	set	23
  5318  0011                     _PIR1bits	set	17
  5319  0013                     _PIR3bits	set	19
  5320  0014                     _PIR4bits	set	20
  5321  005F                     _GIE	set	95
  5322  0097                     _WDTCON	set	151
  5323  009D                     _ADCON0bits	set	157
  5324  009C                     _ADRESH	set	156
  5325  009B                     _ADRESL	set	155
  5326  009F                     _ADACT	set	159
  5327  009E                     _ADCON1	set	158
  5328  009D                     _ADCON0	set	157
  5329  008E                     _TRISC	set	142
  5330  008D                     _TRISB	set	141
  5331  008C                     _TRISA	set	140
  5332  0090                     _PIE0bits	set	144
  5333  0093                     _PIE3bits	set	147
  5334  0094                     _PIE4bits	set	148
  5335  010E                     _LATCbits	set	270
  5336  010D                     _LATBbits	set	269
  5337  010E                     _LATC	set	270
  5338  010D                     _LATB	set	269
  5339  010C                     _LATA	set	268
  5340  018C                     _ANSELA	set	396
  5341  018D                     _ANSELB	set	397
  5342  018E                     _ANSELC	set	398
  5343  019A                     _TX1REG	set	410
  5344  0199                     _RC1REG	set	409
  5345  019D                     _RC1STAbits	set	413
  5346  019C                     _SP1BRGH	set	412
  5347  019B                     _SP1BRGL	set	411
  5348  019E                     _TX1STA	set	414
  5349  019D                     _RC1STA	set	413
  5350  019F                     _BAUD1CON	set	415
  5351  020E                     _WPUC	set	526
  5352  020C                     _WPUA	set	524
  5353  020D                     _WPUB	set	525
  5354  0295                     _CCPR2L	set	661
  5355  0296                     _CCPR2H	set	662
  5356  0298                     _CCP2CAP	set	664
  5357  0297                     _CCP2CON	set	663
  5358  029F                     _CCPTMRSbits	set	671
  5359  0291                     _CCPR1L	set	657
  5360  0292                     _CCPR1H	set	658
  5361  0294                     _CCP1CAP	set	660
  5362  0293                     _CCP1CON	set	659
  5363  028E                     _ODCONC	set	654
  5364  028D                     _ODCONB	set	653
  5365  028C                     _ODCONA	set	652
  5366  038C                     _INLVLA	set	908
  5367  038E                     _INLVLC	set	910
  5368  0397                     _IOCCPbits	set	919
  5369  0398                     _IOCCNbits	set	920
  5370  0399                     _IOCCFbits	set	921
  5371  0414                     _T3GCONbits	set	1044
  5372  0413                     _T3CONbits	set	1043
  5373  0411                     _TMR3L	set	1041
  5374  0412                     _TMR3H	set	1042
  5375  0414                     _T3GCON	set	1044
  5376  0413                     _T3CON	set	1043
  5377  041B                     _T5GCONbits	set	1051
  5378  041A                     _T5CONbits	set	1050
  5379  0418                     _TMR5L	set	1048
  5380  0419                     _TMR5H	set	1049
  5381  041B                     _T5GCON	set	1051
  5382  041A                     _T5CON	set	1050
  5383  091E                     _OSCTUNE	set	2334
  5384  091F                     _OSCFRQ	set	2335
  5385  091D                     _OSCEN	set	2333
  5386  091B                     _OSCCON3	set	2331
  5387  0919                     _OSCCON1	set	2329
  5388  0E14                     _CCP1PPSbits	set	3604
  5389  0E10                     _INTPPSbits	set	3600
  5390  0E24                     _RXPPSbits	set	3620
  5391  0E15                     _CCP2PPSbits	set	3605
  5392  0E0F                     _PPSLOCKbits	set	3599
  5393  0E0F                     _PPSLOCK	set	3599
  5394  0E9D                     _RB5PPSbits	set	3741
  5395                           
  5396                           ; #config settings
  5397  0000                     
  5398                           	psect	cinit
  5399  0050                     start_initialization:	
  5400  0050                     __initialization:		;BIGRAM
  5401                           
  5402                           ; Initialize objects allocated to BANK0
  5403  0050  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  5404  0053  00EF               	movwf	__pdataBANK0& (0+127)
  5405                           
  5406                           ; Initialize objects allocated to BANK1
  5407  0054  3011               	movlw	low __pidataBANK1
  5408  0055  0084               	movwf	4
  5409  0056  308D               	movlw	(high __pidataBANK1)| (0+128)
  5410  0057  0085               	movwf	5
  5411  0058  0021               	movlb	1	; select bank1
  5412  0059  0012               	moviw fsr0++
  5413  005A  00CC               	movwf	__pdataBANK1& (0+127)
  5414  005B  0012               	moviw fsr0++
  5415  005C  00CD               	movwf	(__pdataBANK1+1)& (0+127)
  5416  005D  0012               	moviw fsr0++
  5417  005E  00CE               	movwf	(__pdataBANK1+2)& (0+127)
  5418  005F  0012               	moviw fsr0++
  5419  0060  00CF               	movwf	(__pdataBANK1+3)& (0+127)
  5420  0061  0012               	moviw fsr0++
  5421  0062  00D0               	movwf	(__pdataBANK1+4)& (0+127)
  5422  0063  0012               	moviw fsr0++
  5423  0064  00D1               	movwf	(__pdataBANK1+5)& (0+127)
  5424  0065  0012               	moviw fsr0++
  5425  0066  00D2               	movwf	(__pdataBANK1+6)& (0+127)
  5426  0067  0012               	moviw fsr0++
  5427  0068  00D3               	movwf	(__pdataBANK1+7)& (0+127)
  5428                           
  5429                           ; Clear objects allocated to BIGRAM
  5430  0069  30F0               	movlw	low (0+8432)
  5431  006A  0084               	movwf	4
  5432  006B  3020               	movlw	high (0+8432)
  5433  006C  0085               	movwf	5
  5434  006D  3000               	movlw	0
  5435  006E  00FE               	movwf	btemp
  5436  006F  3001               	movlw	1
  5437  0070  00FF               	movwf	btemp+1
  5438  0071  318D  25AD  3180   	fcall	clear_ram0
  5439                           
  5440                           ; Clear objects allocated to COMMON
  5441  0074  01F8               	clrf	__pbssCOMMON& (0+127)
  5442  0075  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  5443  0076  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  5444  0077  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  5445  0078  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  5446                           
  5447                           ; Clear objects allocated to BANK0
  5448  0079  3020               	movlw	low __pbssBANK0
  5449  007A  0084               	movwf	4
  5450  007B  3000               	movlw	high __pbssBANK0
  5451  007C  0085               	movwf	5
  5452  007D  3028               	movlw	40
  5453  007E  00FE               	movwf	btemp
  5454  007F  3000               	movlw	0
  5455  0080  00FF               	movwf	btemp+1
  5456  0081  318D  25AD  3180   	fcall	clear_ram0
  5457                           
  5458                           ; Clear objects allocated to BANK1
  5459  0084  30A0               	movlw	low __pbssBANK1
  5460  0085  0084               	movwf	4
  5461  0086  3000               	movlw	high __pbssBANK1
  5462  0087  0085               	movwf	5
  5463  0088  3020               	movlw	32
  5464  0089  00FE               	movwf	btemp
  5465  008A  3000               	movlw	0
  5466  008B  00FF               	movwf	btemp+1
  5467  008C  318D  25AD  3180   	fcall	clear_ram0
  5468                           
  5469                           ; Clear objects allocated to BANK2
  5470  008F  3020               	movlw	low __pbssBANK2
  5471  0090  0084               	movwf	4
  5472  0091  3001               	movlw	high __pbssBANK2
  5473  0092  0085               	movwf	5
  5474  0093  3040               	movlw	64
  5475  0094  00FE               	movwf	btemp
  5476  0095  3000               	movlw	0
  5477  0096  00FF               	movwf	btemp+1
  5478  0097  318D  25AD         	fcall	clear_ram0
  5479  0099                     end_of_initialization:	
  5480                           ;End of C runtime variable initialization code
  5481                           
  5482  0099                     __end_of__initialization:	
  5483  0099  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5484  009A  0020               	movlb	0
  5485  009B  3186  2EFA         	ljmp	_main	;jump to C main() function
  5486                           
  5487                           	psect	bssCOMMON
  5488  0078                     __pbssCOMMON:	
  5489  0078                     _rxBuffer:	
  5490  0078                     	ds	1
  5491  0079                     _txBuffer:	
  5492  0079                     	ds	1
  5493  007A                     _flagForFirstRevolution:	
  5494  007A                     	ds	1
  5495  007B                     _EncPulseError:	
  5496  007B                     	ds	1
  5497  007C                     _MBwriteToolOperating:	
  5498  007C                     	ds	1
  5499                           
  5500                           	psect	bssBANK0
  5501  0020                     __pbssBANK0:	
  5502  0020                     _EncEdgeTimeInterval:	
  5503  0020                     	ds	4
  5504  0024                     _LedON_Duration_msec:	
  5505  0024                     	ds	2
  5506  0026                     _LED_msec_Cnt:	
  5507  0026                     	ds	2
  5508  0028                     __postTransmission:	
  5509  0028                     	ds	2
  5510  002A                     __preTransmission:	
  5511  002A                     	ds	2
  5512  002C                     __u16WriteQty:	
  5513  002C                     	ds	2
  5514  002E                     __u16WriteAddress:	
  5515  002E                     	ds	2
  5516  0030                     __u16ReadQty:	
  5517  0030                     	ds	2
  5518  0032                     __u16ReadAddress:	
  5519  0032                     	ds	2
  5520  0034                     _OldEncPos:	
  5521  0034                     	ds	2
  5522  0036                     _EncoderPosition:	
  5523  0036                     	ds	2
  5524  0038                     _EncPulseOpState:	
  5525  0038                     	ds	2
  5526  003A                     _OldEncPulseOpState:	
  5527  003A                     	ds	2
  5528  003C                     _Led_ON:	
  5529  003C                     	ds	1
  5530  003D                     __u8ResponseBufferLength:	
  5531  003D                     	ds	1
  5532  003E                     __u8ResponseBufferIndex:	
  5533  003E                     	ds	1
  5534  003F                     __u8TransmitBufferIndex:	
  5535  003F                     	ds	1
  5536  0040                     __u8MBSlave:	
  5537  0040                     	ds	1
  5538  0041                     _delayFlag:	
  5539  0041                     	ds	1
  5540  0042                     _NutRunstate:	
  5541  0042                     	ds	1
  5542  0043                     _ShutdownDetected:	
  5543  0043                     	ds	1
  5544  0044                     _EncEdgeGotFlag:	
  5545  0044                     	ds	1
  5546  0045                     _EncoderPositionOneCycle:	
  5547  0045                     	ds	1
  5548  0046                     _multipleTimecheck1:	
  5549  0046                     	ds	1
  5550  0047                     _multipleTimecheck0:	
  5551  0047                     	ds	1
  5552                           
  5553                           	psect	dataBANK0
  5554  006F                     __pdataBANK0:	
  5555  006F                     _LED_Color:	
  5556  006F                     	ds	1
  5557                           
  5558                           	psect	bssBANK1
  5559  00A0                     __pbssBANK1:	
  5560  00A0                     _TimertickMsec:	
  5561  00A0                     	ds	4
  5562  00A4                     _IdleTimeOnShutOff:	
  5563  00A4                     	ds	4
  5564  00A8                     _EncEdgeMinTimeIntSumAvg:	
  5565  00A8                     	ds	4
  5566  00AC                     _EncEdgeTimeIntervalOld:	
  5567  00AC                     	ds	4
  5568  00B0                     _Blick_tickPoint:	
  5569  00B0                     	ds	2
  5570  00B2                     _Blick_tickPointMsec:	
  5571  00B2                     	ds	2
  5572  00B4                     _u16TransmitBufferLength:	
  5573  00B4                     	ds	2
  5574  00B6                     _delayCount:	
  5575  00B6                     	ds	2
  5576  00B8                     _EncoderPositionAtIndex:	
  5577  00B8                     	ds	2
  5578  00BA                     _NutRunLength:	
  5579  00BA                     	ds	2
  5580  00BC                     _MBwriteCurrentNoOfPulse:	
  5581  00BC                     	ds	2
  5582  00BE                     _MBreadSetNoOfPulse:	
  5583  00BE                     	ds	2
  5584                           
  5585                           	psect	dataBANK1
  5586  00CC                     __pdataBANK1:	
  5587  00CC                     _EncSpdredFact:	
  5588  00CC                     	ds	4
  5589  00D0                     _EncEdgeMinTimeInterval:	
  5590  00D0                     	ds	4
  5591                           
  5592                           	psect	bssBANK2
  5593  0120                     __pbssBANK2:	
  5594  0120                     _u8ModbusADU:	
  5595  0120                     	ds	64
  5596                           
  5597                           	psect	clrtext
  5598  0DAD                     clear_ram0:	
  5599                           ;	Called with FSR0 containing the base address, and
  5600                           ;	btemp/btemp+1 has the size to clear
  5601                           
  5602  0DAD  0064               	clrwdt	;clear the watchdog before getting into this loop
  5603  0DAE                     clrloop0:	
  5604  0DAE  0180               	clrf	0	;clear RAM location pointed to by FSR
  5605  0DAF  3101               	addfsr 0,1
  5606  0DB0  3001               	movlw	1
  5607  0DB1  02FE               	subwf	126,f
  5608  0DB2  3000               	movlw	0
  5609  0DB3  3BFF               	subwfb	127,f
  5610  0DB4  087F               	movf	127,w
  5611  0DB5  047E               	iorwf	126,w
  5612  0DB6  1903               	btfsc	3,2
  5613  0DB7  3400               	retlw	0	;all done for this memory range, return
  5614  0DB8  2DAE               	goto	clrloop0	;have we reached the end yet?
  5615                           
  5616                           	psect	cstackCOMMON
  5617  0070                     __pcstackCOMMON:	
  5618  0070                     ?_TMR5_DefaultInterruptHandler:	
  5619  0070                     ??_TMR5_DefaultInterruptHandler:	
  5620                           ; 1 bytes @ 0x0
  5621                           
  5622  0070                     ?_TMR5_StartTimer:	
  5623                           ; 1 bytes @ 0x0
  5624                           
  5625  0070                     ?_Timer5_Overflow:	
  5626                           ; 1 bytes @ 0x0
  5627                           
  5628  0070                     ??_Timer5_Overflow:	
  5629                           ; 1 bytes @ 0x0
  5630                           
  5631  0070                     ?_TMR3_DefaultInterruptHandler:	
  5632                           ; 1 bytes @ 0x0
  5633                           
  5634  0070                     ?_TMR3_StartTimer:	
  5635                           ; 1 bytes @ 0x0
  5636                           
  5637  0070                     ?_Timer3_Overflow:	
  5638                           ; 1 bytes @ 0x0
  5639                           
  5640  0070                     ??_Timer3_Overflow:	
  5641                           ; 1 bytes @ 0x0
  5642                           
  5643  0070                     ?_TMR0_DefaultInterruptHandler:	
  5644                           ; 1 bytes @ 0x0
  5645                           
  5646  0070                     ??_TMR0_DefaultInterruptHandler:	
  5647                           ; 1 bytes @ 0x0
  5648                           
  5649  0070                     ?_TMR0_StartTimer:	
  5650                           ; 1 bytes @ 0x0
  5651                           
  5652  0070                     ?_TMR0_CallBack:	
  5653                           ; 1 bytes @ 0x0
  5654                           
  5655  0070                     ?_Timer0_tick10msecFunc:	
  5656                           ; 1 bytes @ 0x0
  5657                           
  5658  0070                     ??_Timer0_tick10msecFunc:	
  5659                           ; 1 bytes @ 0x0
  5660                           
  5661  0070                     ?_IOCCF4_DefaultInterruptHandler:	
  5662                           ; 1 bytes @ 0x0
  5663                           
  5664  0070                     ??_IOCCF4_DefaultInterruptHandler:	
  5665                           ; 1 bytes @ 0x0
  5666                           
  5667  0070                     ?_IOCCF5_DefaultInterruptHandler:	
  5668                           ; 1 bytes @ 0x0
  5669                           
  5670  0070                     ??_IOCCF5_DefaultInterruptHandler:	
  5671                           ; 1 bytes @ 0x0
  5672                           
  5673  0070                     ?_IOCCF4_ISR:	
  5674                           ; 1 bytes @ 0x0
  5675                           
  5676  0070                     ??_IOCCF4_ISR:	
  5677                           ; 1 bytes @ 0x0
  5678                           
  5679  0070                     ?_IOCCF5_ISR:	
  5680                           ; 1 bytes @ 0x0
  5681                           
  5682  0070                     ??_IOCCF5_ISR:	
  5683                           ; 1 bytes @ 0x0
  5684                           
  5685  0070                     ?_EncA_PulseEdgeEvent:	
  5686                           ; 1 bytes @ 0x0
  5687                           
  5688  0070                     ?_INT_ISR:	
  5689                           ; 1 bytes @ 0x0
  5690                           
  5691  0070                     ?_OSCILLATOR_Initialize:	
  5692                           ; 1 bytes @ 0x0
  5693                           
  5694  0070                     ?_WDT_Initialize:	
  5695                           ; 1 bytes @ 0x0
  5696                           
  5697  0070                     ?_EXT_INT_Initialize:	
  5698                           ; 1 bytes @ 0x0
  5699                           
  5700  0070                     ?_INT_CallBack:	
  5701                           ; 1 bytes @ 0x0
  5702                           
  5703  0070                     ?_EncINX_PulseRisingEvent:	
  5704                           ; 1 bytes @ 0x0
  5705                           
  5706  0070                     ??_EncINX_PulseRisingEvent:	
  5707                           ; 1 bytes @ 0x0
  5708                           
  5709  0070                     ?_getEncoderState:	
  5710                           ; 1 bytes @ 0x0
  5711                           
  5712  0070                     ?_NutRunCycleStart:	
  5713                           ; 1 bytes @ 0x0
  5714                           
  5715  0070                     ?_LedONStatusBusy:	
  5716                           ; 1 bytes @ 0x0
  5717                           
  5718  0070                     ?_MB_UpdateEPCParameter:	
  5719                           ; 1 bytes @ 0x0
  5720                           
  5721  0070                     ?_NutRunCycleReset:	
  5722                           ; 1 bytes @ 0x0
  5723                           
  5724  0070                     ?_LedON_Control_10msec:	
  5725                           ; 1 bytes @ 0x0
  5726                           
  5727  0070                     ??_LedON_Control_10msec:	
  5728                           ; 1 bytes @ 0x0
  5729                           
  5730  0070                     ?_ModbusMasterTransaction:	
  5731                           ; 1 bytes @ 0x0
  5732                           
  5733  0070                     ?_TMR5_Initialize:	
  5734                           ; 1 bytes @ 0x0
  5735                           
  5736  0070                     ?_TMR5_StopTimer:	
  5737                           ; 1 bytes @ 0x0
  5738                           
  5739  0070                     ?_TMR5_ISR:	
  5740                           ; 1 bytes @ 0x0
  5741                           
  5742  0070                     ??_TMR5_ISR:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745  0070                     ?_TMR3_Initialize:	
  5746                           ; 1 bytes @ 0x0
  5747                           
  5748  0070                     ?_TMR3_StopTimer:	
  5749                           ; 1 bytes @ 0x0
  5750                           
  5751  0070                     ?_TMR3_ISR:	
  5752                           ; 1 bytes @ 0x0
  5753                           
  5754  0070                     ?_EUSART_Initialize:	
  5755                           ; 1 bytes @ 0x0
  5756                           
  5757  0070                     ?_EUSART_Read:	
  5758                           ; 1 bytes @ 0x0
  5759                           
  5760  0070                     ?_EUSART_Write:	
  5761                           ; 1 bytes @ 0x0
  5762                           
  5763  0070                     ?_TMR0_Initialize:	
  5764                           ; 1 bytes @ 0x0
  5765                           
  5766  0070                     ?_TMR0_ISR:	
  5767                           ; 1 bytes @ 0x0
  5768                           
  5769  0070                     ?_PIN_MANAGER_Initialize:	
  5770                           ; 1 bytes @ 0x0
  5771                           
  5772  0070                     ?_PIN_MANAGER_IOC:	
  5773                           ; 1 bytes @ 0x0
  5774                           
  5775  0070                     ??_PIN_MANAGER_IOC:	
  5776                           ; 1 bytes @ 0x0
  5777                           
  5778  0070                     ?_CCP1_Initialize:	
  5779                           ; 1 bytes @ 0x0
  5780                           
  5781  0070                     ?_CCP1_CaptureISR:	
  5782                           ; 1 bytes @ 0x0
  5783                           
  5784  0070                     ?_CCP2_Initialize:	
  5785                           ; 1 bytes @ 0x0
  5786                           
  5787  0070                     ?_ADC_Initialize:	
  5788                           ; 1 bytes @ 0x0
  5789                           
  5790  0070                     ?_INTERRUPT_InterruptManager:	
  5791                           ; 1 bytes @ 0x0
  5792                           
  5793  0070                     ?_SYSTEM_Initialize:	
  5794                           ; 1 bytes @ 0x0
  5795                           
  5796  0070                     ?_INT_DefaultInterruptHandler:	
  5797                           ; 1 bytes @ 0x0
  5798                           
  5799  0070                     ??_INT_DefaultInterruptHandler:	
  5800                           ; 1 bytes @ 0x0
  5801                           
  5802  0070                     ?_main:	
  5803                           ; 1 bytes @ 0x0
  5804                           
  5805  0070                     ?_millisReset:	
  5806                           ; 1 bytes @ 0x0
  5807                           
  5808  0070                     ?_ModbusMasterInit:	
  5809                           ; 1 bytes @ 0x0
  5810                           
  5811  0070                     ?_preTransmission_App:	
  5812                           ; 1 bytes @ 0x0
  5813                           
  5814  0070                     ?_postTransmission_App:	
  5815                           ; 1 bytes @ 0x0
  5816                           
  5817  0070                     ?_ModbusMasterSetup:	
  5818                           ; 1 bytes @ 0x0
  5819                           
  5820  0070                     EncA_PulseEdgeEvent@capturedValue:	
  5821                           ; 2 bytes @ 0x0
  5822                           
  5823                           
  5824                           ; 2 bytes @ 0x0
  5825  0070                     	ds	1
  5826  0071                     ??_INT_ISR:	
  5827  0071                     ??_INT_CallBack:	
  5828                           ; 1 bytes @ 0x1
  5829                           
  5830                           
  5831                           ; 1 bytes @ 0x1
  5832  0071                     	ds	1
  5833  0072                     ?_CCP1_CallBack:	
  5834  0072                     ??_EncA_PulseEdgeEvent:	
  5835                           ; 1 bytes @ 0x2
  5836                           
  5837  0072                     CCP1_CallBack@capturedValue:	
  5838                           ; 1 bytes @ 0x2
  5839                           
  5840                           
  5841                           ; 2 bytes @ 0x2
  5842  0072                     	ds	2
  5843  0074                     ??_TMR3_DefaultInterruptHandler:	
  5844  0074                     ??_TMR0_CallBack:	
  5845                           ; 1 bytes @ 0x4
  5846                           
  5847  0074                     ??_CCP1_CallBack:	
  5848                           ; 1 bytes @ 0x4
  5849                           
  5850  0074                     ??_TMR3_ISR:	
  5851                           ; 1 bytes @ 0x4
  5852                           
  5853  0074                     ??_TMR0_ISR:	
  5854                           ; 1 bytes @ 0x4
  5855                           
  5856  0074                     ??_CCP1_CaptureISR:	
  5857                           ; 1 bytes @ 0x4
  5858                           
  5859                           
  5860                           ; 1 bytes @ 0x4
  5861  0074                     	ds	1
  5862  0075                     CCP1_CaptureISR@module:	
  5863                           
  5864                           ; 2 bytes @ 0x5
  5865  0075                     	ds	2
  5866  0077                     ??_INTERRUPT_InterruptManager:	
  5867                           
  5868                           ; 1 bytes @ 0x7
  5869  0077                     	ds	1
  5870                           
  5871                           	psect	cstackBANK0
  5872  0048                     __pcstackBANK0:	
  5873  0048                     ?_TMR5_SetInterruptHandler:	
  5874  0048                     ??_TMR5_StartTimer:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0048                     ?_TMR3_SetInterruptHandler:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0048                     ??_TMR3_StartTimer:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0048                     ?_TMR0_SetInterruptHandler:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0048                     ??_TMR0_StartTimer:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0048                     ?_IOCCF4_SetInterruptHandler:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0048                     ?_IOCCF5_SetInterruptHandler:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0048                     ??_OSCILLATOR_Initialize:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0048                     ??_WDT_Initialize:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0048                     ??_getEncoderState:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0048                     ??_LedONStatusBusy:	
  5905                           ; 1 bytes @ 0x0
  5906                           
  5907  0048                     ?_delayMsec:	
  5908                           ; 1 bytes @ 0x0
  5909                           
  5910  0048                     ??_NutRunCycleReset:	
  5911                           ; 1 bytes @ 0x0
  5912                           
  5913  0048                     ??_TMR5_StopTimer:	
  5914                           ; 1 bytes @ 0x0
  5915                           
  5916  0048                     ?_TMR5_WriteTimer:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0048                     ??_TMR3_StopTimer:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0048                     ?_TMR3_WriteTimer:	
  5923                           ; 1 bytes @ 0x0
  5924                           
  5925  0048                     ??_EUSART_Initialize:	
  5926                           ; 1 bytes @ 0x0
  5927                           
  5928  0048                     ??_EUSART_Read:	
  5929                           ; 1 bytes @ 0x0
  5930                           
  5931  0048                     ??_EUSART_Write:	
  5932                           ; 1 bytes @ 0x0
  5933                           
  5934  0048                     ??_CCP1_Initialize:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0048                     ??_CCP2_Initialize:	
  5938                           ; 1 bytes @ 0x0
  5939                           
  5940  0048                     ??_ADC_Initialize:	
  5941                           ; 1 bytes @ 0x0
  5942                           
  5943  0048                     ?_INT_SetInterruptHandler:	
  5944                           ; 1 bytes @ 0x0
  5945                           
  5946  0048                     ??_millisReset:	
  5947                           ; 1 bytes @ 0x0
  5948                           
  5949  0048                     ?_highByte:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0048                     ?_lowByte:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0048                     ??_ModbusMasterInit:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0048                     ?_preTransmission:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0048                     ?_postTransmission:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0048                     ??_preTransmission_App:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0048                     ??_postTransmission_App:	
  5968                           ; 1 bytes @ 0x0
  5969                           
  5970  0048                     ?_crc16_update:	
  5971                           ; 1 bytes @ 0x0
  5972                           
  5973  0048                     ?_word:	
  5974                           ; 2 bytes @ 0x0
  5975                           
  5976  0048                     ?_getResponseBuffer:	
  5977                           ; 2 bytes @ 0x0
  5978                           
  5979  0048                     ?___wmul:	
  5980                           ; 2 bytes @ 0x0
  5981                           
  5982  0048                     ?___lwdiv:	
  5983                           ; 2 bytes @ 0x0
  5984                           
  5985  0048                     ?_millis:	
  5986                           ; 2 bytes @ 0x0
  5987                           
  5988  0048                     EUSART_Write@txData:	
  5989                           ; 4 bytes @ 0x0
  5990                           
  5991  0048                     word@lowByte:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0048                     TMR5_WriteTimer@timerVal:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0048                     TMR5_SetInterruptHandler@InterruptHandler:	
  5998                           ; 2 bytes @ 0x0
  5999                           
  6000  0048                     TMR3_WriteTimer@timerVal:	
  6001                           ; 2 bytes @ 0x0
  6002                           
  6003  0048                     TMR3_SetInterruptHandler@InterruptHandler:	
  6004                           ; 2 bytes @ 0x0
  6005                           
  6006  0048                     TMR0_SetInterruptHandler@InterruptHandler:	
  6007                           ; 2 bytes @ 0x0
  6008                           
  6009  0048                     IOCCF4_SetInterruptHandler@InterruptHandler:	
  6010                           ; 2 bytes @ 0x0
  6011                           
  6012  0048                     IOCCF5_SetInterruptHandler@InterruptHandler:	
  6013                           ; 2 bytes @ 0x0
  6014                           
  6015  0048                     INT_SetInterruptHandler@InterruptHandler:	
  6016                           ; 2 bytes @ 0x0
  6017                           
  6018  0048                     crc16_update@crc:	
  6019                           ; 2 bytes @ 0x0
  6020                           
  6021  0048                     highByte@ww:	
  6022                           ; 2 bytes @ 0x0
  6023                           
  6024  0048                     lowByte@ww:	
  6025                           ; 2 bytes @ 0x0
  6026                           
  6027  0048                     preTransmission@preTransmission:	
  6028                           ; 2 bytes @ 0x0
  6029                           
  6030  0048                     postTransmission@postTransmission:	
  6031                           ; 2 bytes @ 0x0
  6032                           
  6033  0048                     ___wmul@multiplier:	
  6034                           ; 2 bytes @ 0x0
  6035                           
  6036  0048                     ___lwdiv@divisor:	
  6037                           ; 2 bytes @ 0x0
  6038                           
  6039  0048                     delayMsec@timems:	
  6040                           ; 2 bytes @ 0x0
  6041                           
  6042                           
  6043                           ; 4 bytes @ 0x0
  6044  0048                     	ds	1
  6045  0049                     ModbusMasterInit@slave:	
  6046                           
  6047                           ; 1 bytes @ 0x1
  6048  0049                     	ds	1
  6049  004A                     ??_TMR5_SetInterruptHandler:	
  6050  004A                     ??_TMR3_SetInterruptHandler:	
  6051                           ; 1 bytes @ 0x2
  6052                           
  6053  004A                     ??_TMR0_SetInterruptHandler:	
  6054                           ; 1 bytes @ 0x2
  6055                           
  6056  004A                     ??_IOCCF4_SetInterruptHandler:	
  6057                           ; 1 bytes @ 0x2
  6058                           
  6059  004A                     ??_IOCCF5_SetInterruptHandler:	
  6060                           ; 1 bytes @ 0x2
  6061                           
  6062  004A                     ??_EXT_INT_Initialize:	
  6063                           ; 1 bytes @ 0x2
  6064                           
  6065  004A                     ??_ModbusMasterSetup:	
  6066                           ; 1 bytes @ 0x2
  6067                           
  6068  004A                     ??_NutRunCycleStart:	
  6069                           ; 1 bytes @ 0x2
  6070                           
  6071  004A                     ??_TMR5_Initialize:	
  6072                           ; 1 bytes @ 0x2
  6073                           
  6074  004A                     ??_TMR5_WriteTimer:	
  6075                           ; 1 bytes @ 0x2
  6076                           
  6077  004A                     ??_TMR3_Initialize:	
  6078                           ; 1 bytes @ 0x2
  6079                           
  6080  004A                     ??_TMR3_WriteTimer:	
  6081                           ; 1 bytes @ 0x2
  6082                           
  6083  004A                     ??_TMR0_Initialize:	
  6084                           ; 1 bytes @ 0x2
  6085                           
  6086  004A                     ??_PIN_MANAGER_Initialize:	
  6087                           ; 1 bytes @ 0x2
  6088                           
  6089  004A                     ??_INT_SetInterruptHandler:	
  6090                           ; 1 bytes @ 0x2
  6091                           
  6092  004A                     ??_highByte:	
  6093                           ; 1 bytes @ 0x2
  6094                           
  6095  004A                     ??_lowByte:	
  6096                           ; 1 bytes @ 0x2
  6097                           
  6098  004A                     ??_word:	
  6099                           ; 1 bytes @ 0x2
  6100                           
  6101  004A                     ??_preTransmission:	
  6102                           ; 1 bytes @ 0x2
  6103                           
  6104  004A                     ??_postTransmission:	
  6105                           ; 1 bytes @ 0x2
  6106                           
  6107  004A                     ??_getResponseBuffer:	
  6108                           ; 1 bytes @ 0x2
  6109                           
  6110  004A                     PIN_MANAGER_Initialize@state:	
  6111                           ; 1 bytes @ 0x2
  6112                           
  6113  004A                     crc16_update@a:	
  6114                           ; 1 bytes @ 0x2
  6115                           
  6116  004A                     ___wmul@multiplicand:	
  6117                           ; 1 bytes @ 0x2
  6118                           
  6119  004A                     ___lwdiv@dividend:	
  6120                           ; 2 bytes @ 0x2
  6121                           
  6122                           
  6123                           ; 2 bytes @ 0x2
  6124  004A                     	ds	1
  6125  004B                     ??_SYSTEM_Initialize:	
  6126  004B                     ??_crc16_update:	
  6127                           ; 1 bytes @ 0x3
  6128                           
  6129                           
  6130                           ; 1 bytes @ 0x3
  6131  004B                     	ds	1
  6132  004C                     ??_delayMsec:	
  6133  004C                     ??_millis:	
  6134                           ; 1 bytes @ 0x4
  6135                           
  6136  004C                     ??___wmul:	
  6137                           ; 1 bytes @ 0x4
  6138                           
  6139  004C                     ??___lwdiv:	
  6140                           ; 1 bytes @ 0x4
  6141                           
  6142  004C                     ___wmul@product:	
  6143                           ; 1 bytes @ 0x4
  6144                           
  6145                           
  6146                           ; 2 bytes @ 0x4
  6147  004C                     	ds	1
  6148  004D                     crc16_update@i:	
  6149  004D                     ___lwdiv@quotient:	
  6150                           ; 2 bytes @ 0x5
  6151                           
  6152                           
  6153                           ; 2 bytes @ 0x5
  6154  004D                     	ds	1
  6155  004E                     getResponseBuffer@u8Index:	
  6156                           
  6157                           ; 1 bytes @ 0x6
  6158  004E                     	ds	1
  6159  004F                     ___lwdiv@counter:	
  6160                           
  6161                           ; 1 bytes @ 0x7
  6162  004F                     	ds	1
  6163  0050                     ?_LedONStartConfig:	
  6164  0050                     LedONStartConfig@LedONDurationSec:	
  6165                           ; 1 bytes @ 0x8
  6166                           
  6167                           
  6168                           ; 1 bytes @ 0x8
  6169  0050                     	ds	1
  6170  0051                     word@highByte:	
  6171  0051                     LedONStartConfig@LedONNumBlink:	
  6172                           ; 1 bytes @ 0x9
  6173                           
  6174                           
  6175                           ; 1 bytes @ 0x9
  6176  0051                     	ds	1
  6177  0052                     ??_LedONStartConfig:	
  6178  0052                     ??_ModbusMasterTransaction:	
  6179                           ; 1 bytes @ 0xA
  6180                           
  6181                           
  6182                           ; 1 bytes @ 0xA
  6183  0052                     	ds	2
  6184  0054                     LedONStartConfig@LEDcolor:	
  6185                           
  6186                           ; 1 bytes @ 0xC
  6187  0054                     	ds	3
  6188  0057                     ModbusMasterTransaction@u32StartTime:	
  6189                           
  6190                           ; 4 bytes @ 0xF
  6191  0057                     	ds	4
  6192  005B                     _ModbusMasterTransaction$1565:	
  6193                           
  6194                           ; 2 bytes @ 0x13
  6195  005B                     	ds	2
  6196  005D                     ModbusMasterTransaction@u8Qty:	
  6197                           
  6198                           ; 1 bytes @ 0x15
  6199  005D                     	ds	1
  6200  005E                     ModbusMasterTransaction@u8BytesLeft:	
  6201                           
  6202                           ; 1 bytes @ 0x16
  6203  005E                     	ds	1
  6204  005F                     ModbusMasterTransaction@u8MBFunction:	
  6205                           
  6206                           ; 1 bytes @ 0x17
  6207  005F                     	ds	1
  6208  0060                     ModbusMasterTransaction@u8MBStatus:	
  6209                           
  6210                           ; 1 bytes @ 0x18
  6211  0060                     	ds	1
  6212  0061                     ModbusMasterTransaction@u16CRC:	
  6213                           
  6214                           ; 2 bytes @ 0x19
  6215  0061                     	ds	2
  6216  0063                     ModbusMasterTransaction@i:	
  6217                           
  6218                           ; 1 bytes @ 0x1B
  6219  0063                     	ds	1
  6220  0064                     ModbusMasterTransaction@u8ModbusADUSize:	
  6221                           
  6222                           ; 1 bytes @ 0x1C
  6223  0064                     	ds	1
  6224  0065                     ?_readHoldingRegisters:	
  6225  0065                     readHoldingRegisters@u16ReadAddress:	
  6226                           ; 1 bytes @ 0x1D
  6227                           
  6228                           
  6229                           ; 2 bytes @ 0x1D
  6230  0065                     	ds	2
  6231  0067                     readHoldingRegisters@u16ReadQty:	
  6232                           
  6233                           ; 2 bytes @ 0x1F
  6234  0067                     	ds	2
  6235  0069                     ??_MB_UpdateEPCParameter:	
  6236  0069                     ??_readHoldingRegisters:	
  6237                           ; 1 bytes @ 0x21
  6238                           
  6239                           
  6240                           ; 1 bytes @ 0x21
  6241  0069                     	ds	1
  6242  006A                     MB_UpdateEPCParameter@result:	
  6243                           
  6244                           ; 1 bytes @ 0x22
  6245  006A                     	ds	1
  6246  006B                     ??_main:	
  6247                           
  6248                           	psect	maintext
  6249  06FA                     __pmaintext:	
  6250                           ; 1 bytes @ 0x23
  6251 ;;
  6252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6253 ;;
  6254 ;; *************** function _main *****************
  6255 ;; Defined at:
  6256 ;;		line 108 in file "main.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;		None
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;		None
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1    wreg      void 
  6263 ;; Registers used:
  6264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6265 ;; Tracked objects:
  6266 ;;		On entry : B1F/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6270 ;;      Params:         0       0       0       0       0       0       0       0
  6271 ;;      Locals:         0       0       0       0       0       0       0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0
  6273 ;;      Totals:         0       0       0       0       0       0       0       0
  6274 ;;Total ram usage:        0 bytes
  6275 ;; Hardware stack levels required when called:    9
  6276 ;; This function calls:
  6277 ;;		_LedONStartConfig
  6278 ;;		_LedONStatusBusy
  6279 ;;		_MB_UpdateEPCParameter
  6280 ;;		_ModbusMasterSetup
  6281 ;;		_NutRunCycleStart
  6282 ;;		_SYSTEM_Initialize
  6283 ;;		_TMR3_StopTimer
  6284 ;;		_TMR3_WriteTimer
  6285 ;;		_TMR5_StopTimer
  6286 ;;		_TMR5_WriteTimer
  6287 ;;		_delayMsec
  6288 ;;		_getEncoderState
  6289 ;; This function is called by:
  6290 ;;		Startup code after reset
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           
  6295                           ;psect for function _main
  6296  06FA                     _main:	
  6297                           
  6298                           ;main.c: 111: SYSTEM_Initialize();
  6299                           
  6300                           ;incstack = 0
  6301                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6302  06FA  318F  2771  3186   	fcall	_SYSTEM_Initialize
  6303                           
  6304                           ;main.c: 118: TMR3_WriteTimer(0);
  6305  06FD  3000               	movlw	0
  6306  06FE  0020               	movlb	0	; select bank0
  6307  06FF  00C8               	movwf	TMR3_WriteTimer@timerVal
  6308  0700  00C9               	movwf	TMR3_WriteTimer@timerVal+1
  6309  0701  318E  2689  3186   	fcall	_TMR3_WriteTimer
  6310                           
  6311                           ;main.c: 119: TMR3_StopTimer();
  6312  0704  318C  24D5  3186   	fcall	_TMR3_StopTimer
  6313                           
  6314                           ;main.c: 120: TMR5_WriteTimer(0);
  6315  0707  3000               	movlw	0
  6316  0708  0020               	movlb	0	; select bank0
  6317  0709  00C8               	movwf	TMR5_WriteTimer@timerVal
  6318  070A  00C9               	movwf	TMR5_WriteTimer@timerVal+1
  6319  070B  318E  26A0  3186   	fcall	_TMR5_WriteTimer
  6320                           
  6321                           ;main.c: 121: TMR5_StopTimer();
  6322  070E  318C  24D8  3186   	fcall	_TMR5_StopTimer
  6323                           
  6324                           ;main.c: 123: ModbusMasterSetup();
  6325  0711  318E  26E7  3186   	fcall	_ModbusMasterSetup
  6326                           
  6327                           ;main.c: 124: EncPulseOpState=0;
  6328  0714  0020               	movlb	0	; select bank0
  6329  0715  01B8               	clrf	_EncPulseOpState
  6330  0716  01B9               	clrf	_EncPulseOpState+1
  6331                           
  6332                           ;main.c: 126: INLVLC = 0xFF;
  6333  0717  30FF               	movlw	255
  6334  0718  0027               	movlb	7	; select bank7
  6335  0719  008E               	movwf	14	;volatile
  6336                           
  6337                           ;main.c: 127: INLVLA = 0xFF;
  6338  071A  30FF               	movlw	255
  6339  071B  008C               	movwf	12	;volatile
  6340                           
  6341                           ;main.c: 129: getEncoderState();
  6342  071C  318D  257E  3186   	fcall	_getEncoderState
  6343                           
  6344                           ;main.c: 130: OldEncPulseOpState=EncPulseOpState;
  6345  071F  0020               	movlb	0	; select bank0
  6346  0720  0839               	movf	_EncPulseOpState+1,w
  6347  0721  00BB               	movwf	_OldEncPulseOpState+1
  6348  0722  0838               	movf	_EncPulseOpState,w
  6349  0723  00BA               	movwf	_OldEncPulseOpState
  6350                           
  6351                           ;main.c: 131: NutRunCycleStart();
  6352  0724  318E  260B  3186   	fcall	_NutRunCycleStart
  6353                           
  6354                           ;main.c: 141: (INTCONbits.GIE = 1);
  6355  0727  178B               	bsf	11,7	;volatile
  6356                           
  6357                           ;main.c: 144: (INTCONbits.PEIE = 1);
  6358  0728  170B               	bsf	11,6	;volatile
  6359                           
  6360                           ;main.c: 146: LedONStartConfig(0, 1, 1);
  6361  0729  0020               	movlb	0	; select bank0
  6362  072A  01D0               	clrf	LedONStartConfig@LedONDurationSec
  6363  072B  0AD0               	incf	LedONStartConfig@LedONDurationSec,f
  6364  072C  01D1               	clrf	LedONStartConfig@LedONNumBlink
  6365  072D  0AD1               	incf	LedONStartConfig@LedONNumBlink,f
  6366  072E  3000               	movlw	0
  6367  072F  3186  2631  3186   	fcall	_LedONStartConfig
  6368  0732                     l6109:	
  6369                           ;main.c: 147: while(LedONStatusBusy());
  6370                           
  6371  0732  318C  24C0  3186   	fcall	_LedONStatusBusy
  6372  0735  3A00               	xorlw	0
  6373  0736  1D03               	skipz
  6374  0737  2F32               	goto	l6109
  6375                           
  6376                           ;main.c: 153: do { LATBbits.LATB6 = 1; } while(0);
  6377  0738  0022               	movlb	2	; select bank2
  6378  0739  170D               	bsf	13,6	;volatile
  6379                           
  6380                           ;main.c: 159: MB_UpdateEPCParameter();
  6381  073A  318F  2792  3186   	fcall	_MB_UpdateEPCParameter
  6382  073D                     l627:	
  6383                           ;main.c: 161: while (1)
  6384                           
  6385                           
  6386                           ;main.c: 162: {
  6387                           ;main.c: 174: MB_UpdateEPCParameter();
  6388  073D  318F  2792  3186   	fcall	_MB_UpdateEPCParameter
  6389                           
  6390                           ;main.c: 175: delayMsec(2000);
  6391  0740  3000               	movlw	0
  6392  0741  0020               	movlb	0	; select bank0
  6393  0742  00CB               	movwf	delayMsec@timems+3
  6394  0743  3000               	movlw	0
  6395  0744  00CA               	movwf	delayMsec@timems+2
  6396  0745  3007               	movlw	7
  6397  0746  00C9               	movwf	delayMsec@timems+1
  6398  0747  30D0               	movlw	208
  6399  0748  00C8               	movwf	delayMsec@timems
  6400  0749  3187  27DE  3186   	fcall	_delayMsec
  6401  074C  2F3D               	goto	l627
  6402  074D                     __end_of_main:	
  6403                           
  6404                           	psect	text1
  6405  0D7E                     __ptext1:	
  6406 ;; *************** function _getEncoderState *****************
  6407 ;; Defined at:
  6408 ;;		line 548 in file "main.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6422 ;;      Params:         0       0       0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    5
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;;		_OnEncPulseEdgeEvent
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _getEncoderState
  6439  0D7E                     _getEncoderState:	
  6440                           
  6441                           ;main.c: 550: if(PORTCbits.RC5)
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in _getEncoderState: [wreg+status,2]
  6445  0D7E  0020               	movlb	0	; select bank0
  6446  0D7F  1E8E               	btfss	14,5	;volatile
  6447  0D80  2D86               	goto	l3749
  6448                           
  6449                           ;main.c: 551: {
  6450                           ;main.c: 553: EncPulseOpState= 1;
  6451  0D81  3001               	movlw	1
  6452  0D82  00B8               	movwf	_EncPulseOpState
  6453  0D83  3000               	movlw	0
  6454  0D84  00B9               	movwf	_EncPulseOpState+1
  6455                           
  6456                           ;main.c: 556: }
  6457  0D85  0008               	return
  6458  0D86                     l3749:	
  6459                           
  6460                           ;main.c: 557: else
  6461                           ;main.c: 558: {
  6462                           ;main.c: 560: EncPulseOpState= 0;
  6463  0D86  01B8               	clrf	_EncPulseOpState
  6464  0D87  01B9               	clrf	_EncPulseOpState+1
  6465  0D88  0008               	return
  6466  0D89                     __end_of_getEncoderState:	
  6467                           
  6468                           	psect	text2
  6469  07DE                     __ptext2:	
  6470 ;; *************** function _delayMsec *****************
  6471 ;; Defined at:
  6472 ;;		line 673 in file "main.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  timems          4    0[BANK0 ] unsigned long 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      void 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6486 ;;      Params:         0       4       0       0       0       0       0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0
  6488 ;;      Temps:          0       4       0       0       0       0       0       0
  6489 ;;      Totals:         0       8       0       0       0       0       0       0
  6490 ;;Total ram usage:        8 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    5
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           
  6501                           ;psect for function _delayMsec
  6502  07DE                     _delayMsec:	
  6503                           
  6504                           ;main.c: 675: delayCount=0;
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in _delayMsec: [wreg+status,2]
  6508  07DE  0021               	movlb	1	; select bank1
  6509  07DF  01B6               	clrf	_delayCount^(0+128)
  6510  07E0  01B7               	clrf	(_delayCount+1)^(0+128)
  6511                           
  6512                           ;main.c: 676: delayFlag=1;
  6513  07E1  0020               	movlb	0	; select bank0
  6514  07E2  01C1               	clrf	_delayFlag
  6515  07E3  0AC1               	incf	_delayFlag,f
  6516  07E4                     l3801:	
  6517                           ;main.c: 677: while(delayCount < timems);
  6518                           
  6519  07E4  0021               	movlb	1	; select bank1
  6520  07E5  0836               	movf	_delayCount^(0+128),w
  6521  07E6  0020               	movlb	0	; select bank0
  6522  07E7  00CC               	movwf	??_delayMsec
  6523  07E8  0021               	movlb	1	; select bank1
  6524  07E9  0837               	movf	(_delayCount+1)^(0+128),w
  6525  07EA  0020               	movlb	0	; select bank0
  6526  07EB  00CD               	movwf	??_delayMsec+1
  6527  07EC  01CE               	clrf	??_delayMsec+2
  6528  07ED  01CF               	clrf	??_delayMsec+3
  6529  07EE  084B               	movf	delayMsec@timems+3,w
  6530  07EF  024F               	subwf	??_delayMsec+3,w
  6531  07F0  1D03               	skipz
  6532  07F1  2FFC               	goto	u2195
  6533  07F2  084A               	movf	delayMsec@timems+2,w
  6534  07F3  024E               	subwf	??_delayMsec+2,w
  6535  07F4  1D03               	skipz
  6536  07F5  2FFC               	goto	u2195
  6537  07F6  0849               	movf	delayMsec@timems+1,w
  6538  07F7  024D               	subwf	??_delayMsec+1,w
  6539  07F8  1D03               	skipz
  6540  07F9  2FFC               	goto	u2195
  6541  07FA  0848               	movf	delayMsec@timems,w
  6542  07FB  024C               	subwf	??_delayMsec,w
  6543  07FC                     u2195:	
  6544  07FC  1C03               	skipc
  6545  07FD  2FE4               	goto	l3801
  6546                           
  6547                           ;main.c: 678: delayFlag=0;
  6548  07FE  01C1               	clrf	_delayFlag
  6549  07FF  0008               	return
  6550  0800                     __end_of_delayMsec:	
  6551                           
  6552                           	psect	text3
  6553  0EA0                     __ptext3:	
  6554 ;; *************** function _TMR5_WriteTimer *****************
  6555 ;; Defined at:
  6556 ;;		line 117 in file "mcc_generated_files/tmr5.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  timerVal        2    0[BANK0 ] unsigned int 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6570 ;;      Params:         0       2       0       0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0
  6573 ;;      Totals:         0       2       0       0       0       0       0       0
  6574 ;;Total ram usage:        2 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    5
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_main
  6581 ;;		_NutRunCycleStop
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function _TMR5_WriteTimer
  6587  0EA0                     _TMR5_WriteTimer:	
  6588                           
  6589                           ;tmr5.c: 119: if (T5CONbits.T5SYNC == 1)
  6590                           
  6591                           ;incstack = 0
  6592                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
  6593  0EA0  0028               	movlb	8	; select bank8
  6594  0EA1  1D1A               	btfss	26,2	;volatile
  6595  0EA2  2EAE               	goto	l3693
  6596                           
  6597                           ;tmr5.c: 120: {
  6598                           ;tmr5.c: 122: T5CONbits.TMR5ON = 0;
  6599  0EA3  101A               	bcf	26,0	;volatile
  6600                           
  6601                           ;tmr5.c: 125: TMR5H = (timerVal >> 8);
  6602  0EA4  0020               	movlb	0	; select bank0
  6603  0EA5  0849               	movf	TMR5_WriteTimer@timerVal+1,w
  6604  0EA6  0028               	movlb	8	; select bank8
  6605  0EA7  0099               	movwf	25	;volatile
  6606                           
  6607                           ;tmr5.c: 126: TMR5L = timerVal;
  6608  0EA8  0020               	movlb	0	; select bank0
  6609  0EA9  0848               	movf	TMR5_WriteTimer@timerVal,w
  6610  0EAA  0028               	movlb	8	; select bank8
  6611  0EAB  0098               	movwf	24	;volatile
  6612                           
  6613                           ;tmr5.c: 129: T5CONbits.TMR5ON =1;
  6614  0EAC  141A               	bsf	26,0	;volatile
  6615                           
  6616                           ;tmr5.c: 130: }
  6617  0EAD  0008               	return
  6618  0EAE                     l3693:	
  6619                           
  6620                           ;tmr5.c: 131: else
  6621                           ;tmr5.c: 132: {
  6622                           ;tmr5.c: 134: TMR5H = (timerVal >> 8);
  6623  0EAE  0020               	movlb	0	; select bank0
  6624  0EAF  0849               	movf	TMR5_WriteTimer@timerVal+1,w
  6625  0EB0  0028               	movlb	8	; select bank8
  6626  0EB1  0099               	movwf	25	;volatile
  6627                           
  6628                           ;tmr5.c: 135: TMR5L = timerVal;
  6629  0EB2  0020               	movlb	0	; select bank0
  6630  0EB3  0848               	movf	TMR5_WriteTimer@timerVal,w
  6631  0EB4  0028               	movlb	8	; select bank8
  6632  0EB5  0098               	movwf	24	;volatile
  6633  0EB6  0008               	return
  6634  0EB7                     __end_of_TMR5_WriteTimer:	
  6635                           
  6636                           	psect	text4
  6637  0CD8                     __ptext4:	
  6638 ;; *************** function _TMR5_StopTimer *****************
  6639 ;; Defined at:
  6640 ;;		line 102 in file "mcc_generated_files/tmr5.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		None
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6654 ;;      Params:         0       0       0       0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    5
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_main
  6665 ;;		_NutRunCycleStop
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _TMR5_StopTimer
  6671  0CD8                     _TMR5_StopTimer:	
  6672                           
  6673                           ;tmr5.c: 105: T5CONbits.TMR5ON = 0;
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _TMR5_StopTimer: []
  6677  0CD8  0028               	movlb	8	; select bank8
  6678  0CD9  101A               	bcf	26,0	;volatile
  6679  0CDA  0008               	return
  6680  0CDB                     __end_of_TMR5_StopTimer:	
  6681                           
  6682                           	psect	text5
  6683  0CD5                     __ptext5:	
  6684 ;; *************** function _TMR3_StopTimer *****************
  6685 ;; Defined at:
  6686 ;;		line 102 in file "mcc_generated_files/tmr3.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		None
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6700 ;;      Params:         0       0       0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    5
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_main
  6711 ;;		_NutRunCycleStop
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _TMR3_StopTimer
  6717  0CD5                     _TMR3_StopTimer:	
  6718                           
  6719                           ;tmr3.c: 105: T3CONbits.TMR3ON = 0;
  6720                           
  6721                           ;incstack = 0
  6722                           ; Regs used in _TMR3_StopTimer: []
  6723  0CD5  0028               	movlb	8	; select bank8
  6724  0CD6  1013               	bcf	19,0	;volatile
  6725  0CD7  0008               	return
  6726  0CD8                     __end_of_TMR3_StopTimer:	
  6727                           
  6728                           	psect	text6
  6729  0F71                     __ptext6:	
  6730 ;; *************** function _SYSTEM_Initialize *****************
  6731 ;; Defined at:
  6732 ;;		line 76 in file "mcc_generated_files/mcc.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;		None
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0, pclath, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6746 ;;      Params:         0       0       0       0       0       0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0
  6749 ;;      Totals:         0       0       0       0       0       0       0       0
  6750 ;;Total ram usage:        0 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    7
  6753 ;; This function calls:
  6754 ;;		_ADC_Initialize
  6755 ;;		_CCP1_Initialize
  6756 ;;		_CCP2_Initialize
  6757 ;;		_EUSART_Initialize
  6758 ;;		_EXT_INT_Initialize
  6759 ;;		_OSCILLATOR_Initialize
  6760 ;;		_PIN_MANAGER_Initialize
  6761 ;;		_TMR0_Initialize
  6762 ;;		_TMR3_Initialize
  6763 ;;		_TMR5_Initialize
  6764 ;;		_WDT_Initialize
  6765 ;; This function is called by:
  6766 ;;		_main
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           
  6771                           ;psect for function _SYSTEM_Initialize
  6772  0F71                     _SYSTEM_Initialize:	
  6773                           
  6774                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6778  0F71  3186  2699  318F   	fcall	_PIN_MANAGER_Initialize
  6779                           
  6780                           ;mcc.c: 80: OSCILLATOR_Initialize();
  6781  0F74  318D  2509  318F   	fcall	_OSCILLATOR_Initialize
  6782                           
  6783                           ;mcc.c: 81: WDT_Initialize();
  6784  0F77  318C  24DB  318F   	fcall	_WDT_Initialize
  6785                           
  6786                           ;mcc.c: 82: CCP2_Initialize();
  6787  0F7A  318D  252B  318F   	fcall	_CCP2_Initialize
  6788                           
  6789                           ;mcc.c: 83: ADC_Initialize();
  6790  0F7D  318D  2522  318F   	fcall	_ADC_Initialize
  6791                           
  6792                           ;mcc.c: 84: TMR3_Initialize();
  6793  0F80  318F  2700  318F   	fcall	_TMR3_Initialize
  6794                           
  6795                           ;mcc.c: 85: CCP1_Initialize();
  6796  0F83  318E  261A  318F   	fcall	_CCP1_Initialize
  6797                           
  6798                           ;mcc.c: 86: TMR5_Initialize();
  6799  0F86  318F  271B  318F   	fcall	_TMR5_Initialize
  6800                           
  6801                           ;mcc.c: 87: EXT_INT_Initialize();
  6802  0F89  318D  25A1  318F   	fcall	_EXT_INT_Initialize
  6803                           
  6804                           ;mcc.c: 88: TMR0_Initialize();
  6805  0F8C  318E  2674  318F   	fcall	_TMR0_Initialize
  6806                           
  6807                           ;mcc.c: 89: EUSART_Initialize();
  6808  0F8F  318D  2595         	fcall	_EUSART_Initialize
  6809  0F91  0008               	return
  6810  0F92                     __end_of_SYSTEM_Initialize:	
  6811                           
  6812                           	psect	text7
  6813  0CDB                     __ptext7:	
  6814 ;; *************** function _WDT_Initialize *****************
  6815 ;; Defined at:
  6816 ;;		line 108 in file "mcc_generated_files/mcc.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6830 ;;      Params:         0       0       0       0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0
  6833 ;;      Totals:         0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:        0 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    5
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_SYSTEM_Initialize
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function _WDT_Initialize
  6846  0CDB                     _WDT_Initialize:	
  6847                           
  6848                           ;mcc.c: 111: WDTCON = 0x16;
  6849                           
  6850                           ;incstack = 0
  6851                           ; Regs used in _WDT_Initialize: [wreg]
  6852  0CDB  3016               	movlw	22
  6853  0CDC  0021               	movlb	1	; select bank1
  6854  0CDD  0097               	movwf	23	;volatile
  6855  0CDE  0008               	return
  6856  0CDF                     __end_of_WDT_Initialize:	
  6857                           
  6858                           	psect	text8
  6859  0F1B                     __ptext8:	
  6860 ;; *************** function _TMR5_Initialize *****************
  6861 ;; Defined at:
  6862 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, pclath, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6876 ;;      Params:         0       0       0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    6
  6883 ;; This function calls:
  6884 ;;		_TMR5_SetInterruptHandler
  6885 ;;		_TMR5_StartTimer
  6886 ;; This function is called by:
  6887 ;;		_SYSTEM_Initialize
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           
  6892                           ;psect for function _TMR5_Initialize
  6893  0F1B                     _TMR5_Initialize:	
  6894                           
  6895                           ;tmr5.c: 69: T5CON = 0x30;
  6896                           
  6897                           ;incstack = 0
  6898                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6899  0F1B  3030               	movlw	48
  6900  0F1C  0028               	movlb	8	; select bank8
  6901  0F1D  009A               	movwf	26	;volatile
  6902                           
  6903                           ;tmr5.c: 72: T5GCON = 0x00;
  6904  0F1E  019B               	clrf	27	;volatile
  6905                           
  6906                           ;tmr5.c: 75: TMR5H = 0x00;
  6907  0F1F  0199               	clrf	25	;volatile
  6908                           
  6909                           ;tmr5.c: 78: TMR5L = 0x00;
  6910  0F20  0198               	clrf	24	;volatile
  6911                           
  6912                           ;tmr5.c: 81: timer5ReloadVal=(TMR5H << 8) | TMR5L;
  6913  0F21  0819               	movf	25,w	;volatile
  6914  0F22  0020               	movlb	0	; select bank0
  6915  0F23  00EE               	movwf	_timer5ReloadVal+1	;volatile
  6916  0F24  0028               	movlb	8	; select bank8
  6917  0F25  0818               	movf	24,w	;volatile
  6918  0F26  0020               	movlb	0	; select bank0
  6919  0F27  00ED               	movwf	_timer5ReloadVal	;volatile
  6920                           
  6921                           ;tmr5.c: 84: PIR4bits.TMR5IF = 0;
  6922  0F28  1214               	bcf	20,4	;volatile
  6923                           
  6924                           ;tmr5.c: 87: PIE4bits.TMR5IE = 1;
  6925  0F29  0021               	movlb	1	; select bank1
  6926  0F2A  1614               	bsf	20,4	;volatile
  6927                           
  6928                           ;tmr5.c: 90: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  6929  0F2B  30BD               	movlw	low _TMR5_DefaultInterruptHandler
  6930  0F2C  0020               	movlb	0	; select bank0
  6931  0F2D  00C8               	movwf	TMR5_SetInterruptHandler@InterruptHandler
  6932  0F2E  300C               	movlw	high _TMR5_DefaultInterruptHandler
  6933  0F2F  00C9               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
  6934  0F30  318D  2561  318F   	fcall	_TMR5_SetInterruptHandler
  6935                           
  6936                           ;tmr5.c: 93: TMR5_StartTimer();
  6937  0F33  318C  24D2         	fcall	_TMR5_StartTimer
  6938  0F35  0008               	return
  6939  0F36                     __end_of_TMR5_Initialize:	
  6940                           
  6941                           	psect	text9
  6942  0CD2                     __ptext9:	
  6943 ;; *************** function _TMR5_StartTimer *****************
  6944 ;; Defined at:
  6945 ;;		line 96 in file "mcc_generated_files/tmr5.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1    wreg      void 
  6952 ;; Registers used:
  6953 ;;		None
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6959 ;;      Params:         0       0       0       0       0       0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0
  6962 ;;      Totals:         0       0       0       0       0       0       0       0
  6963 ;;Total ram usage:        0 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    5
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_TMR5_Initialize
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _TMR5_StartTimer
  6975  0CD2                     _TMR5_StartTimer:	
  6976                           
  6977                           ;tmr5.c: 99: T5CONbits.TMR5ON = 1;
  6978                           
  6979                           ;incstack = 0
  6980                           ; Regs used in _TMR5_StartTimer: []
  6981  0CD2  0028               	movlb	8	; select bank8
  6982  0CD3  141A               	bsf	26,0	;volatile
  6983  0CD4  0008               	return
  6984  0CD5                     __end_of_TMR5_StartTimer:	
  6985                           
  6986                           	psect	text10
  6987  0D61                     __ptext10:	
  6988 ;; *************** function _TMR5_SetInterruptHandler *****************
  6989 ;; Defined at:
  6990 ;;		line 172 in file "mcc_generated_files/tmr5.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  6993 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7005 ;;      Params:         0       2       0       0       0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0
  7008 ;;      Totals:         0       2       0       0       0       0       0       0
  7009 ;;Total ram usage:        2 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    5
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_TMR5_Initialize
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           
  7020                           ;psect for function _TMR5_SetInterruptHandler
  7021  0D61                     _TMR5_SetInterruptHandler:	
  7022                           
  7023                           ;tmr5.c: 173: TMR5_InterruptHandler = InterruptHandler;
  7024                           
  7025                           ;incstack = 0
  7026                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
  7027  0D61  0020               	movlb	0	; select bank0
  7028  0D62  0849               	movf	TMR5_SetInterruptHandler@InterruptHandler+1,w
  7029  0D63  0021               	movlb	1	; select bank1
  7030  0D64  00CB               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
  7031  0D65  0020               	movlb	0	; select bank0
  7032  0D66  0848               	movf	TMR5_SetInterruptHandler@InterruptHandler,w
  7033  0D67  0021               	movlb	1	; select bank1
  7034  0D68  00CA               	movwf	_TMR5_InterruptHandler^(0+128)
  7035  0D69  0008               	return
  7036  0D6A                     __end_of_TMR5_SetInterruptHandler:	
  7037                           
  7038                           	psect	text11
  7039  0F00                     __ptext11:	
  7040 ;; *************** function _TMR3_Initialize *****************
  7041 ;; Defined at:
  7042 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0, pclath, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7056 ;;      Params:         0       0       0       0       0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0
  7059 ;;      Totals:         0       0       0       0       0       0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    6
  7063 ;; This function calls:
  7064 ;;		_TMR3_SetInterruptHandler
  7065 ;;		_TMR3_StartTimer
  7066 ;; This function is called by:
  7067 ;;		_SYSTEM_Initialize
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           
  7072                           ;psect for function _TMR3_Initialize
  7073  0F00                     _TMR3_Initialize:	
  7074                           
  7075                           ;tmr3.c: 69: T3CON = 0x30;
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7079  0F00  3030               	movlw	48
  7080  0F01  0028               	movlb	8	; select bank8
  7081  0F02  0093               	movwf	19	;volatile
  7082                           
  7083                           ;tmr3.c: 72: T3GCON = 0x00;
  7084  0F03  0194               	clrf	20	;volatile
  7085                           
  7086                           ;tmr3.c: 75: TMR3H = 0x00;
  7087  0F04  0192               	clrf	18	;volatile
  7088                           
  7089                           ;tmr3.c: 78: TMR3L = 0x00;
  7090  0F05  0191               	clrf	17	;volatile
  7091                           
  7092                           ;tmr3.c: 81: timer3ReloadVal=(TMR3H << 8) | TMR3L;
  7093  0F06  0812               	movf	18,w	;volatile
  7094  0F07  0020               	movlb	0	; select bank0
  7095  0F08  00EC               	movwf	_timer3ReloadVal+1	;volatile
  7096  0F09  0028               	movlb	8	; select bank8
  7097  0F0A  0811               	movf	17,w	;volatile
  7098  0F0B  0020               	movlb	0	; select bank0
  7099  0F0C  00EB               	movwf	_timer3ReloadVal	;volatile
  7100                           
  7101                           ;tmr3.c: 84: PIR3bits.TMR3IF = 0;
  7102  0F0D  1213               	bcf	19,4	;volatile
  7103                           
  7104                           ;tmr3.c: 87: PIE3bits.TMR3IE = 1;
  7105  0F0E  0021               	movlb	1	; select bank1
  7106  0F0F  1613               	bsf	19,4	;volatile
  7107                           
  7108                           ;tmr3.c: 90: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  7109  0F10  30BA               	movlw	low _TMR3_DefaultInterruptHandler
  7110  0F11  0020               	movlb	0	; select bank0
  7111  0F12  00C8               	movwf	TMR3_SetInterruptHandler@InterruptHandler
  7112  0F13  300C               	movlw	high _TMR3_DefaultInterruptHandler
  7113  0F14  00C9               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1
  7114  0F15  318D  2558  318F   	fcall	_TMR3_SetInterruptHandler
  7115                           
  7116                           ;tmr3.c: 93: TMR3_StartTimer();
  7117  0F18  318C  24CC         	fcall	_TMR3_StartTimer
  7118  0F1A  0008               	return
  7119  0F1B                     __end_of_TMR3_Initialize:	
  7120                           
  7121                           	psect	text12
  7122  0D58                     __ptext12:	
  7123 ;; *************** function _TMR3_SetInterruptHandler *****************
  7124 ;; Defined at:
  7125 ;;		line 172 in file "mcc_generated_files/tmr3.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  7128 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7140 ;;      Params:         0       2       0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0
  7143 ;;      Totals:         0       2       0       0       0       0       0       0
  7144 ;;Total ram usage:        2 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    5
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_TMR3_Initialize
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function _TMR3_SetInterruptHandler
  7156  0D58                     _TMR3_SetInterruptHandler:	
  7157                           
  7158                           ;tmr3.c: 173: TMR3_InterruptHandler = InterruptHandler;
  7159                           
  7160                           ;incstack = 0
  7161                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  7162  0D58  0020               	movlb	0	; select bank0
  7163  0D59  0849               	movf	TMR3_SetInterruptHandler@InterruptHandler+1,w
  7164  0D5A  0021               	movlb	1	; select bank1
  7165  0D5B  00C9               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
  7166  0D5C  0020               	movlb	0	; select bank0
  7167  0D5D  0848               	movf	TMR3_SetInterruptHandler@InterruptHandler,w
  7168  0D5E  0021               	movlb	1	; select bank1
  7169  0D5F  00C8               	movwf	_TMR3_InterruptHandler^(0+128)
  7170  0D60  0008               	return
  7171  0D61                     __end_of_TMR3_SetInterruptHandler:	
  7172                           
  7173                           	psect	text13
  7174  0E74                     __ptext13:	
  7175 ;; *************** function _TMR0_Initialize *****************
  7176 ;; Defined at:
  7177 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;		None
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;		None
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  1    wreg      void 
  7184 ;; Registers used:
  7185 ;;		wreg, status,2, status,0, pclath, cstack
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 0/0
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7191 ;;      Params:         0       0       0       0       0       0       0       0
  7192 ;;      Locals:         0       0       0       0       0       0       0       0
  7193 ;;      Temps:          0       0       0       0       0       0       0       0
  7194 ;;      Totals:         0       0       0       0       0       0       0       0
  7195 ;;Total ram usage:        0 bytes
  7196 ;; Hardware stack levels used:    1
  7197 ;; Hardware stack levels required when called:    6
  7198 ;; This function calls:
  7199 ;;		_TMR0_SetInterruptHandler
  7200 ;;		_TMR0_StartTimer
  7201 ;; This function is called by:
  7202 ;;		_SYSTEM_Initialize
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function _TMR0_Initialize
  7208  0E74                     _TMR0_Initialize:	
  7209                           
  7210                           ;tmr0.c: 65: T0CON0 = 0x00;
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7214  0E74  0020               	movlb	0	; select bank0
  7215  0E75  0197               	clrf	23	;volatile
  7216                           
  7217                           ;tmr0.c: 68: T0CON1 = 0x49;
  7218  0E76  3049               	movlw	73
  7219  0E77  0098               	movwf	24	;volatile
  7220                           
  7221                           ;tmr0.c: 71: TMR0H = 0x9B;
  7222  0E78  309B               	movlw	155
  7223  0E79  0096               	movwf	22	;volatile
  7224                           
  7225                           ;tmr0.c: 74: TMR0L = 0x00;
  7226  0E7A  0195               	clrf	21	;volatile
  7227                           
  7228                           ;tmr0.c: 77: PIR0bits.TMR0IF = 0;
  7229  0E7B  1290               	bcf	16,5	;volatile
  7230                           
  7231                           ;tmr0.c: 80: PIE0bits.TMR0IE = 1;
  7232  0E7C  0021               	movlb	1	; select bank1
  7233  0E7D  1690               	bsf	16,5	;volatile
  7234                           
  7235                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  7236  0E7E  30B9               	movlw	low _TMR0_DefaultInterruptHandler
  7237  0E7F  0020               	movlb	0	; select bank0
  7238  0E80  00C8               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7239  0E81  300C               	movlw	high _TMR0_DefaultInterruptHandler
  7240  0E82  00C9               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7241  0E83  318D  254F  318E   	fcall	_TMR0_SetInterruptHandler
  7242                           
  7243                           ;tmr0.c: 86: TMR0_StartTimer();
  7244  0E86  318C  24CF         	fcall	_TMR0_StartTimer
  7245  0E88  0008               	return
  7246  0E89                     __end_of_TMR0_Initialize:	
  7247                           
  7248                           	psect	text14
  7249  0CCF                     __ptext14:	
  7250 ;; *************** function _TMR0_StartTimer *****************
  7251 ;; Defined at:
  7252 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;		None
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		None
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7266 ;;      Params:         0       0       0       0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0       0
  7269 ;;      Totals:         0       0       0       0       0       0       0       0
  7270 ;;Total ram usage:        0 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    5
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_TMR0_Initialize
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           
  7281                           ;psect for function _TMR0_StartTimer
  7282  0CCF                     _TMR0_StartTimer:	
  7283                           
  7284                           ;tmr0.c: 92: T0CON0bits.T0EN = 1;
  7285                           
  7286                           ;incstack = 0
  7287                           ; Regs used in _TMR0_StartTimer: []
  7288  0CCF  0020               	movlb	0	; select bank0
  7289  0CD0  1797               	bsf	23,7	;volatile
  7290  0CD1  0008               	return
  7291  0CD2                     __end_of_TMR0_StartTimer:	
  7292                           
  7293                           	psect	text15
  7294  0D4F                     __ptext15:	
  7295 ;; *************** function _TMR0_SetInterruptHandler *****************
  7296 ;; Defined at:
  7297 ;;		line 145 in file "mcc_generated_files/tmr0.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  7300 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7312 ;;      Params:         0       2       0       0       0       0       0       0
  7313 ;;      Locals:         0       0       0       0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0
  7315 ;;      Totals:         0       2       0       0       0       0       0       0
  7316 ;;Total ram usage:        2 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    5
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_TMR0_Initialize
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _TMR0_SetInterruptHandler
  7328  0D4F                     _TMR0_SetInterruptHandler:	
  7329                           
  7330                           ;tmr0.c: 146: TMR0_InterruptHandler = InterruptHandler;
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7334  0D4F  0020               	movlb	0	; select bank0
  7335  0D50  0849               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7336  0D51  0021               	movlb	1	; select bank1
  7337  0D52  00C7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7338  0D53  0020               	movlb	0	; select bank0
  7339  0D54  0848               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7340  0D55  0021               	movlb	1	; select bank1
  7341  0D56  00C6               	movwf	_TMR0_InterruptHandler^(0+128)
  7342  0D57  0008               	return
  7343  0D58                     __end_of_TMR0_SetInterruptHandler:	
  7344                           
  7345                           	psect	text16
  7346  0699                     __ptext16:	
  7347 ;; *************** function _PIN_MANAGER_Initialize *****************
  7348 ;; Defined at:
  7349 ;;		line 54 in file "mcc_generated_files/pin_manager.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  state           1    2[BANK0 ] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0, pclath, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7363 ;;      Params:         0       0       0       0       0       0       0       0
  7364 ;;      Locals:         0       1       0       0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0
  7366 ;;      Totals:         0       1       0       0       0       0       0       0
  7367 ;;Total ram usage:        1 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    6
  7370 ;; This function calls:
  7371 ;;		_IOCCF4_SetInterruptHandler
  7372 ;;		_IOCCF5_SetInterruptHandler
  7373 ;; This function is called by:
  7374 ;;		_SYSTEM_Initialize
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _PIN_MANAGER_Initialize
  7380  0699                     _PIN_MANAGER_Initialize:	
  7381                           
  7382                           ;pin_manager.c: 59: LATA = 0x00;
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7386  0699  0022               	movlb	2	; select bank2
  7387  069A  018C               	clrf	12	;volatile
  7388                           
  7389                           ;pin_manager.c: 60: LATB = 0x00;
  7390  069B  018D               	clrf	13	;volatile
  7391                           
  7392                           ;pin_manager.c: 61: LATC = 0x00;
  7393  069C  018E               	clrf	14	;volatile
  7394                           
  7395                           ;pin_manager.c: 66: TRISA = 0x37;
  7396  069D  3037               	movlw	55
  7397  069E  0021               	movlb	1	; select bank1
  7398  069F  008C               	movwf	12	;volatile
  7399                           
  7400                           ;pin_manager.c: 67: TRISB = 0x90;
  7401  06A0  3090               	movlw	144
  7402  06A1  008D               	movwf	13	;volatile
  7403                           
  7404                           ;pin_manager.c: 68: TRISC = 0x30;
  7405  06A2  3030               	movlw	48
  7406  06A3  008E               	movwf	14	;volatile
  7407                           
  7408                           ;pin_manager.c: 73: ANSELC = 0x80;
  7409  06A4  3080               	movlw	128
  7410  06A5  0023               	movlb	3	; select bank3
  7411  06A6  008E               	movwf	14	;volatile
  7412                           
  7413                           ;pin_manager.c: 74: ANSELB = 0x00;
  7414  06A7  018D               	clrf	13	;volatile
  7415                           
  7416                           ;pin_manager.c: 75: ANSELA = 0x17;
  7417  06A8  3017               	movlw	23
  7418  06A9  008C               	movwf	12	;volatile
  7419                           
  7420                           ;pin_manager.c: 80: WPUB = 0x80;
  7421  06AA  3080               	movlw	128
  7422  06AB  0024               	movlb	4	; select bank4
  7423  06AC  008D               	movwf	13	;volatile
  7424                           
  7425                           ;pin_manager.c: 81: WPUA = 0x00;
  7426  06AD  018C               	clrf	12	;volatile
  7427                           
  7428                           ;pin_manager.c: 82: WPUC = 0x00;
  7429  06AE  018E               	clrf	14	;volatile
  7430                           
  7431                           ;pin_manager.c: 87: ODCONA = 0x00;
  7432  06AF  0025               	movlb	5	; select bank5
  7433  06B0  018C               	clrf	12	;volatile
  7434                           
  7435                           ;pin_manager.c: 88: ODCONB = 0x00;
  7436  06B1  018D               	clrf	13	;volatile
  7437                           
  7438                           ;pin_manager.c: 89: ODCONC = 0x00;
  7439  06B2  018E               	clrf	14	;volatile
  7440                           
  7441                           ;pin_manager.c: 96: IOCCFbits.IOCCF4 = 0;
  7442  06B3  0027               	movlb	7	; select bank7
  7443  06B4  1219               	bcf	25,4	;volatile
  7444                           
  7445                           ;pin_manager.c: 97: IOCCFbits.IOCCF5 = 0;
  7446  06B5  1299               	bcf	25,5	;volatile
  7447                           
  7448                           ;pin_manager.c: 99: IOCCNbits.IOCCN4 = 1;
  7449  06B6  1618               	bsf	24,4	;volatile
  7450                           
  7451                           ;pin_manager.c: 100: IOCCNbits.IOCCN5 = 1;
  7452  06B7  1698               	bsf	24,5	;volatile
  7453                           
  7454                           ;pin_manager.c: 102: IOCCPbits.IOCCP4 = 1;
  7455  06B8  1617               	bsf	23,4	;volatile
  7456                           
  7457                           ;pin_manager.c: 103: IOCCPbits.IOCCP5 = 1;
  7458  06B9  1697               	bsf	23,5	;volatile
  7459                           
  7460                           ;pin_manager.c: 106: IOCCF4_SetInterruptHandler(IOCCF4_DefaultInterruptHandler);
  7461  06BA  30B7               	movlw	low _IOCCF4_DefaultInterruptHandler
  7462  06BB  0020               	movlb	0	; select bank0
  7463  06BC  00C8               	movwf	IOCCF4_SetInterruptHandler@InterruptHandler
  7464  06BD  300C               	movlw	high _IOCCF4_DefaultInterruptHandler
  7465  06BE  00C9               	movwf	IOCCF4_SetInterruptHandler@InterruptHandler+1
  7466  06BF  318D  253D  3186   	fcall	_IOCCF4_SetInterruptHandler
  7467                           
  7468                           ;pin_manager.c: 107: IOCCF5_SetInterruptHandler(IOCCF5_DefaultInterruptHandler);
  7469  06C2  30B8               	movlw	low _IOCCF5_DefaultInterruptHandler
  7470  06C3  0020               	movlb	0	; select bank0
  7471  06C4  00C8               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler
  7472  06C5  300C               	movlw	high _IOCCF5_DefaultInterruptHandler
  7473  06C6  00C9               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler+1
  7474  06C7  318D  2546  3186   	fcall	_IOCCF5_SetInterruptHandler
  7475                           
  7476                           ;pin_manager.c: 110: PIE0bits.IOCIE = 1;
  7477  06CA  0021               	movlb	1	; select bank1
  7478  06CB  1610               	bsf	16,4	;volatile
  7479                           
  7480                           ;pin_manager.c: 113: bool state = GIE;
  7481  06CC  3000               	movlw	0
  7482  06CD  1B8B               	btfsc	11,7	;volatile
  7483  06CE  3001               	movlw	1
  7484  06CF  0020               	movlb	0	; select bank0
  7485  06D0  00CA               	movwf	PIN_MANAGER_Initialize@state
  7486                           
  7487                           ;pin_manager.c: 114: GIE = 0;
  7488  06D1  138B               	bcf	11,7	;volatile
  7489                           
  7490                           ;pin_manager.c: 115: PPSLOCK = 0x55;
  7491  06D2  3055               	movlw	85
  7492  06D3  003C               	movlb	28	; select bank28
  7493  06D4  008F               	movwf	15	;volatile
  7494                           
  7495                           ;pin_manager.c: 116: PPSLOCK = 0xAA;
  7496  06D5  30AA               	movlw	170
  7497  06D6  008F               	movwf	15	;volatile
  7498                           
  7499                           ;pin_manager.c: 117: PPSLOCKbits.PPSLOCKED = 0x00;
  7500  06D7  100F               	bcf	15,0	;volatile
  7501                           
  7502                           ;pin_manager.c: 119: CCP2PPSbits.CCP2PPS = 0x14;
  7503  06D8  0815               	movf	21,w	;volatile
  7504  06D9  39E0               	andlw	-32
  7505  06DA  3814               	iorlw	20
  7506  06DB  0095               	movwf	21	;volatile
  7507                           
  7508                           ;pin_manager.c: 120: RXPPSbits.RXPPS = 0x0C;
  7509  06DC  0824               	movf	36,w	;volatile
  7510  06DD  39E0               	andlw	-32
  7511  06DE  380C               	iorlw	12
  7512  06DF  00A4               	movwf	36	;volatile
  7513                           
  7514                           ;pin_manager.c: 121: INTPPSbits.INTPPS = 0x05;
  7515  06E0  0810               	movf	16,w	;volatile
  7516  06E1  39E0               	andlw	-32
  7517  06E2  3805               	iorlw	5
  7518  06E3  0090               	movwf	16	;volatile
  7519                           
  7520                           ;pin_manager.c: 122: CCP1PPSbits.CCP1PPS = 0x15;
  7521  06E4  0814               	movf	20,w	;volatile
  7522  06E5  39E0               	andlw	-32
  7523  06E6  3815               	iorlw	21
  7524  06E7  0094               	movwf	20	;volatile
  7525                           
  7526                           ;pin_manager.c: 123: RB5PPSbits.RB5PPS = 0x14;
  7527  06E8  003D               	movlb	29	; select bank29
  7528  06E9  081D               	movf	29,w	;volatile
  7529  06EA  39E0               	andlw	-32
  7530  06EB  3814               	iorlw	20
  7531  06EC  009D               	movwf	29	;volatile
  7532                           
  7533                           ;pin_manager.c: 125: PPSLOCK = 0x55;
  7534  06ED  3055               	movlw	85
  7535  06EE  003C               	movlb	28	; select bank28
  7536  06EF  008F               	movwf	15	;volatile
  7537                           
  7538                           ;pin_manager.c: 126: PPSLOCK = 0xAA;
  7539  06F0  30AA               	movlw	170
  7540  06F1  008F               	movwf	15	;volatile
  7541                           
  7542                           ;pin_manager.c: 127: PPSLOCKbits.PPSLOCKED = 0x01;
  7543  06F2  140F               	bsf	15,0	;volatile
  7544                           
  7545                           ;pin_manager.c: 129: GIE = state;
  7546  06F3  0020               	movlb	0	; select bank0
  7547  06F4  1C4A               	btfss	PIN_MANAGER_Initialize@state,0
  7548  06F5  2EF8               	goto	u1910
  7549  06F6  178B               	bsf	11,7	;volatile
  7550  06F7  0008               	return
  7551  06F8                     u1910:	
  7552  06F8  138B               	bcf	11,7	;volatile
  7553  06F9  0008               	return
  7554  06FA                     __end_of_PIN_MANAGER_Initialize:	
  7555                           
  7556                           	psect	text17
  7557  0D46                     __ptext17:	
  7558 ;; *************** function _IOCCF5_SetInterruptHandler *****************
  7559 ;; Defined at:
  7560 ;;		line 197 in file "mcc_generated_files/pin_manager.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  7563 ;;		 -> IOCCF5_DefaultInterruptHandler(1), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7575 ;;      Params:         0       2       0       0       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0
  7578 ;;      Totals:         0       2       0       0       0       0       0       0
  7579 ;;Total ram usage:        2 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    5
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_PIN_MANAGER_Initialize
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           
  7590                           ;psect for function _IOCCF5_SetInterruptHandler
  7591  0D46                     _IOCCF5_SetInterruptHandler:	
  7592                           
  7593                           ;pin_manager.c: 198: IOCCF5_InterruptHandler = InterruptHandler;
  7594                           
  7595                           ;incstack = 0
  7596                           ; Regs used in _IOCCF5_SetInterruptHandler: [wreg]
  7597  0D46  0020               	movlb	0	; select bank0
  7598  0D47  0849               	movf	IOCCF5_SetInterruptHandler@InterruptHandler+1,w
  7599  0D48  0021               	movlb	1	; select bank1
  7600  0D49  00C3               	movwf	(_IOCCF5_InterruptHandler+1)^(0+128)
  7601  0D4A  0020               	movlb	0	; select bank0
  7602  0D4B  0848               	movf	IOCCF5_SetInterruptHandler@InterruptHandler,w
  7603  0D4C  0021               	movlb	1	; select bank1
  7604  0D4D  00C2               	movwf	_IOCCF5_InterruptHandler^(0+128)
  7605  0D4E  0008               	return
  7606  0D4F                     __end_of_IOCCF5_SetInterruptHandler:	
  7607                           
  7608                           	psect	text18
  7609  0D3D                     __ptext18:	
  7610 ;; *************** function _IOCCF4_SetInterruptHandler *****************
  7611 ;; Defined at:
  7612 ;;		line 167 in file "mcc_generated_files/pin_manager.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  7615 ;;		 -> IOCCF4_DefaultInterruptHandler(1), 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      void 
  7620 ;; Registers used:
  7621 ;;		wreg
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7627 ;;      Params:         0       2       0       0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0
  7630 ;;      Totals:         0       2       0       0       0       0       0       0
  7631 ;;Total ram usage:        2 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    5
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_PIN_MANAGER_Initialize
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           
  7642                           ;psect for function _IOCCF4_SetInterruptHandler
  7643  0D3D                     _IOCCF4_SetInterruptHandler:	
  7644                           
  7645                           ;pin_manager.c: 168: IOCCF4_InterruptHandler = InterruptHandler;
  7646                           
  7647                           ;incstack = 0
  7648                           ; Regs used in _IOCCF4_SetInterruptHandler: [wreg]
  7649  0D3D  0020               	movlb	0	; select bank0
  7650  0D3E  0849               	movf	IOCCF4_SetInterruptHandler@InterruptHandler+1,w
  7651  0D3F  0021               	movlb	1	; select bank1
  7652  0D40  00C5               	movwf	(_IOCCF4_InterruptHandler+1)^(0+128)
  7653  0D41  0020               	movlb	0	; select bank0
  7654  0D42  0848               	movf	IOCCF4_SetInterruptHandler@InterruptHandler,w
  7655  0D43  0021               	movlb	1	; select bank1
  7656  0D44  00C4               	movwf	_IOCCF4_InterruptHandler^(0+128)
  7657  0D45  0008               	return
  7658  0D46                     __end_of_IOCCF4_SetInterruptHandler:	
  7659                           
  7660                           	psect	text19
  7661  0D09                     __ptext19:	
  7662 ;; *************** function _OSCILLATOR_Initialize *****************
  7663 ;; Defined at:
  7664 ;;		line 92 in file "mcc_generated_files/mcc.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7678 ;;      Params:         0       0       0       0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0
  7681 ;;      Totals:         0       0       0       0       0       0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    5
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_SYSTEM_Initialize
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           
  7693                           ;psect for function _OSCILLATOR_Initialize
  7694  0D09                     _OSCILLATOR_Initialize:	
  7695                           
  7696                           ;mcc.c: 95: OSCCON1 = 0x00;
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7700  0D09  0032               	movlb	18	; select bank18
  7701  0D0A  0199               	clrf	25	;volatile
  7702                           
  7703                           ;mcc.c: 97: OSCCON3 = 0x00;
  7704  0D0B  019B               	clrf	27	;volatile
  7705                           
  7706                           ;mcc.c: 99: OSCEN = 0x00;
  7707  0D0C  019D               	clrf	29	;volatile
  7708                           
  7709                           ;mcc.c: 101: OSCFRQ = 0x07;
  7710  0D0D  3007               	movlw	7
  7711  0D0E  009F               	movwf	31	;volatile
  7712                           
  7713                           ;mcc.c: 103: OSCTUNE = 0x00;
  7714  0D0F  019E               	clrf	30	;volatile
  7715  0D10  0008               	return
  7716  0D11                     __end_of_OSCILLATOR_Initialize:	
  7717                           
  7718                           	psect	text20
  7719  0DA1                     __ptext20:	
  7720 ;; *************** function _EXT_INT_Initialize *****************
  7721 ;; Defined at:
  7722 ;;		line 93 in file "mcc_generated_files/ext_int.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2, status,0, pclath, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7736 ;;      Params:         0       0       0       0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0       0
  7739 ;;      Totals:         0       0       0       0       0       0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    6
  7743 ;; This function calls:
  7744 ;;		_INT_SetInterruptHandler
  7745 ;; This function is called by:
  7746 ;;		_SYSTEM_Initialize
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function _EXT_INT_Initialize
  7752  0DA1                     _EXT_INT_Initialize:	
  7753                           
  7754                           ;ext_int.c: 102: (PIR0bits.INTF = 0);
  7755                           
  7756                           ;incstack = 0
  7757                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7758  0DA1  0020               	movlb	0	; select bank0
  7759  0DA2  1010               	bcf	16,0	;volatile
  7760                           
  7761                           ;ext_int.c: 103: (INTCONbits.INTEDG = 1);
  7762  0DA3  140B               	bsf	11,0	;volatile
  7763                           
  7764                           ;ext_int.c: 105: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  7765  0DA4  30B6               	movlw	low _INT_DefaultInterruptHandler
  7766  0DA5  00C8               	movwf	INT_SetInterruptHandler@InterruptHandler
  7767  0DA6  300C               	movlw	high _INT_DefaultInterruptHandler
  7768  0DA7  00C9               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  7769  0DA8  318D  2534         	fcall	_INT_SetInterruptHandler
  7770                           
  7771                           ;ext_int.c: 106: (PIE0bits.INTE = 1);
  7772  0DAA  0021               	movlb	1	; select bank1
  7773  0DAB  1410               	bsf	16,0	;volatile
  7774  0DAC  0008               	return
  7775  0DAD                     __end_of_EXT_INT_Initialize:	
  7776                           
  7777                           	psect	text21
  7778  0D34                     __ptext21:	
  7779 ;; *************** function _INT_SetInterruptHandler *****************
  7780 ;; Defined at:
  7781 ;;		line 73 in file "mcc_generated_files/ext_int.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  7784 ;;		 -> INT_DefaultInterruptHandler(1), 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7796 ;;      Params:         0       2       0       0       0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0
  7799 ;;      Totals:         0       2       0       0       0       0       0       0
  7800 ;;Total ram usage:        2 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    5
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_EXT_INT_Initialize
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _INT_SetInterruptHandler
  7812  0D34                     _INT_SetInterruptHandler:	
  7813                           
  7814                           ;ext_int.c: 74: INT_InterruptHandler = InterruptHandler;
  7815                           
  7816                           ;incstack = 0
  7817                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  7818  0D34  0020               	movlb	0	; select bank0
  7819  0D35  0849               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  7820  0D36  0021               	movlb	1	; select bank1
  7821  0D37  00C1               	movwf	(_INT_InterruptHandler+1)^(0+128)
  7822  0D38  0020               	movlb	0	; select bank0
  7823  0D39  0848               	movf	INT_SetInterruptHandler@InterruptHandler,w
  7824  0D3A  0021               	movlb	1	; select bank1
  7825  0D3B  00C0               	movwf	_INT_InterruptHandler^(0+128)
  7826  0D3C  0008               	return
  7827  0D3D                     __end_of_INT_SetInterruptHandler:	
  7828                           
  7829                           	psect	text22
  7830  0D2B                     __ptext22:	
  7831 ;; *************** function _CCP2_Initialize *****************
  7832 ;; Defined at:
  7833 ;;		line 57 in file "mcc_generated_files/ccp2.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7847 ;;      Params:         0       0       0       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    5
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_SYSTEM_Initialize
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _CCP2_Initialize
  7863  0D2B                     _CCP2_Initialize:	
  7864                           
  7865                           ;ccp2.c: 62: CCP2CON = 0x03;
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0]
  7869  0D2B  3003               	movlw	3
  7870  0D2C  0025               	movlb	5	; select bank5
  7871  0D2D  0097               	movwf	23	;volatile
  7872                           
  7873                           ;ccp2.c: 65: CCP2CAP = 0x00;
  7874  0D2E  0198               	clrf	24	;volatile
  7875                           
  7876                           ;ccp2.c: 68: CCPR2H = 0x00;
  7877  0D2F  0196               	clrf	22	;volatile
  7878                           
  7879                           ;ccp2.c: 71: CCPR2L = 0x00;
  7880  0D30  0195               	clrf	21	;volatile
  7881                           
  7882                           ;ccp2.c: 74: CCPTMRSbits.C2TSEL = 0x3;
  7883  0D31  300C               	movlw	12
  7884  0D32  049F               	iorwf	31,f	;volatile
  7885  0D33  0008               	return
  7886  0D34                     __end_of_CCP2_Initialize:	
  7887                           
  7888                           	psect	text23
  7889  0E1A                     __ptext23:	
  7890 ;; *************** function _CCP1_Initialize *****************
  7891 ;; Defined at:
  7892 ;;		line 58 in file "mcc_generated_files/ccp1.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7906 ;;      Params:         0       0       0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    5
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_SYSTEM_Initialize
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           
  7921                           ;psect for function _CCP1_Initialize
  7922  0E1A                     _CCP1_Initialize:	
  7923                           
  7924                           ;ccp1.c: 63: CCP1CON = 0x83;
  7925                           
  7926                           ;incstack = 0
  7927                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0]
  7928  0E1A  3083               	movlw	131
  7929  0E1B  0025               	movlb	5	; select bank5
  7930  0E1C  0093               	movwf	19	;volatile
  7931                           
  7932                           ;ccp1.c: 66: CCP1CAP = 0x00;
  7933  0E1D  0194               	clrf	20	;volatile
  7934                           
  7935                           ;ccp1.c: 69: CCPR1H = 0x00;
  7936  0E1E  0192               	clrf	18	;volatile
  7937                           
  7938                           ;ccp1.c: 72: CCPR1L = 0x00;
  7939  0E1F  0191               	clrf	17	;volatile
  7940                           
  7941                           ;ccp1.c: 75: CCPTMRSbits.C1TSEL = 0x2;
  7942  0E20  081F               	movf	31,w	;volatile
  7943  0E21  39FC               	andlw	-4
  7944  0E22  3802               	iorlw	2
  7945  0E23  009F               	movwf	31	;volatile
  7946                           
  7947                           ;ccp1.c: 78: PIR4bits.CCP1IF = 0;
  7948  0E24  0020               	movlb	0	; select bank0
  7949  0E25  1014               	bcf	20,0	;volatile
  7950                           
  7951                           ;ccp1.c: 81: PIE4bits.CCP1IE = 1;
  7952  0E26  0021               	movlb	1	; select bank1
  7953  0E27  1414               	bsf	20,0	;volatile
  7954  0E28  0008               	return
  7955  0E29                     __end_of_CCP1_Initialize:	
  7956                           
  7957                           	psect	text24
  7958  0D22                     __ptext24:	
  7959 ;; *************** function _ADC_Initialize *****************
  7960 ;; Defined at:
  7961 ;;		line 64 in file "mcc_generated_files/adc.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7975 ;;      Params:         0       0       0       0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0
  7978 ;;      Totals:         0       0       0       0       0       0       0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    5
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_SYSTEM_Initialize
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           
  7990                           ;psect for function _ADC_Initialize
  7991  0D22                     _ADC_Initialize:	
  7992                           
  7993                           ;adc.c: 69: ADCON0 = 0x01;
  7994                           
  7995                           ;incstack = 0
  7996                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7997  0D22  3001               	movlw	1
  7998  0D23  0021               	movlb	1	; select bank1
  7999  0D24  009D               	movwf	29	;volatile
  8000                           
  8001                           ;adc.c: 72: ADCON1 = 0xE0;
  8002  0D25  30E0               	movlw	224
  8003  0D26  009E               	movwf	30	;volatile
  8004                           
  8005                           ;adc.c: 75: ADACT = 0x00;
  8006  0D27  019F               	clrf	31	;volatile
  8007                           
  8008                           ;adc.c: 78: ADRESL = 0x00;
  8009  0D28  019B               	clrf	27	;volatile
  8010                           
  8011                           ;adc.c: 81: ADRESH = 0x00;
  8012  0D29  019C               	clrf	28	;volatile
  8013  0D2A  0008               	return
  8014  0D2B                     __end_of_ADC_Initialize:	
  8015                           
  8016                           	psect	text25
  8017  0E0B                     __ptext25:	
  8018 ;; *************** function _NutRunCycleStart *****************
  8019 ;; Defined at:
  8020 ;;		line 525 in file "main.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;		None
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8034 ;;      Params:         0       0       0       0       0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0
  8037 ;;      Totals:         0       0       0       0       0       0       0       0
  8038 ;;Total ram usage:        0 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:    6
  8041 ;; This function calls:
  8042 ;;		_NutRunCycleReset
  8043 ;;		_TMR3_StartTimer
  8044 ;;		_TMR3_WriteTimer
  8045 ;; This function is called by:
  8046 ;;		_main
  8047 ;;		_OnEncPulseEdgeEvent
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           
  8052                           ;psect for function _NutRunCycleStart
  8053  0E0B                     _NutRunCycleStart:	
  8054                           
  8055                           ;main.c: 527: NutRunCycleReset();
  8056                           
  8057                           ;incstack = 0
  8058                           ; Regs used in _NutRunCycleStart: [wreg+status,2+status,0+pclath+cstack]
  8059  0E0B  318E  26CF  318E   	fcall	_NutRunCycleReset
  8060                           
  8061                           ;main.c: 529: TMR3_WriteTimer(0);
  8062  0E0E  3000               	movlw	0
  8063  0E0F  0020               	movlb	0	; select bank0
  8064  0E10  00C8               	movwf	TMR3_WriteTimer@timerVal
  8065  0E11  00C9               	movwf	TMR3_WriteTimer@timerVal+1
  8066  0E12  318E  2689  318E   	fcall	_TMR3_WriteTimer
  8067                           
  8068                           ;main.c: 530: TMR3_StartTimer();
  8069  0E15  318C  24CC         	fcall	_TMR3_StartTimer
  8070                           
  8071                           ;main.c: 531: PIE3bits.TMR3IE = 1;
  8072  0E17  0021               	movlb	1	; select bank1
  8073  0E18  1613               	bsf	19,4	;volatile
  8074  0E19  0008               	return
  8075  0E1A                     __end_of_NutRunCycleStart:	
  8076                           
  8077                           	psect	text26
  8078  0E89                     __ptext26:	
  8079 ;; *************** function _TMR3_WriteTimer *****************
  8080 ;; Defined at:
  8081 ;;		line 117 in file "mcc_generated_files/tmr3.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  timerVal        2    0[BANK0 ] unsigned int 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8095 ;;      Params:         0       2       0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0
  8098 ;;      Totals:         0       2       0       0       0       0       0       0
  8099 ;;Total ram usage:        2 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    5
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_main
  8106 ;;		_NutRunCycleStart
  8107 ;;		_OnEncPulseEdgeEvent
  8108 ;;		_NutRunCycleStop
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function _TMR3_WriteTimer
  8114  0E89                     _TMR3_WriteTimer:	
  8115                           
  8116                           ;tmr3.c: 119: if (T3CONbits.T3SYNC == 1)
  8117                           
  8118                           ;incstack = 0
  8119                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  8120  0E89  0028               	movlb	8	; select bank8
  8121  0E8A  1D13               	btfss	19,2	;volatile
  8122  0E8B  2E97               	goto	l3455
  8123                           
  8124                           ;tmr3.c: 120: {
  8125                           ;tmr3.c: 122: T3CONbits.TMR3ON = 0;
  8126  0E8C  1013               	bcf	19,0	;volatile
  8127                           
  8128                           ;tmr3.c: 125: TMR3H = (timerVal >> 8);
  8129  0E8D  0020               	movlb	0	; select bank0
  8130  0E8E  0849               	movf	TMR3_WriteTimer@timerVal+1,w
  8131  0E8F  0028               	movlb	8	; select bank8
  8132  0E90  0092               	movwf	18	;volatile
  8133                           
  8134                           ;tmr3.c: 126: TMR3L = timerVal;
  8135  0E91  0020               	movlb	0	; select bank0
  8136  0E92  0848               	movf	TMR3_WriteTimer@timerVal,w
  8137  0E93  0028               	movlb	8	; select bank8
  8138  0E94  0091               	movwf	17	;volatile
  8139                           
  8140                           ;tmr3.c: 129: T3CONbits.TMR3ON =1;
  8141  0E95  1413               	bsf	19,0	;volatile
  8142                           
  8143                           ;tmr3.c: 130: }
  8144  0E96  0008               	return
  8145  0E97                     l3455:	
  8146                           
  8147                           ;tmr3.c: 131: else
  8148                           ;tmr3.c: 132: {
  8149                           ;tmr3.c: 134: TMR3H = (timerVal >> 8);
  8150  0E97  0020               	movlb	0	; select bank0
  8151  0E98  0849               	movf	TMR3_WriteTimer@timerVal+1,w
  8152  0E99  0028               	movlb	8	; select bank8
  8153  0E9A  0092               	movwf	18	;volatile
  8154                           
  8155                           ;tmr3.c: 135: TMR3L = timerVal;
  8156  0E9B  0020               	movlb	0	; select bank0
  8157  0E9C  0848               	movf	TMR3_WriteTimer@timerVal,w
  8158  0E9D  0028               	movlb	8	; select bank8
  8159  0E9E  0091               	movwf	17	;volatile
  8160  0E9F  0008               	return
  8161  0EA0                     __end_of_TMR3_WriteTimer:	
  8162                           
  8163                           	psect	text27
  8164  0CCC                     __ptext27:	
  8165 ;; *************** function _TMR3_StartTimer *****************
  8166 ;; Defined at:
  8167 ;;		line 96 in file "mcc_generated_files/tmr3.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;		None
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		None
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8181 ;;      Params:         0       0       0       0       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0
  8184 ;;      Totals:         0       0       0       0       0       0       0       0
  8185 ;;Total ram usage:        0 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    5
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_TMR3_Initialize
  8192 ;;		_NutRunCycleStart
  8193 ;;		_OnEncPulseEdgeEvent
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function _TMR3_StartTimer
  8199  0CCC                     _TMR3_StartTimer:	
  8200                           
  8201                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
  8202                           
  8203                           ;incstack = 0
  8204                           ; Regs used in _TMR3_StartTimer: []
  8205  0CCC  0028               	movlb	8	; select bank8
  8206  0CCD  1413               	bsf	19,0	;volatile
  8207  0CCE  0008               	return
  8208  0CCF                     __end_of_TMR3_StartTimer:	
  8209                           
  8210                           	psect	text28
  8211  0ECF                     __ptext28:	
  8212 ;; *************** function _NutRunCycleReset *****************
  8213 ;; Defined at:
  8214 ;;		line 513 in file "main.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8228 ;;      Params:         0       0       0       0       0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    5
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_NutRunCycleStart
  8239 ;;		_EPC_StateMachineControlLoop
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           
  8244                           ;psect for function _NutRunCycleReset
  8245  0ECF                     _NutRunCycleReset:	
  8246                           
  8247                           ;main.c: 515: EncEdgeMinTimeInterval= 0xEFFFFFFF;
  8248                           
  8249                           ;incstack = 0
  8250                           ; Regs used in _NutRunCycleReset: [wreg+status,2]
  8251  0ECF  30EF               	movlw	239
  8252  0ED0  0021               	movlb	1	; select bank1
  8253  0ED1  00D3               	movwf	(_EncEdgeMinTimeInterval+3)^(0+128)
  8254  0ED2  30FF               	movlw	255
  8255  0ED3  00D2               	movwf	(_EncEdgeMinTimeInterval+2)^(0+128)
  8256  0ED4  30FF               	movlw	255
  8257  0ED5  00D1               	movwf	(_EncEdgeMinTimeInterval+1)^(0+128)
  8258  0ED6  30FF               	movlw	255
  8259  0ED7  00D0               	movwf	_EncEdgeMinTimeInterval^(0+128)
  8260                           
  8261                           ;main.c: 516: EncEdgeTimeInterval= 0x00000000;
  8262  0ED8  3000               	movlw	0
  8263  0ED9  0020               	movlb	0	; select bank0
  8264  0EDA  00A3               	movwf	_EncEdgeTimeInterval+3
  8265  0EDB  3000               	movlw	0
  8266  0EDC  00A2               	movwf	_EncEdgeTimeInterval+2
  8267  0EDD  3000               	movlw	0
  8268  0EDE  00A1               	movwf	_EncEdgeTimeInterval+1
  8269  0EDF  3000               	movlw	0
  8270  0EE0  00A0               	movwf	_EncEdgeTimeInterval
  8271                           
  8272                           ;main.c: 518: EncoderPosition= 0;
  8273  0EE1  01B6               	clrf	_EncoderPosition
  8274  0EE2  01B7               	clrf	_EncoderPosition+1
  8275                           
  8276                           ;main.c: 521: NutRunLength = 0;
  8277  0EE3  0021               	movlb	1	; select bank1
  8278  0EE4  01BA               	clrf	_NutRunLength^(0+128)
  8279  0EE5  01BB               	clrf	(_NutRunLength+1)^(0+128)
  8280  0EE6  0008               	return
  8281  0EE7                     __end_of_NutRunCycleReset:	
  8282                           
  8283                           	psect	text29
  8284  0EE7                     __ptext29:	
  8285 ;; *************** function _ModbusMasterSetup *****************
  8286 ;; Defined at:
  8287 ;;		line 65 in file "ModbusManager.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  2  525[None  ] int 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, pclath, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8301 ;;      Params:         0       0       0       0       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0
  8304 ;;      Totals:         0       0       0       0       0       0       0       0
  8305 ;;Total ram usage:        0 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    6
  8308 ;; This function calls:
  8309 ;;		_EUSART_Initialize
  8310 ;;		_ModbusMasterInit
  8311 ;;		_postTransmission
  8312 ;;		_preTransmission
  8313 ;; This function is called by:
  8314 ;;		_main
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function _ModbusMasterSetup
  8320  0EE7                     _ModbusMasterSetup:	
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in _ModbusMasterSetup: [wreg+status,2+status,0+pclath+cstack]
  8324                           ;ModbusManager.c: 67: do { LATBbits.LATB6 = 0; } while(0);
  8325  0EE7  0022               	movlb	2	; select bank2
  8326  0EE8  130D               	bcf	13,6	;volatile
  8327                           
  8328                           ;ModbusManager.c: 68: EUSART_Initialize();
  8329  0EE9  318D  2595  318E   	fcall	_EUSART_Initialize
  8330                           
  8331                           ;ModbusManager.c: 70: ModbusMasterInit(0x05);
  8332  0EEC  3005               	movlw	5
  8333  0EED  318D  25FC  318E   	fcall	_ModbusMasterInit
  8334                           
  8335                           ;ModbusManager.c: 72: preTransmission(preTransmission_App);
  8336  0EF0  30C9               	movlw	low _preTransmission_App
  8337  0EF1  0020               	movlb	0	; select bank0
  8338  0EF2  00C8               	movwf	preTransmission@preTransmission
  8339  0EF3  300C               	movlw	high _preTransmission_App
  8340  0EF4  00C9               	movwf	preTransmission@preTransmission+1
  8341  0EF5  318C  24F4  318E   	fcall	_preTransmission
  8342                           
  8343                           ;ModbusManager.c: 73: postTransmission(postTransmission_App);
  8344  0EF8  30E9               	movlw	low _postTransmission_App
  8345  0EF9  0020               	movlb	0	; select bank0
  8346  0EFA  00C8               	movwf	postTransmission@postTransmission
  8347  0EFB  300C               	movlw	high _postTransmission_App
  8348  0EFC  00C9               	movwf	postTransmission@postTransmission+1
  8349  0EFD  318C  24EE         	fcall	_postTransmission
  8350  0EFF  0008               	return
  8351  0F00                     __end_of_ModbusMasterSetup:	
  8352                           
  8353                           	psect	text30
  8354  0CF4                     __ptext30:	
  8355 ;; *************** function _preTransmission *****************
  8356 ;; Defined at:
  8357 ;;		line 133 in file "ModbusMaster.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  preTransmiss    2    0[BANK0 ] PTR FTN()void 
  8360 ;;		 -> preTransmission_App(1), 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8372 ;;      Params:         0       2       0       0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0
  8375 ;;      Totals:         0       2       0       0       0       0       0       0
  8376 ;;Total ram usage:        2 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    5
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_ModbusMasterSetup
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           
  8387                           ;psect for function _preTransmission
  8388  0CF4                     _preTransmission:	
  8389                           
  8390                           ;ModbusMaster.c: 135: _preTransmission = preTransmission;
  8391                           
  8392                           ;incstack = 0
  8393                           ; Regs used in _preTransmission: [wreg]
  8394  0CF4  0020               	movlb	0	; select bank0
  8395  0CF5  0849               	movf	preTransmission@preTransmission+1,w
  8396  0CF6  00AB               	movwf	__preTransmission+1
  8397  0CF7  0848               	movf	preTransmission@preTransmission,w
  8398  0CF8  00AA               	movwf	__preTransmission
  8399  0CF9  0008               	return
  8400  0CFA                     __end_of_preTransmission:	
  8401                           
  8402                           	psect	text31
  8403  0CEE                     __ptext31:	
  8404 ;; *************** function _postTransmission *****************
  8405 ;; Defined at:
  8406 ;;		line 151 in file "ModbusMaster.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  postTransmis    2    0[BANK0 ] PTR FTN()void 
  8409 ;;		 -> postTransmission_App(1), 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;		None
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      void 
  8414 ;; Registers used:
  8415 ;;		wreg
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8421 ;;      Params:         0       2       0       0       0       0       0       0
  8422 ;;      Locals:         0       0       0       0       0       0       0       0
  8423 ;;      Temps:          0       0       0       0       0       0       0       0
  8424 ;;      Totals:         0       2       0       0       0       0       0       0
  8425 ;;Total ram usage:        2 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    5
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_ModbusMasterSetup
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _postTransmission
  8437  0CEE                     _postTransmission:	
  8438                           
  8439                           ;ModbusMaster.c: 153: _postTransmission = postTransmission;
  8440                           
  8441                           ;incstack = 0
  8442                           ; Regs used in _postTransmission: [wreg]
  8443  0CEE  0020               	movlb	0	; select bank0
  8444  0CEF  0849               	movf	postTransmission@postTransmission+1,w
  8445  0CF0  00A9               	movwf	__postTransmission+1
  8446  0CF1  0848               	movf	postTransmission@postTransmission,w
  8447  0CF2  00A8               	movwf	__postTransmission
  8448  0CF3  0008               	return
  8449  0CF4                     __end_of_postTransmission:	
  8450                           
  8451                           	psect	text32
  8452  0DFC                     __ptext32:	
  8453 ;; *************** function _ModbusMasterInit *****************
  8454 ;; Defined at:
  8455 ;;		line 18 in file "ModbusMaster.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  slave           1    wreg     unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  slave           1    1[BANK0 ] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		wreg, status,2
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8469 ;;      Params:         0       0       0       0       0       0       0       0
  8470 ;;      Locals:         0       1       0       0       0       0       0       0
  8471 ;;      Temps:          0       1       0       0       0       0       0       0
  8472 ;;      Totals:         0       2       0       0       0       0       0       0
  8473 ;;Total ram usage:        2 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:    5
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_ModbusMasterSetup
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           
  8484                           ;psect for function _ModbusMasterInit
  8485  0DFC                     _ModbusMasterInit:	
  8486                           
  8487                           ;incstack = 0
  8488                           ; Regs used in _ModbusMasterInit: [wreg+status,2]
  8489                           ;ModbusMasterInit@slave stored from wreg
  8490  0DFC  0020               	movlb	0	; select bank0
  8491  0DFD  00C9               	movwf	ModbusMasterInit@slave
  8492                           
  8493                           ;ModbusMaster.c: 21: _preTransmission = 0;
  8494  0DFE  01AA               	clrf	__preTransmission
  8495  0DFF  01AB               	clrf	__preTransmission+1
  8496                           
  8497                           ;ModbusMaster.c: 22: _postTransmission = 0;
  8498  0E00  01A8               	clrf	__postTransmission
  8499  0E01  01A9               	clrf	__postTransmission+1
  8500                           
  8501                           ;ModbusMaster.c: 23: _u8MBSlave = slave;
  8502  0E02  0849               	movf	ModbusMasterInit@slave,w
  8503  0E03  00C8               	movwf	??_ModbusMasterInit
  8504  0E04  0848               	movf	??_ModbusMasterInit,w
  8505  0E05  00C0               	movwf	__u8MBSlave
  8506                           
  8507                           ;ModbusMaster.c: 24: _u8TransmitBufferIndex = 0;
  8508  0E06  01BF               	clrf	__u8TransmitBufferIndex
  8509                           
  8510                           ;ModbusMaster.c: 25: u16TransmitBufferLength = 0;
  8511  0E07  0021               	movlb	1	; select bank1
  8512  0E08  01B4               	clrf	_u16TransmitBufferLength^(0+128)
  8513  0E09  01B5               	clrf	(_u16TransmitBufferLength+1)^(0+128)
  8514  0E0A  0008               	return
  8515  0E0B                     __end_of_ModbusMasterInit:	
  8516                           
  8517                           	psect	text33
  8518  0D95                     __ptext33:	
  8519 ;; *************** function _EUSART_Initialize *****************
  8520 ;; Defined at:
  8521 ;;		line 55 in file "mcc_generated_files/eusart.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;		None
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;		None
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		wreg
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8535 ;;      Params:         0       0       0       0       0       0       0       0
  8536 ;;      Locals:         0       0       0       0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0
  8538 ;;      Totals:         0       0       0       0       0       0       0       0
  8539 ;;Total ram usage:        0 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    5
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_SYSTEM_Initialize
  8546 ;;		_ModbusMasterSetup
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           
  8551                           ;psect for function _EUSART_Initialize
  8552  0D95                     _EUSART_Initialize:	
  8553                           
  8554                           ;eusart.c: 60: BAUD1CON = 0x08;
  8555                           
  8556                           ;incstack = 0
  8557                           ; Regs used in _EUSART_Initialize: [wreg]
  8558  0D95  3008               	movlw	8
  8559  0D96  0023               	movlb	3	; select bank3
  8560  0D97  009F               	movwf	31	;volatile
  8561                           
  8562                           ;eusart.c: 63: RC1STA = 0x90;
  8563  0D98  3090               	movlw	144
  8564  0D99  009D               	movwf	29	;volatile
  8565                           
  8566                           ;eusart.c: 66: TX1STA = 0x24;
  8567  0D9A  3024               	movlw	36
  8568  0D9B  009E               	movwf	30	;volatile
  8569                           
  8570                           ;eusart.c: 69: SP1BRGL = 0x40;
  8571  0D9C  3040               	movlw	64
  8572  0D9D  009B               	movwf	27	;volatile
  8573                           
  8574                           ;eusart.c: 72: SP1BRGH = 0x03;
  8575  0D9E  3003               	movlw	3
  8576  0D9F  009C               	movwf	28	;volatile
  8577  0DA0  0008               	return
  8578  0DA1                     __end_of_EUSART_Initialize:	
  8579                           
  8580                           	psect	text34
  8581  0F92                     __ptext34:	
  8582 ;; *************** function _MB_UpdateEPCParameter *****************
  8583 ;; Defined at:
  8584 ;;		line 76 in file "ModbusManager.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  result          1   34[BANK0 ] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8598 ;;      Params:         0       0       0       0       0       0       0       0
  8599 ;;      Locals:         0       1       0       0       0       0       0       0
  8600 ;;      Temps:          0       1       0       0       0       0       0       0
  8601 ;;      Totals:         0       2       0       0       0       0       0       0
  8602 ;;Total ram usage:        2 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    8
  8605 ;; This function calls:
  8606 ;;		_getResponseBuffer
  8607 ;;		_readHoldingRegisters
  8608 ;; This function is called by:
  8609 ;;		_main
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           
  8614                           ;psect for function _MB_UpdateEPCParameter
  8615  0F92                     _MB_UpdateEPCParameter:	
  8616                           
  8617                           ;ModbusManager.c: 78: unsigned char result;
  8618                           ;ModbusManager.c: 79: result = readHoldingRegisters(1107, 1);
  8619                           
  8620                           ;incstack = 0
  8621                           ; Regs used in _MB_UpdateEPCParameter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8622  0F92  3053               	movlw	83
  8623  0F93  0020               	movlb	0	; select bank0
  8624  0F94  00E5               	movwf	readHoldingRegisters@u16ReadAddress
  8625  0F95  3004               	movlw	4
  8626  0F96  00E6               	movwf	readHoldingRegisters@u16ReadAddress+1
  8627  0F97  3001               	movlw	1
  8628  0F98  00E7               	movwf	readHoldingRegisters@u16ReadQty
  8629  0F99  3000               	movlw	0
  8630  0F9A  00E8               	movwf	readHoldingRegisters@u16ReadQty+1
  8631  0F9B  318D  25D3  318F   	fcall	_readHoldingRegisters
  8632  0F9E  0020               	movlb	0	; select bank0
  8633  0F9F  00E9               	movwf	??_MB_UpdateEPCParameter
  8634  0FA0  0869               	movf	??_MB_UpdateEPCParameter,w
  8635  0FA1  00EA               	movwf	MB_UpdateEPCParameter@result
  8636                           
  8637                           ;ModbusManager.c: 80: if (result == 0x00)
  8638  0FA2  086A               	movf	MB_UpdateEPCParameter@result,w
  8639  0FA3  1D03               	btfss	3,2
  8640  0FA4  2FB0               	goto	l6049
  8641                           
  8642                           ;ModbusManager.c: 81: {
  8643                           ;ModbusManager.c: 83: MBreadSetNoOfPulse=(unsigned int)getResponseBuffer(0x00);
  8644  0FA5  3000               	movlw	0
  8645  0FA6  318F  2752         	fcall	_getResponseBuffer
  8646  0FA8  0020               	movlb	0	; select bank0
  8647  0FA9  0849               	movf	?_getResponseBuffer+1,w
  8648  0FAA  0021               	movlb	1	; select bank1
  8649  0FAB  00BF               	movwf	(_MBreadSetNoOfPulse+1)^(0+128)
  8650  0FAC  0020               	movlb	0	; select bank0
  8651  0FAD  0848               	movf	?_getResponseBuffer,w
  8652  0FAE  0021               	movlb	1	; select bank1
  8653  0FAF  00BE               	movwf	_MBreadSetNoOfPulse^(0+128)
  8654  0FB0                     l6049:	
  8655                           
  8656                           ;ModbusManager.c: 85: }
  8657                           ;ModbusManager.c: 86: MBreadSetNoOfPulse=0;
  8658  0FB0  0021               	movlb	1	; select bank1
  8659  0FB1  01BE               	clrf	_MBreadSetNoOfPulse^(0+128)
  8660  0FB2  01BF               	clrf	(_MBreadSetNoOfPulse+1)^(0+128)
  8661  0FB3  0008               	return
  8662  0FB4                     __end_of_MB_UpdateEPCParameter:	
  8663                           
  8664                           	psect	text35
  8665  0DD3                     __ptext35:	
  8666 ;; *************** function _readHoldingRegisters *****************
  8667 ;; Defined at:
  8668 ;;		line 314 in file "ModbusMaster.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  u16ReadAddre    2   29[BANK0 ] unsigned int 
  8671 ;;  u16ReadQty      2   31[BANK0 ] unsigned int 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      unsigned char 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8683 ;;      Params:         0       4       0       0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0
  8686 ;;      Totals:         0       4       0       0       0       0       0       0
  8687 ;;Total ram usage:        4 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    7
  8690 ;; This function calls:
  8691 ;;		_ModbusMasterTransaction
  8692 ;; This function is called by:
  8693 ;;		_MB_UpdateEPCParameter
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           
  8698                           ;psect for function _readHoldingRegisters
  8699  0DD3                     _readHoldingRegisters:	
  8700                           
  8701                           ;ModbusMaster.c: 317: _u16ReadAddress = u16ReadAddress;
  8702                           
  8703                           ;incstack = 0
  8704                           ; Regs used in _readHoldingRegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8705  0DD3  0020               	movlb	0	; select bank0
  8706  0DD4  0866               	movf	readHoldingRegisters@u16ReadAddress+1,w
  8707  0DD5  00B3               	movwf	__u16ReadAddress+1
  8708  0DD6  0865               	movf	readHoldingRegisters@u16ReadAddress,w
  8709  0DD7  00B2               	movwf	__u16ReadAddress
  8710                           
  8711                           ;ModbusMaster.c: 318: _u16ReadQty = u16ReadQty;
  8712  0DD8  0868               	movf	readHoldingRegisters@u16ReadQty+1,w
  8713  0DD9  00B1               	movwf	__u16ReadQty+1
  8714  0DDA  0867               	movf	readHoldingRegisters@u16ReadQty,w
  8715  0DDB  00B0               	movwf	__u16ReadQty
  8716                           
  8717                           ;ModbusMaster.c: 319: return ModbusMasterTransaction(0x03);
  8718  0DDC  3003               	movlw	3
  8719  0DDD  3180  209D         	fcall	_ModbusMasterTransaction
  8720  0DDF  0008               	return
  8721  0DE0                     __end_of_readHoldingRegisters:	
  8722                           
  8723                           	psect	text36
  8724  009D                     __ptext36:	
  8725 ;; *************** function _ModbusMasterTransaction *****************
  8726 ;; Defined at:
  8727 ;;		line 537 in file "ModbusMaster.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  u8MBFunction    1    wreg     unsigned char 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  u8MBFunction    1   23[BANK0 ] unsigned char 
  8732 ;;  u32StartTime    4   15[BANK0 ] unsigned long 
  8733 ;;  u16CRC          2   25[BANK0 ] unsigned int 
  8734 ;;  u8ModbusADUS    1   28[BANK0 ] unsigned char 
  8735 ;;  i               1   27[BANK0 ] unsigned char 
  8736 ;;  u8MBStatus      1   24[BANK0 ] unsigned char 
  8737 ;;  u8BytesLeft     1   22[BANK0 ] unsigned char 
  8738 ;;  u8Qty           1   21[BANK0 ] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      unsigned char 
  8741 ;; Registers used:
  8742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8748 ;;      Params:         0       0       0       0       0       0       0       0
  8749 ;;      Locals:         0      14       0       0       0       0       0       0
  8750 ;;      Temps:          0       5       0       0       0       0       0       0
  8751 ;;      Totals:         0      19       0       0       0       0       0       0
  8752 ;;Total ram usage:       19 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    6
  8755 ;; This function calls:
  8756 ;;		Absolute function
  8757 ;;		_EUSART_Read
  8758 ;;		_EUSART_Write
  8759 ;;		_crc16_update
  8760 ;;		_highByte
  8761 ;;		_lowByte
  8762 ;;		_millis
  8763 ;;		_millisReset
  8764 ;;		_postTransmission_App
  8765 ;;		_preTransmission_App
  8766 ;;		_word
  8767 ;; This function is called by:
  8768 ;;		_readHoldingRegisters
  8769 ;;		_readCoils
  8770 ;;		_readDiscreteInputs
  8771 ;;		_readInputRegisters
  8772 ;;		_writeSingleCoil
  8773 ;;		_writeSingleRegister
  8774 ;;		_writeMultipleCoils
  8775 ;;		_writeMultipleRegisters
  8776 ;;		_maskWriteRegister
  8777 ;;		_readWriteMultipleRegisters
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           
  8782                           ;psect for function _ModbusMasterTransaction
  8783  009D                     _ModbusMasterTransaction:	
  8784                           
  8785                           ;incstack = 0
  8786                           ; Regs used in _ModbusMasterTransaction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8787                           ;ModbusMasterTransaction@u8MBFunction stored from wreg
  8788  009D  0020               	movlb	0	; select bank0
  8789  009E  00DF               	movwf	ModbusMasterTransaction@u8MBFunction
  8790                           
  8791                           ;ModbusMaster.c: 541: unsigned char u8ModbusADUSize = 0;
  8792  009F  01E4               	clrf	ModbusMasterTransaction@u8ModbusADUSize
  8793                           
  8794                           ;ModbusMaster.c: 542: unsigned char i, u8Qty;
  8795                           ;ModbusMaster.c: 543: unsigned int u16CRC;
  8796                           ;ModbusMaster.c: 544: unsigned long u32StartTime;
  8797                           ;ModbusMaster.c: 545: unsigned char u8BytesLeft = 8;
  8798  00A0  3008               	movlw	8
  8799  00A1  00D2               	movwf	??_ModbusMasterTransaction
  8800  00A2  0852               	movf	??_ModbusMasterTransaction,w
  8801  00A3  00DE               	movwf	ModbusMasterTransaction@u8BytesLeft
  8802                           
  8803                           ;ModbusMaster.c: 546: unsigned char u8MBStatus = 0x00;
  8804  00A4  01E0               	clrf	ModbusMasterTransaction@u8MBStatus
  8805                           
  8806                           ;ModbusMaster.c: 549: u8ModbusADU[u8ModbusADUSize++] = _u8MBSlave;
  8807  00A5  0840               	movf	__u8MBSlave,w
  8808  00A6  00D2               	movwf	??_ModbusMasterTransaction
  8809  00A7  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8810  00A8  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8811  00A9  0086               	movwf	6
  8812  00AA  3001               	movlw	1	; select bank2/3
  8813  00AB  0087               	movwf	7
  8814  00AC  0852               	movf	??_ModbusMasterTransaction,w
  8815  00AD  0081               	movwf	1
  8816  00AE  3001               	movlw	1
  8817  00AF  00D2               	movwf	??_ModbusMasterTransaction
  8818  00B0  0852               	movf	??_ModbusMasterTransaction,w
  8819  00B1  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8820                           
  8821                           ;ModbusMaster.c: 550: u8ModbusADU[u8ModbusADUSize++] = u8MBFunction;
  8822  00B2  085F               	movf	ModbusMasterTransaction@u8MBFunction,w
  8823  00B3  00D2               	movwf	??_ModbusMasterTransaction
  8824  00B4  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8825  00B5  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8826  00B6  0086               	movwf	6
  8827  00B7  3001               	movlw	1	; select bank2/3
  8828  00B8  0087               	movwf	7
  8829  00B9  0852               	movf	??_ModbusMasterTransaction,w
  8830  00BA  0081               	movwf	1
  8831  00BB  3001               	movlw	1
  8832  00BC  00D2               	movwf	??_ModbusMasterTransaction
  8833  00BD  0852               	movf	??_ModbusMasterTransaction,w
  8834  00BE  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8835                           
  8836                           ;ModbusMaster.c: 552: switch(u8MBFunction)
  8837  00BF  2911               	goto	l5731
  8838  00C0                     l5717:	
  8839                           ;ModbusMaster.c: 553: {
  8840                           ;ModbusMaster.c: 554: case 0x01:
  8841                           
  8842                           
  8843                           ;ModbusMaster.c: 555: case 0x02:
  8844                           ;ModbusMaster.c: 556: case 0x04:
  8845                           ;ModbusMaster.c: 557: case 0x03:
  8846                           ;ModbusMaster.c: 558: case 0x17:
  8847                           ;ModbusMaster.c: 559: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16ReadAddress);
  8848  00C0  0833               	movf	__u16ReadAddress+1,w
  8849  00C1  00C9               	movwf	highByte@ww+1
  8850  00C2  0832               	movf	__u16ReadAddress,w
  8851  00C3  00C8               	movwf	highByte@ww
  8852  00C4  318C  24C3  3180   	fcall	_highByte
  8853  00C7  0020               	movlb	0	; select bank0
  8854  00C8  00D2               	movwf	??_ModbusMasterTransaction
  8855  00C9  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8856  00CA  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8857  00CB  0086               	movwf	6
  8858  00CC  3001               	movlw	1	; select bank2/3
  8859  00CD  0087               	movwf	7
  8860  00CE  0852               	movf	??_ModbusMasterTransaction,w
  8861  00CF  0081               	movwf	1
  8862  00D0  3001               	movlw	1
  8863  00D1  00D2               	movwf	??_ModbusMasterTransaction
  8864  00D2  0852               	movf	??_ModbusMasterTransaction,w
  8865  00D3  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8866                           
  8867                           ;ModbusMaster.c: 560: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16ReadAddress);
  8868  00D4  0833               	movf	__u16ReadAddress+1,w
  8869  00D5  00C9               	movwf	lowByte@ww+1
  8870  00D6  0832               	movf	__u16ReadAddress,w
  8871  00D7  00C8               	movwf	lowByte@ww
  8872  00D8  318C  24C6  3180   	fcall	_lowByte
  8873  00DB  0020               	movlb	0	; select bank0
  8874  00DC  00D2               	movwf	??_ModbusMasterTransaction
  8875  00DD  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8876  00DE  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8877  00DF  0086               	movwf	6
  8878  00E0  3001               	movlw	1	; select bank2/3
  8879  00E1  0087               	movwf	7
  8880  00E2  0852               	movf	??_ModbusMasterTransaction,w
  8881  00E3  0081               	movwf	1
  8882  00E4  3001               	movlw	1
  8883  00E5  00D2               	movwf	??_ModbusMasterTransaction
  8884  00E6  0852               	movf	??_ModbusMasterTransaction,w
  8885  00E7  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8886                           
  8887                           ;ModbusMaster.c: 561: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16ReadQty);
  8888  00E8  0831               	movf	__u16ReadQty+1,w
  8889  00E9  00C9               	movwf	highByte@ww+1
  8890  00EA  0830               	movf	__u16ReadQty,w
  8891  00EB  00C8               	movwf	highByte@ww
  8892  00EC  318C  24C3  3180   	fcall	_highByte
  8893  00EF  0020               	movlb	0	; select bank0
  8894  00F0  00D2               	movwf	??_ModbusMasterTransaction
  8895  00F1  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8896  00F2  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8897  00F3  0086               	movwf	6
  8898  00F4  3001               	movlw	1	; select bank2/3
  8899  00F5  0087               	movwf	7
  8900  00F6  0852               	movf	??_ModbusMasterTransaction,w
  8901  00F7  0081               	movwf	1
  8902  00F8  3001               	movlw	1
  8903  00F9  00D2               	movwf	??_ModbusMasterTransaction
  8904  00FA  0852               	movf	??_ModbusMasterTransaction,w
  8905  00FB  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8906                           
  8907                           ;ModbusMaster.c: 562: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16ReadQty);
  8908  00FC  0831               	movf	__u16ReadQty+1,w
  8909  00FD  00C9               	movwf	lowByte@ww+1
  8910  00FE  0830               	movf	__u16ReadQty,w
  8911  00FF  00C8               	movwf	lowByte@ww
  8912  0100  318C  24C6  3180   	fcall	_lowByte
  8913  0103  0020               	movlb	0	; select bank0
  8914  0104  00D2               	movwf	??_ModbusMasterTransaction
  8915  0105  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8916  0106  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8917  0107  0086               	movwf	6
  8918  0108  3001               	movlw	1	; select bank2/3
  8919  0109  0087               	movwf	7
  8920  010A  0852               	movf	??_ModbusMasterTransaction,w
  8921  010B  0081               	movwf	1
  8922  010C  3001               	movlw	1
  8923  010D  00D2               	movwf	??_ModbusMasterTransaction
  8924  010E  0852               	movf	??_ModbusMasterTransaction,w
  8925  010F  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8926                           
  8927                           ;ModbusMaster.c: 564: }
  8928                           
  8929                           ;ModbusMaster.c: 563: break;
  8930  0110  294C               	goto	l5741
  8931  0111                     l5731:	
  8932  0111  085F               	movf	ModbusMasterTransaction@u8MBFunction,w
  8933                           
  8934                           ; Switch size 1, requested type "space"
  8935                           ; Number of cases is 5, Range of values is 1 to 23
  8936                           ; switch strategies available:
  8937                           ; Name         Instructions Cycles
  8938                           ; simple_byte           16     9 (average)
  8939                           ; direct_byte           55     9 (fixed)
  8940                           ; jumptable            263     9 (fixed)
  8941                           ;	Chosen strategy is simple_byte
  8942  0112  3A01               	xorlw	1	; case 1
  8943  0113  1903               	skipnz
  8944  0114  28C0               	goto	l5717
  8945  0115  3A03               	xorlw	3	; case 2
  8946  0116  1903               	skipnz
  8947  0117  28C0               	goto	l5717
  8948  0118  3A01               	xorlw	1	; case 3
  8949  0119  1903               	skipnz
  8950  011A  28C0               	goto	l5717
  8951  011B  3A07               	xorlw	7	; case 4
  8952  011C  1903               	skipnz
  8953  011D  28C0               	goto	l5717
  8954  011E  3A13               	xorlw	19	; case 23
  8955  011F  1903               	skipnz
  8956  0120  28C0               	goto	l5717
  8957  0121  294C               	goto	l5741
  8958                           
  8959                           ;ModbusMaster.c: 566: switch(u8MBFunction)
  8960  0122  294C               	goto	l5741
  8961  0123                     l5733:	
  8962                           ;ModbusMaster.c: 567: {
  8963                           ;ModbusMaster.c: 568: case 0x05:
  8964                           
  8965                           
  8966                           ;ModbusMaster.c: 569: case 0x16:
  8967                           ;ModbusMaster.c: 570: case 0x0F:
  8968                           ;ModbusMaster.c: 571: case 0x06:
  8969                           ;ModbusMaster.c: 572: case 0x10:
  8970                           ;ModbusMaster.c: 573: case 0x17:
  8971                           ;ModbusMaster.c: 574: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16WriteAddress);
  8972  0123  082F               	movf	__u16WriteAddress+1,w
  8973  0124  00C9               	movwf	highByte@ww+1
  8974  0125  082E               	movf	__u16WriteAddress,w
  8975  0126  00C8               	movwf	highByte@ww
  8976  0127  318C  24C3  3180   	fcall	_highByte
  8977  012A  0020               	movlb	0	; select bank0
  8978  012B  00D2               	movwf	??_ModbusMasterTransaction
  8979  012C  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  8980  012D  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  8981  012E  0086               	movwf	6
  8982  012F  3001               	movlw	1	; select bank2/3
  8983  0130  0087               	movwf	7
  8984  0131  0852               	movf	??_ModbusMasterTransaction,w
  8985  0132  0081               	movwf	1
  8986  0133  3001               	movlw	1
  8987  0134  00D2               	movwf	??_ModbusMasterTransaction
  8988  0135  0852               	movf	??_ModbusMasterTransaction,w
  8989  0136  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  8990                           
  8991                           ;ModbusMaster.c: 575: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16WriteAddress);
  8992  0137  082F               	movf	__u16WriteAddress+1,w
  8993  0138  00C9               	movwf	lowByte@ww+1
  8994  0139  082E               	movf	__u16WriteAddress,w
  8995  013A  00C8               	movwf	lowByte@ww
  8996  013B  318C  24C6  3180   	fcall	_lowByte
  8997  013E  0020               	movlb	0	; select bank0
  8998  013F  00D2               	movwf	??_ModbusMasterTransaction
  8999  0140  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9000  0141  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9001  0142  0086               	movwf	6
  9002  0143  3001               	movlw	1	; select bank2/3
  9003  0144  0087               	movwf	7
  9004  0145  0852               	movf	??_ModbusMasterTransaction,w
  9005  0146  0081               	movwf	1
  9006  0147  3001               	movlw	1
  9007  0148  00D2               	movwf	??_ModbusMasterTransaction
  9008  0149  0852               	movf	??_ModbusMasterTransaction,w
  9009  014A  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9010                           
  9011                           ;ModbusMaster.c: 577: }
  9012                           
  9013                           ;ModbusMaster.c: 576: break;
  9014  014B  2B47               	goto	l5823
  9015  014C                     l5741:	
  9016  014C  085F               	movf	ModbusMasterTransaction@u8MBFunction,w
  9017                           
  9018                           ; Switch size 1, requested type "space"
  9019                           ; Number of cases is 6, Range of values is 5 to 23
  9020                           ; switch strategies available:
  9021                           ; Name         Instructions Cycles
  9022                           ; simple_byte           19    10 (average)
  9023                           ; direct_byte           47     9 (fixed)
  9024                           ; jumptable            263     9 (fixed)
  9025                           ;	Chosen strategy is simple_byte
  9026  014D  3A05               	xorlw	5	; case 5
  9027  014E  1903               	skipnz
  9028  014F  2923               	goto	l5733
  9029  0150  3A03               	xorlw	3	; case 6
  9030  0151  1903               	skipnz
  9031  0152  2923               	goto	l5733
  9032  0153  3A09               	xorlw	9	; case 15
  9033  0154  1903               	skipnz
  9034  0155  2923               	goto	l5733
  9035  0156  3A1F               	xorlw	31	; case 16
  9036  0157  1903               	skipnz
  9037  0158  2923               	goto	l5733
  9038  0159  3A06               	xorlw	6	; case 22
  9039  015A  1903               	skipnz
  9040  015B  2923               	goto	l5733
  9041  015C  3A01               	xorlw	1	; case 23
  9042  015D  1903               	skipnz
  9043  015E  2923               	goto	l5733
  9044  015F  2B47               	goto	l5823
  9045                           
  9046                           ;ModbusMaster.c: 579: switch(u8MBFunction)
  9047  0160  2B47               	goto	l5823
  9048  0161                     l5743:	
  9049                           ;ModbusMaster.c: 580: {
  9050                           ;ModbusMaster.c: 581: case 0x05:
  9051                           
  9052                           
  9053                           ;ModbusMaster.c: 582: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16WriteQty);
  9054  0161  082D               	movf	__u16WriteQty+1,w
  9055  0162  00C9               	movwf	highByte@ww+1
  9056  0163  082C               	movf	__u16WriteQty,w
  9057  0164  00C8               	movwf	highByte@ww
  9058  0165  318C  24C3  3180   	fcall	_highByte
  9059  0168  0020               	movlb	0	; select bank0
  9060  0169  00D2               	movwf	??_ModbusMasterTransaction
  9061  016A  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9062  016B  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9063  016C  0086               	movwf	6
  9064  016D  3001               	movlw	1	; select bank2/3
  9065  016E  0087               	movwf	7
  9066  016F  0852               	movf	??_ModbusMasterTransaction,w
  9067  0170  0081               	movwf	1
  9068  0171  3001               	movlw	1
  9069  0172  00D2               	movwf	??_ModbusMasterTransaction
  9070  0173  0852               	movf	??_ModbusMasterTransaction,w
  9071  0174  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9072                           
  9073                           ;ModbusMaster.c: 583: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16WriteQty);
  9074  0175  082D               	movf	__u16WriteQty+1,w
  9075  0176  00C9               	movwf	lowByte@ww+1
  9076  0177  082C               	movf	__u16WriteQty,w
  9077  0178  00C8               	movwf	lowByte@ww
  9078  0179  2B36               	goto	L8
  9079  017A                     l5749:	
  9080                           ;ModbusMaster.c: 586: case 0x06:
  9081                           
  9082                           ;ModbusMaster.c: 584: break;
  9083                           
  9084                           
  9085                           ;ModbusMaster.c: 587: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16TransmitBuffer[0]);
  9086  017A  3070               	movlw	112
  9087  017B  0086               	movwf	6
  9088  017C  3021               	movlw	33
  9089  017D  0087               	movwf	7
  9090  017E  3F40               	moviw [0]fsr1
  9091  017F  00C8               	movwf	highByte@ww
  9092  0180  3F41               	moviw [1]fsr1
  9093  0181  00C9               	movwf	highByte@ww+1
  9094  0182  318C  24C3  3180   	fcall	_highByte
  9095  0185  0020               	movlb	0	; select bank0
  9096  0186  00D2               	movwf	??_ModbusMasterTransaction
  9097  0187  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9098  0188  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9099  0189  0086               	movwf	6
  9100  018A  3001               	movlw	1	; select bank2/3
  9101  018B  0087               	movwf	7
  9102  018C  0852               	movf	??_ModbusMasterTransaction,w
  9103  018D  0081               	movwf	1
  9104  018E  3001               	movlw	1
  9105  018F  00D2               	movwf	??_ModbusMasterTransaction
  9106  0190  0852               	movf	??_ModbusMasterTransaction,w
  9107  0191  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9108                           
  9109                           ;ModbusMaster.c: 588: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16TransmitBuffer[0]);
  9110  0192  3070               	movlw	112
  9111  0193  0086               	movwf	6
  9112  0194  3021               	movlw	33
  9113  0195  0087               	movwf	7
  9114  0196  3F40               	moviw [0]fsr1
  9115  0197  00C8               	movwf	lowByte@ww
  9116  0198  3F41               	moviw [1]fsr1
  9117  0199  2B35               	goto	L10
  9118  019A                     l5755:	
  9119                           ;ModbusMaster.c: 591: case 0x0F:
  9120                           
  9121                           ;ModbusMaster.c: 589: break;
  9122                           
  9123                           
  9124                           ;ModbusMaster.c: 592: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16WriteQty);
  9125  019A  082D               	movf	__u16WriteQty+1,w
  9126  019B  00C9               	movwf	highByte@ww+1
  9127  019C  082C               	movf	__u16WriteQty,w
  9128  019D  00C8               	movwf	highByte@ww
  9129  019E  318C  24C3  3180   	fcall	_highByte
  9130  01A1  0020               	movlb	0	; select bank0
  9131  01A2  00D2               	movwf	??_ModbusMasterTransaction
  9132  01A3  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9133  01A4  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9134  01A5  0086               	movwf	6
  9135  01A6  3001               	movlw	1	; select bank2/3
  9136  01A7  0087               	movwf	7
  9137  01A8  0852               	movf	??_ModbusMasterTransaction,w
  9138  01A9  0081               	movwf	1
  9139  01AA  3001               	movlw	1
  9140  01AB  00D2               	movwf	??_ModbusMasterTransaction
  9141  01AC  0852               	movf	??_ModbusMasterTransaction,w
  9142  01AD  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9143                           
  9144                           ;ModbusMaster.c: 593: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16WriteQty);
  9145  01AE  082D               	movf	__u16WriteQty+1,w
  9146  01AF  00C9               	movwf	lowByte@ww+1
  9147  01B0  082C               	movf	__u16WriteQty,w
  9148  01B1  00C8               	movwf	lowByte@ww
  9149  01B2  318C  24C6  3180   	fcall	_lowByte
  9150  01B5  0020               	movlb	0	; select bank0
  9151  01B6  00D2               	movwf	??_ModbusMasterTransaction
  9152  01B7  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9153  01B8  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9154  01B9  0086               	movwf	6
  9155  01BA  3001               	movlw	1	; select bank2/3
  9156  01BB  0087               	movwf	7
  9157  01BC  0852               	movf	??_ModbusMasterTransaction,w
  9158  01BD  0081               	movwf	1
  9159  01BE  3001               	movlw	1
  9160  01BF  00D2               	movwf	??_ModbusMasterTransaction
  9161  01C0  0852               	movf	??_ModbusMasterTransaction,w
  9162  01C1  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9163                           
  9164                           ;ModbusMaster.c: 594: u8Qty = (_u16WriteQty % 8) ? ((_u16WriteQty >> 3) + 1) : (_u16Writ
      +                          eQty >> 3);
  9165  01C2  3007               	movlw	7
  9166  01C3  052C               	andwf	__u16WriteQty,w
  9167  01C4  00D2               	movwf	??_ModbusMasterTransaction
  9168  01C5  3000               	movlw	0
  9169  01C6  052D               	andwf	__u16WriteQty+1,w
  9170  01C7  00D3               	movwf	??_ModbusMasterTransaction+1
  9171  01C8  0852               	movf	??_ModbusMasterTransaction,w
  9172  01C9  0453               	iorwf	??_ModbusMasterTransaction+1,w
  9173  01CA  1D03               	btfss	3,2
  9174  01CB  29DA               	goto	l5763
  9175  01CC  082D               	movf	__u16WriteQty+1,w
  9176  01CD  00D3               	movwf	??_ModbusMasterTransaction+1
  9177  01CE  082C               	movf	__u16WriteQty,w
  9178  01CF  00D2               	movwf	??_ModbusMasterTransaction
  9179  01D0  36D3               	lsrf	??_ModbusMasterTransaction+1,f
  9180  01D1  0CD2               	rrf	??_ModbusMasterTransaction,f
  9181  01D2  36D3               	lsrf	??_ModbusMasterTransaction+1,f
  9182  01D3  0CD2               	rrf	??_ModbusMasterTransaction,f
  9183  01D4  36D3               	lsrf	??_ModbusMasterTransaction+1,f
  9184  01D5  0CD2               	rrf	??_ModbusMasterTransaction,f
  9185  01D6  0852               	movf	??_ModbusMasterTransaction,w
  9186  01D7  00DB               	movwf	_ModbusMasterTransaction$1565
  9187  01D8  0853               	movf	??_ModbusMasterTransaction+1,w
  9188  01D9  29E9               	goto	L2
  9189  01DA                     l5763:	
  9190  01DA  082D               	movf	__u16WriteQty+1,w
  9191  01DB  00D3               	movwf	??_ModbusMasterTransaction+1
  9192  01DC  082C               	movf	__u16WriteQty,w
  9193  01DD  00D2               	movwf	??_ModbusMasterTransaction
  9194  01DE  36D3               	lsrf	??_ModbusMasterTransaction+1,f
  9195  01DF  0CD2               	rrf	??_ModbusMasterTransaction,f
  9196  01E0  36D3               	lsrf	??_ModbusMasterTransaction+1,f
  9197  01E1  0CD2               	rrf	??_ModbusMasterTransaction,f
  9198  01E2  36D3               	lsrf	??_ModbusMasterTransaction+1,f
  9199  01E3  0CD2               	rrf	??_ModbusMasterTransaction,f
  9200  01E4  0852               	movf	??_ModbusMasterTransaction,w
  9201  01E5  3E01               	addlw	1
  9202  01E6  00DB               	movwf	_ModbusMasterTransaction$1565
  9203  01E7  3000               	movlw	0
  9204  01E8  3D53               	addwfc	??_ModbusMasterTransaction+1,w
  9205  01E9                     L2:	
  9206  01E9  00DC               	movwf	_ModbusMasterTransaction$1565+1
  9207  01EA  085B               	movf	_ModbusMasterTransaction$1565,w
  9208  01EB  00D2               	movwf	??_ModbusMasterTransaction
  9209  01EC  0852               	movf	??_ModbusMasterTransaction,w
  9210  01ED  00DD               	movwf	ModbusMasterTransaction@u8Qty
  9211                           
  9212                           ;ModbusMaster.c: 595: u8ModbusADU[u8ModbusADUSize++] = u8Qty;
  9213  01EE  085D               	movf	ModbusMasterTransaction@u8Qty,w
  9214  01EF  00D2               	movwf	??_ModbusMasterTransaction
  9215  01F0  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9216  01F1  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9217  01F2  0086               	movwf	6
  9218  01F3  3001               	movlw	1	; select bank2/3
  9219  01F4  0087               	movwf	7
  9220  01F5  0852               	movf	??_ModbusMasterTransaction,w
  9221  01F6  0081               	movwf	1
  9222  01F7  3001               	movlw	1
  9223  01F8  00D2               	movwf	??_ModbusMasterTransaction
  9224  01F9  0852               	movf	??_ModbusMasterTransaction,w
  9225  01FA  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9226                           
  9227                           ;ModbusMaster.c: 596: for (i = 0; i < u8Qty; i++)
  9228  01FB  01E3               	clrf	ModbusMasterTransaction@i
  9229  01FC  2A3B               	goto	l5787
  9230  01FD                     l5773:	
  9231                           ;ModbusMaster.c: 599: {
  9232                           ;ModbusMaster.c: 600: case 0:
  9233                           
  9234                           ;ModbusMaster.c: 597: {
  9235                           ;ModbusMaster.c: 598: switch(i % 2)
  9236                           
  9237                           
  9238                           ;ModbusMaster.c: 601: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16TransmitBuffer[i >> 1
      +                          ]);
  9239  01FD  3663               	lsrf	ModbusMasterTransaction@i,w
  9240  01FE  00D2               	movwf	??_ModbusMasterTransaction
  9241  01FF  01D3               	clrf	??_ModbusMasterTransaction+1
  9242  0200  35D2               	lslf	??_ModbusMasterTransaction,f
  9243  0201  0DD3               	rlf	??_ModbusMasterTransaction+1,f
  9244  0202  3070               	movlw	112
  9245  0203  00D4               	movwf	??_ModbusMasterTransaction+2
  9246  0204  3021               	movlw	33
  9247  0205  00D5               	movwf	??_ModbusMasterTransaction+3
  9248  0206  0852               	movf	??_ModbusMasterTransaction,w
  9249  0207  0754               	addwf	??_ModbusMasterTransaction+2,w
  9250  0208  0086               	movwf	6
  9251  0209  0853               	movf	??_ModbusMasterTransaction+1,w
  9252  020A  3D55               	addwfc	??_ModbusMasterTransaction+3,w
  9253  020B  0087               	movwf	7
  9254  020C  3F40               	moviw [0]fsr1
  9255  020D  00C8               	movwf	lowByte@ww
  9256  020E  3F41               	moviw [1]fsr1
  9257  020F  00C9               	movwf	lowByte@ww+1
  9258  0210  318C  24C6  3180   	fcall	_lowByte
  9259  0213  2A2A               	goto	L9
  9260  0214                     l5777:	
  9261                           ;ModbusMaster.c: 604: case 1:
  9262                           
  9263                           ;ModbusMaster.c: 602: break;
  9264                           
  9265                           
  9266                           ;ModbusMaster.c: 605: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16TransmitBuffer[i >> 
      +                          1]);
  9267  0214  3663               	lsrf	ModbusMasterTransaction@i,w
  9268  0215  00D2               	movwf	??_ModbusMasterTransaction
  9269  0216  01D3               	clrf	??_ModbusMasterTransaction+1
  9270  0217  35D2               	lslf	??_ModbusMasterTransaction,f
  9271  0218  0DD3               	rlf	??_ModbusMasterTransaction+1,f
  9272  0219  3070               	movlw	112
  9273  021A  00D4               	movwf	??_ModbusMasterTransaction+2
  9274  021B  3021               	movlw	33
  9275  021C  00D5               	movwf	??_ModbusMasterTransaction+3
  9276  021D  0852               	movf	??_ModbusMasterTransaction,w
  9277  021E  0754               	addwf	??_ModbusMasterTransaction+2,w
  9278  021F  0086               	movwf	6
  9279  0220  0853               	movf	??_ModbusMasterTransaction+1,w
  9280  0221  3D55               	addwfc	??_ModbusMasterTransaction+3,w
  9281  0222  0087               	movwf	7
  9282  0223  3F40               	moviw [0]fsr1
  9283  0224  00C8               	movwf	highByte@ww
  9284  0225  3F41               	moviw [1]fsr1
  9285  0226  00C9               	movwf	highByte@ww+1
  9286  0227  318C  24C3  3180   	fcall	_highByte
  9287  022A                     L9:	
  9288  022A  0020               	movlb	0	; select bank0
  9289  022B  00D6               	movwf	??_ModbusMasterTransaction+4
  9290  022C  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9291  022D  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9292  022E  0086               	movwf	6
  9293  022F  3001               	movlw	1	; select bank2/3
  9294  0230  0087               	movwf	7
  9295  0231  0856               	movf	??_ModbusMasterTransaction+4,w
  9296  0232  0081               	movwf	1
  9297  0233  3001               	movlw	1
  9298  0234  00D2               	movwf	??_ModbusMasterTransaction
  9299  0235  0852               	movf	??_ModbusMasterTransaction,w
  9300  0236  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9301  0237                     l5785:	
  9302                           ;ModbusMaster.c: 607: }
  9303                           
  9304                           ;ModbusMaster.c: 606: break;
  9305                           
  9306  0237  3001               	movlw	1
  9307  0238  00D2               	movwf	??_ModbusMasterTransaction
  9308  0239  0852               	movf	??_ModbusMasterTransaction,w
  9309  023A  07E3               	addwf	ModbusMasterTransaction@i,f
  9310  023B                     l5787:	
  9311  023B  085D               	movf	ModbusMasterTransaction@u8Qty,w
  9312  023C  0263               	subwf	ModbusMasterTransaction@i,w
  9313  023D  1803               	btfsc	3,0
  9314  023E  2B5B               	goto	l5825
  9315  023F  0863               	movf	ModbusMasterTransaction@i,w
  9316  0240  3901               	andlw	1
  9317  0241  00D2               	movwf	??_ModbusMasterTransaction
  9318  0242  01D3               	clrf	??_ModbusMasterTransaction+1
  9319                           
  9320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9321                           ; Switch size 1, requested type "space"
  9322                           ; Number of cases is 1, Range of values is 0 to 0
  9323                           ; switch strategies available:
  9324                           ; Name         Instructions Cycles
  9325                           ; simple_byte            4     3 (average)
  9326                           ; direct_byte            8     6 (fixed)
  9327                           ; jumptable            260     6 (fixed)
  9328                           ;	Chosen strategy is simple_byte
  9329  0243  0853               	movf	??_ModbusMasterTransaction+1,w
  9330  0244  3A00               	xorlw	0	; case 0
  9331  0245  1903               	skipnz
  9332  0246  2A48               	goto	l6203
  9333  0247  2A37               	goto	l5785
  9334  0248                     l6203:	
  9335                           
  9336                           ; Switch size 1, requested type "space"
  9337                           ; Number of cases is 2, Range of values is 0 to 1
  9338                           ; switch strategies available:
  9339                           ; Name         Instructions Cycles
  9340                           ; simple_byte            7     4 (average)
  9341                           ; direct_byte           10     6 (fixed)
  9342                           ; jumptable            260     6 (fixed)
  9343                           ;	Chosen strategy is simple_byte
  9344  0248  0852               	movf	??_ModbusMasterTransaction,w
  9345  0249  3A00               	xorlw	0	; case 0
  9346  024A  1903               	skipnz
  9347  024B  29FD               	goto	l5773
  9348  024C  3A01               	xorlw	1	; case 1
  9349  024D  1903               	skipnz
  9350  024E  2A14               	goto	l5777
  9351  024F  2A37               	goto	l5785
  9352  0250  2A37               	goto	l5785
  9353  0251                     l5789:	
  9354                           ;ModbusMaster.c: 611: case 0x10:
  9355                           
  9356                           ;ModbusMaster.c: 608: }
  9357                           ;ModbusMaster.c: 609: break;
  9358                           
  9359                           
  9360                           ;ModbusMaster.c: 612: case 0x17:
  9361                           ;ModbusMaster.c: 613: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16WriteQty);
  9362  0251  082D               	movf	__u16WriteQty+1,w
  9363  0252  00C9               	movwf	highByte@ww+1
  9364  0253  082C               	movf	__u16WriteQty,w
  9365  0254  00C8               	movwf	highByte@ww
  9366  0255  318C  24C3  3180   	fcall	_highByte
  9367  0258  0020               	movlb	0	; select bank0
  9368  0259  00D2               	movwf	??_ModbusMasterTransaction
  9369  025A  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9370  025B  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9371  025C  0086               	movwf	6
  9372  025D  3001               	movlw	1	; select bank2/3
  9373  025E  0087               	movwf	7
  9374  025F  0852               	movf	??_ModbusMasterTransaction,w
  9375  0260  0081               	movwf	1
  9376  0261  3001               	movlw	1
  9377  0262  00D2               	movwf	??_ModbusMasterTransaction
  9378  0263  0852               	movf	??_ModbusMasterTransaction,w
  9379  0264  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9380                           
  9381                           ;ModbusMaster.c: 614: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16WriteQty);
  9382  0265  082D               	movf	__u16WriteQty+1,w
  9383  0266  00C9               	movwf	lowByte@ww+1
  9384  0267  082C               	movf	__u16WriteQty,w
  9385  0268  00C8               	movwf	lowByte@ww
  9386  0269  318C  24C6  3180   	fcall	_lowByte
  9387  026C  0020               	movlb	0	; select bank0
  9388  026D  00D2               	movwf	??_ModbusMasterTransaction
  9389  026E  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9390  026F  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9391  0270  0086               	movwf	6
  9392  0271  3001               	movlw	1	; select bank2/3
  9393  0272  0087               	movwf	7
  9394  0273  0852               	movf	??_ModbusMasterTransaction,w
  9395  0274  0081               	movwf	1
  9396  0275  3001               	movlw	1
  9397  0276  00D2               	movwf	??_ModbusMasterTransaction
  9398  0277  0852               	movf	??_ModbusMasterTransaction,w
  9399  0278  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9400                           
  9401                           ;ModbusMaster.c: 615: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16WriteQty << 1);
  9402  0279  352C               	lslf	__u16WriteQty,w
  9403  027A  00C8               	movwf	lowByte@ww
  9404  027B  0D2D               	rlf	__u16WriteQty+1,w
  9405  027C  00C9               	movwf	lowByte@ww+1
  9406  027D  318C  24C6  3180   	fcall	_lowByte
  9407  0280  0020               	movlb	0	; select bank0
  9408  0281  00D2               	movwf	??_ModbusMasterTransaction
  9409  0282  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9410  0283  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9411  0284  0086               	movwf	6
  9412  0285  3001               	movlw	1	; select bank2/3
  9413  0286  0087               	movwf	7
  9414  0287  0852               	movf	??_ModbusMasterTransaction,w
  9415  0288  0081               	movwf	1
  9416  0289  3001               	movlw	1
  9417  028A  00D2               	movwf	??_ModbusMasterTransaction
  9418  028B  0852               	movf	??_ModbusMasterTransaction,w
  9419  028C  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9420                           
  9421                           ;ModbusMaster.c: 617: for (i = 0; i < lowByte(_u16WriteQty); i++)
  9422  028D  01E3               	clrf	ModbusMasterTransaction@i
  9423  028E                     l5807:	
  9424  028E  082D               	movf	__u16WriteQty+1,w
  9425  028F  00C9               	movwf	lowByte@ww+1
  9426  0290  082C               	movf	__u16WriteQty,w
  9427  0291  00C8               	movwf	lowByte@ww
  9428  0292  318C  24C6  3180   	fcall	_lowByte
  9429  0295  0020               	movlb	0	; select bank0
  9430  0296  0263               	subwf	ModbusMasterTransaction@i,w
  9431  0297  1803               	btfsc	3,0
  9432  0298  2B5B               	goto	l5825
  9433                           
  9434                           ;ModbusMaster.c: 618: {
  9435                           ;ModbusMaster.c: 619: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16TransmitBuffer[i]);
  9436  0299  0863               	movf	ModbusMasterTransaction@i,w
  9437  029A  00D2               	movwf	??_ModbusMasterTransaction
  9438  029B  01D3               	clrf	??_ModbusMasterTransaction+1
  9439  029C  35D2               	lslf	??_ModbusMasterTransaction,f
  9440  029D  0DD3               	rlf	??_ModbusMasterTransaction+1,f
  9441  029E  3070               	movlw	112
  9442  029F  00D4               	movwf	??_ModbusMasterTransaction+2
  9443  02A0  3021               	movlw	33
  9444  02A1  00D5               	movwf	??_ModbusMasterTransaction+3
  9445  02A2  0852               	movf	??_ModbusMasterTransaction,w
  9446  02A3  0754               	addwf	??_ModbusMasterTransaction+2,w
  9447  02A4  0086               	movwf	6
  9448  02A5  0853               	movf	??_ModbusMasterTransaction+1,w
  9449  02A6  3D55               	addwfc	??_ModbusMasterTransaction+3,w
  9450  02A7  0087               	movwf	7
  9451  02A8  3F40               	moviw [0]fsr1
  9452  02A9  00C8               	movwf	highByte@ww
  9453  02AA  3F41               	moviw [1]fsr1
  9454  02AB  00C9               	movwf	highByte@ww+1
  9455  02AC  318C  24C3  3180   	fcall	_highByte
  9456  02AF  0020               	movlb	0	; select bank0
  9457  02B0  00D6               	movwf	??_ModbusMasterTransaction+4
  9458  02B1  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9459  02B2  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9460  02B3  0086               	movwf	6
  9461  02B4  3001               	movlw	1	; select bank2/3
  9462  02B5  0087               	movwf	7
  9463  02B6  0856               	movf	??_ModbusMasterTransaction+4,w
  9464  02B7  0081               	movwf	1
  9465  02B8  3001               	movlw	1
  9466  02B9  00D2               	movwf	??_ModbusMasterTransaction
  9467  02BA  0852               	movf	??_ModbusMasterTransaction,w
  9468  02BB  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9469                           
  9470                           ;ModbusMaster.c: 620: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16TransmitBuffer[i]);
  9471  02BC  0863               	movf	ModbusMasterTransaction@i,w
  9472  02BD  00D2               	movwf	??_ModbusMasterTransaction
  9473  02BE  01D3               	clrf	??_ModbusMasterTransaction+1
  9474  02BF  35D2               	lslf	??_ModbusMasterTransaction,f
  9475  02C0  0DD3               	rlf	??_ModbusMasterTransaction+1,f
  9476  02C1  3070               	movlw	112
  9477  02C2  00D4               	movwf	??_ModbusMasterTransaction+2
  9478  02C3  3021               	movlw	33
  9479  02C4  00D5               	movwf	??_ModbusMasterTransaction+3
  9480  02C5  0852               	movf	??_ModbusMasterTransaction,w
  9481  02C6  0754               	addwf	??_ModbusMasterTransaction+2,w
  9482  02C7  0086               	movwf	6
  9483  02C8  0853               	movf	??_ModbusMasterTransaction+1,w
  9484  02C9  3D55               	addwfc	??_ModbusMasterTransaction+3,w
  9485  02CA  0087               	movwf	7
  9486  02CB  3F40               	moviw [0]fsr1
  9487  02CC  00C8               	movwf	lowByte@ww
  9488  02CD  3F41               	moviw [1]fsr1
  9489  02CE  00C9               	movwf	lowByte@ww+1
  9490  02CF  318C  24C6  3180   	fcall	_lowByte
  9491  02D2  0020               	movlb	0	; select bank0
  9492  02D3  00D6               	movwf	??_ModbusMasterTransaction+4
  9493  02D4  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9494  02D5  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9495  02D6  0086               	movwf	6
  9496  02D7  3001               	movlw	1	; select bank2/3
  9497  02D8  0087               	movwf	7
  9498  02D9  0856               	movf	??_ModbusMasterTransaction+4,w
  9499  02DA  0081               	movwf	1
  9500  02DB  3001               	movlw	1
  9501  02DC  00D2               	movwf	??_ModbusMasterTransaction
  9502  02DD  0852               	movf	??_ModbusMasterTransaction,w
  9503  02DE  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9504  02DF  3001               	movlw	1
  9505  02E0  00D2               	movwf	??_ModbusMasterTransaction
  9506  02E1  0852               	movf	??_ModbusMasterTransaction,w
  9507  02E2  07E3               	addwf	ModbusMasterTransaction@i,f
  9508  02E3  2A8E               	goto	l5807
  9509  02E4                     l5809:	
  9510                           ;ModbusMaster.c: 624: case 0x16:
  9511                           
  9512                           ;ModbusMaster.c: 621: }
  9513                           ;ModbusMaster.c: 622: break;
  9514                           
  9515                           
  9516                           ;ModbusMaster.c: 625: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16TransmitBuffer[0]);
  9517  02E4  3070               	movlw	112
  9518  02E5  0086               	movwf	6
  9519  02E6  3021               	movlw	33
  9520  02E7  0087               	movwf	7
  9521  02E8  3F40               	moviw [0]fsr1
  9522  02E9  00C8               	movwf	highByte@ww
  9523  02EA  3F41               	moviw [1]fsr1
  9524  02EB  00C9               	movwf	highByte@ww+1
  9525  02EC  318C  24C3  3180   	fcall	_highByte
  9526  02EF  0020               	movlb	0	; select bank0
  9527  02F0  00D2               	movwf	??_ModbusMasterTransaction
  9528  02F1  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9529  02F2  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9530  02F3  0086               	movwf	6
  9531  02F4  3001               	movlw	1	; select bank2/3
  9532  02F5  0087               	movwf	7
  9533  02F6  0852               	movf	??_ModbusMasterTransaction,w
  9534  02F7  0081               	movwf	1
  9535  02F8  3001               	movlw	1
  9536  02F9  00D2               	movwf	??_ModbusMasterTransaction
  9537  02FA  0852               	movf	??_ModbusMasterTransaction,w
  9538  02FB  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9539                           
  9540                           ;ModbusMaster.c: 626: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16TransmitBuffer[0]);
  9541  02FC  3070               	movlw	112
  9542  02FD  0086               	movwf	6
  9543  02FE  3021               	movlw	33
  9544  02FF  0087               	movwf	7
  9545  0300  3F40               	moviw [0]fsr1
  9546  0301  00C8               	movwf	lowByte@ww
  9547  0302  3F41               	moviw [1]fsr1
  9548  0303  00C9               	movwf	lowByte@ww+1
  9549  0304  318C  24C6  3180   	fcall	_lowByte
  9550  0307  0020               	movlb	0	; select bank0
  9551  0308  00D2               	movwf	??_ModbusMasterTransaction
  9552  0309  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9553  030A  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9554  030B  0086               	movwf	6
  9555  030C  3001               	movlw	1	; select bank2/3
  9556  030D  0087               	movwf	7
  9557  030E  0852               	movf	??_ModbusMasterTransaction,w
  9558  030F  0081               	movwf	1
  9559  0310  3001               	movlw	1
  9560  0311  00D2               	movwf	??_ModbusMasterTransaction
  9561  0312  0852               	movf	??_ModbusMasterTransaction,w
  9562  0313  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9563                           
  9564                           ;ModbusMaster.c: 627: u8ModbusADU[u8ModbusADUSize++] = highByte(_u16TransmitBuffer[1]);
  9565  0314  3070               	movlw	112
  9566  0315  0086               	movwf	6
  9567  0316  3021               	movlw	33
  9568  0317  0087               	movwf	7
  9569  0318  3142               	addfsr 1,2
  9570  0319  3F40               	moviw [0]fsr1
  9571  031A  00C8               	movwf	highByte@ww
  9572  031B  3F41               	moviw [1]fsr1
  9573  031C  00C9               	movwf	highByte@ww+1
  9574  031D  318C  24C3  3180   	fcall	_highByte
  9575  0320  0020               	movlb	0	; select bank0
  9576  0321  00D2               	movwf	??_ModbusMasterTransaction
  9577  0322  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9578  0323  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9579  0324  0086               	movwf	6
  9580  0325  3001               	movlw	1	; select bank2/3
  9581  0326  0087               	movwf	7
  9582  0327  0852               	movf	??_ModbusMasterTransaction,w
  9583  0328  0081               	movwf	1
  9584  0329  3001               	movlw	1
  9585  032A  00D2               	movwf	??_ModbusMasterTransaction
  9586  032B  0852               	movf	??_ModbusMasterTransaction,w
  9587  032C  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9588                           
  9589                           ;ModbusMaster.c: 628: u8ModbusADU[u8ModbusADUSize++] = lowByte(_u16TransmitBuffer[1]);
  9590  032D  3070               	movlw	112
  9591  032E  0086               	movwf	6
  9592  032F  3021               	movlw	33
  9593  0330  0087               	movwf	7
  9594  0331  3142               	addfsr 1,2
  9595  0332  3F40               	moviw [0]fsr1
  9596  0333  00C8               	movwf	lowByte@ww
  9597  0334  3F41               	moviw [1]fsr1
  9598  0335                     L10:	
  9599  0335  00C9               	movwf	lowByte@ww+1
  9600  0336                     L8:	
  9601  0336  318C  24C6  3180   	fcall	_lowByte
  9602  0339  0020               	movlb	0	; select bank0
  9603  033A  00D2               	movwf	??_ModbusMasterTransaction
  9604  033B  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9605  033C  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9606  033D  0086               	movwf	6
  9607  033E  3001               	movlw	1	; select bank2/3
  9608  033F  0087               	movwf	7
  9609  0340  0852               	movf	??_ModbusMasterTransaction,w
  9610  0341  0081               	movwf	1
  9611  0342  3001               	movlw	1
  9612  0343  00D2               	movwf	??_ModbusMasterTransaction
  9613  0344  0852               	movf	??_ModbusMasterTransaction,w
  9614  0345  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9615                           
  9616                           ;ModbusMaster.c: 630: }
  9617                           
  9618                           ;ModbusMaster.c: 629: break;
  9619  0346  2B5B               	goto	l5825
  9620  0347                     l5823:	
  9621  0347  085F               	movf	ModbusMasterTransaction@u8MBFunction,w
  9622                           
  9623                           ; Switch size 1, requested type "space"
  9624                           ; Number of cases is 6, Range of values is 5 to 23
  9625                           ; switch strategies available:
  9626                           ; Name         Instructions Cycles
  9627                           ; simple_byte           19    10 (average)
  9628                           ; direct_byte           47     9 (fixed)
  9629                           ; jumptable            263     9 (fixed)
  9630                           ;	Chosen strategy is simple_byte
  9631  0348  3A05               	xorlw	5	; case 5
  9632  0349  1903               	skipnz
  9633  034A  2961               	goto	l5743
  9634  034B  3A03               	xorlw	3	; case 6
  9635  034C  1903               	skipnz
  9636  034D  297A               	goto	l5749
  9637  034E  3A09               	xorlw	9	; case 15
  9638  034F  1903               	skipnz
  9639  0350  299A               	goto	l5755
  9640  0351  3A1F               	xorlw	31	; case 16
  9641  0352  1903               	skipnz
  9642  0353  2A51               	goto	l5789
  9643  0354  3A06               	xorlw	6	; case 22
  9644  0355  1903               	skipnz
  9645  0356  2AE4               	goto	l5809
  9646  0357  3A01               	xorlw	1	; case 23
  9647  0358  1903               	skipnz
  9648  0359  2A51               	goto	l5789
  9649  035A  2B5B               	goto	l5825
  9650  035B                     l5825:	
  9651                           
  9652                           ;ModbusMaster.c: 651: u16CRC = 0xFFFF;
  9653  035B  30FF               	movlw	255
  9654  035C  00E1               	movwf	ModbusMasterTransaction@u16CRC
  9655  035D  30FF               	movlw	255
  9656  035E  00E2               	movwf	ModbusMasterTransaction@u16CRC+1
  9657                           
  9658                           ;ModbusMaster.c: 652: for (i = 0; i < u8ModbusADUSize; i++)
  9659  035F  01E3               	clrf	ModbusMasterTransaction@i
  9660  0360                     l5833:	
  9661  0360  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9662  0361  0263               	subwf	ModbusMasterTransaction@i,w
  9663  0362  1803               	btfsc	3,0
  9664  0363  2B7E               	goto	l5835
  9665                           
  9666                           ;ModbusMaster.c: 653: {
  9667                           ;ModbusMaster.c: 654: u16CRC = crc16_update(u16CRC, u8ModbusADU[i]);
  9668  0364  0862               	movf	ModbusMasterTransaction@u16CRC+1,w
  9669  0365  00C9               	movwf	crc16_update@crc+1
  9670  0366  0861               	movf	ModbusMasterTransaction@u16CRC,w
  9671  0367  00C8               	movwf	crc16_update@crc
  9672  0368  0863               	movf	ModbusMasterTransaction@i,w
  9673  0369  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9674  036A  0086               	movwf	6
  9675  036B  3001               	movlw	1	; select bank2/3
  9676  036C  0087               	movwf	7
  9677  036D  0801               	movf	1,w
  9678  036E  00D2               	movwf	??_ModbusMasterTransaction
  9679  036F  0852               	movf	??_ModbusMasterTransaction,w
  9680  0370  00CA               	movwf	crc16_update@a
  9681  0371  3187  2782  3180   	fcall	_crc16_update
  9682  0374  0020               	movlb	0	; select bank0
  9683  0375  0849               	movf	?_crc16_update+1,w
  9684  0376  00E2               	movwf	ModbusMasterTransaction@u16CRC+1
  9685  0377  0848               	movf	?_crc16_update,w
  9686  0378  00E1               	movwf	ModbusMasterTransaction@u16CRC
  9687  0379  3001               	movlw	1
  9688  037A  00D2               	movwf	??_ModbusMasterTransaction
  9689  037B  0852               	movf	??_ModbusMasterTransaction,w
  9690  037C  07E3               	addwf	ModbusMasterTransaction@i,f
  9691  037D  2B60               	goto	l5833
  9692  037E                     l5835:	
  9693                           
  9694                           ;ModbusMaster.c: 655: }
  9695                           ;ModbusMaster.c: 656: u8ModbusADU[u8ModbusADUSize++] = lowByte(u16CRC);
  9696  037E  0862               	movf	ModbusMasterTransaction@u16CRC+1,w
  9697  037F  00C9               	movwf	lowByte@ww+1
  9698  0380  0861               	movf	ModbusMasterTransaction@u16CRC,w
  9699  0381  00C8               	movwf	lowByte@ww
  9700  0382  318C  24C6  3180   	fcall	_lowByte
  9701  0385  0020               	movlb	0	; select bank0
  9702  0386  00D2               	movwf	??_ModbusMasterTransaction
  9703  0387  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9704  0388  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9705  0389  0086               	movwf	6
  9706  038A  3001               	movlw	1	; select bank2/3
  9707  038B  0087               	movwf	7
  9708  038C  0852               	movf	??_ModbusMasterTransaction,w
  9709  038D  0081               	movwf	1
  9710  038E  3001               	movlw	1
  9711  038F  00D2               	movwf	??_ModbusMasterTransaction
  9712  0390  0852               	movf	??_ModbusMasterTransaction,w
  9713  0391  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9714                           
  9715                           ;ModbusMaster.c: 657: u8ModbusADU[u8ModbusADUSize++] = highByte(u16CRC);
  9716  0392  0862               	movf	ModbusMasterTransaction@u16CRC+1,w
  9717  0393  00C9               	movwf	highByte@ww+1
  9718  0394  0861               	movf	ModbusMasterTransaction@u16CRC,w
  9719  0395  00C8               	movwf	highByte@ww
  9720  0396  318C  24C3  3180   	fcall	_highByte
  9721  0399  0020               	movlb	0	; select bank0
  9722  039A  00D2               	movwf	??_ModbusMasterTransaction
  9723  039B  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9724  039C  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9725  039D  0086               	movwf	6
  9726  039E  3001               	movlw	1	; select bank2/3
  9727  039F  0087               	movwf	7
  9728  03A0  0852               	movf	??_ModbusMasterTransaction,w
  9729  03A1  0081               	movwf	1
  9730  03A2  3001               	movlw	1
  9731  03A3  00D2               	movwf	??_ModbusMasterTransaction
  9732  03A4  0852               	movf	??_ModbusMasterTransaction,w
  9733  03A5  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9734                           
  9735                           ;ModbusMaster.c: 658: u8ModbusADU[u8ModbusADUSize++] = '\r';
  9736  03A6  300D               	movlw	13
  9737  03A7  00D2               	movwf	??_ModbusMasterTransaction
  9738  03A8  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9739  03A9  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9740  03AA  0086               	movwf	6
  9741  03AB  3001               	movlw	1	; select bank2/3
  9742  03AC  0087               	movwf	7
  9743  03AD  0852               	movf	??_ModbusMasterTransaction,w
  9744  03AE  0081               	movwf	1
  9745  03AF  3001               	movlw	1
  9746  03B0  00D2               	movwf	??_ModbusMasterTransaction
  9747  03B1  0852               	movf	??_ModbusMasterTransaction,w
  9748  03B2  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9749                           
  9750                           ;ModbusMaster.c: 659: u8ModbusADU[u8ModbusADUSize] = '\n';
  9751  03B3  300A               	movlw	10
  9752  03B4  00D2               	movwf	??_ModbusMasterTransaction
  9753  03B5  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9754  03B6  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9755  03B7  0086               	movwf	6
  9756  03B8  3001               	movlw	1	; select bank2/3
  9757  03B9  0087               	movwf	7
  9758  03BA  0852               	movf	??_ModbusMasterTransaction,w
  9759  03BB  0081               	movwf	1
  9760                           
  9761                           ;ModbusMaster.c: 666: if (_preTransmission)
  9762  03BC  082A               	movf	__preTransmission,w
  9763  03BD  042B               	iorwf	__preTransmission+1,w
  9764  03BE  1903               	btfsc	3,2
  9765  03BF  2BC5               	goto	l5849
  9766                           
  9767                           ;ModbusMaster.c: 667: {
  9768                           ;ModbusMaster.c: 668: _preTransmission();
  9769  03C0  082B               	movf	__preTransmission+1,w
  9770  03C1  008A               	movwf	10
  9771  03C2  082A               	movf	__preTransmission,w
  9772  03C3  000A               	callw
  9773  03C4  3180               	pagesel	$
  9774  03C5                     l5849:	
  9775                           
  9776                           ;ModbusMaster.c: 669: }
  9777                           ;ModbusMaster.c: 670: for (i = 0; i < u8ModbusADUSize; i++)
  9778  03C5  0020               	movlb	0	; select bank0
  9779  03C6  01E3               	clrf	ModbusMasterTransaction@i
  9780  03C7                     l5857:	
  9781  03C7  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9782  03C8  0263               	subwf	ModbusMasterTransaction@i,w
  9783  03C9  1803               	btfsc	3,0
  9784  03CA  2BE0               	goto	l977
  9785                           
  9786                           ;ModbusMaster.c: 671: {
  9787                           ;ModbusMaster.c: 672: EUSART_Write(u8ModbusADU[i]);
  9788  03CB  0863               	movf	ModbusMasterTransaction@i,w
  9789  03CC  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9790  03CD  0086               	movwf	6
  9791  03CE  3001               	movlw	1	; select bank2/3
  9792  03CF  0087               	movwf	7
  9793  03D0  0801               	movf	1,w
  9794  03D1  318D  2501  3180   	fcall	_EUSART_Write
  9795                           
  9796                           ;ModbusMaster.c: 673: u8ModbusADU[i]=0;
  9797  03D4  0020               	movlb	0	; select bank0
  9798  03D5  0863               	movf	ModbusMasterTransaction@i,w
  9799  03D6  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9800  03D7  0086               	movwf	6
  9801  03D8  3001               	movlw	1	; select bank2/3
  9802  03D9  0087               	movwf	7
  9803  03DA  0181               	clrf	1
  9804  03DB  3001               	movlw	1
  9805  03DC  00D2               	movwf	??_ModbusMasterTransaction
  9806  03DD  0852               	movf	??_ModbusMasterTransaction,w
  9807  03DE  07E3               	addwf	ModbusMasterTransaction@i,f
  9808  03DF  2BC7               	goto	l5857
  9809  03E0                     l977:	
  9810                           
  9811                           ;ModbusMaster.c: 675: }
  9812                           ;ModbusMaster.c: 676: if(PIR1bits.RCIF){PIR1bits.RCIF=0;}
  9813  03E0  1A91               	btfsc	17,5	;volatile
  9814  03E1  1291               	bcf	17,5	;volatile
  9815                           
  9816                           ;ModbusMaster.c: 677: u8ModbusADUSize = 0;
  9817  03E2  01E4               	clrf	ModbusMasterTransaction@u8ModbusADUSize
  9818  03E3                     l979:	
  9819                           ;ModbusMaster.c: 680: {
  9820                           
  9821                           ;ModbusMaster.c: 679: while(0 == PIR1bits.TXIF)
  9822                           
  9823  03E3  1E11               	btfss	17,4	;volatile
  9824  03E4  2BE3               	goto	l979
  9825                           
  9826                           ;ModbusMaster.c: 681: }
  9827                           ;ModbusMaster.c: 683: if (_postTransmission)
  9828  03E5  0828               	movf	__postTransmission,w
  9829  03E6  0429               	iorwf	__postTransmission+1,w
  9830  03E7  1903               	btfsc	3,2
  9831  03E8  2BEE               	goto	l982
  9832                           
  9833                           ;ModbusMaster.c: 684: {
  9834                           ;ModbusMaster.c: 685: _postTransmission();
  9835  03E9  0829               	movf	__postTransmission+1,w
  9836  03EA  008A               	movwf	10
  9837  03EB  0828               	movf	__postTransmission,w
  9838  03EC  000A               	callw
  9839  03ED  3180               	pagesel	$
  9840  03EE                     l982:	
  9841                           
  9842                           ;ModbusMaster.c: 686: }
  9843                           ;ModbusMaster.c: 689: millisReset();
  9844  03EE  318D  2574  3180   	fcall	_millisReset
  9845                           
  9846                           ;ModbusMaster.c: 691: u32StartTime = millis();
  9847  03F1  318E  2629  3180   	fcall	_millis
  9848  03F4  0020               	movlb	0	; select bank0
  9849  03F5  084B               	movf	?_millis+3,w
  9850  03F6  00DA               	movwf	ModbusMasterTransaction@u32StartTime+3
  9851  03F7  084A               	movf	?_millis+2,w
  9852  03F8  00D9               	movwf	ModbusMasterTransaction@u32StartTime+2
  9853  03F9  0849               	movf	?_millis+1,w
  9854  03FA  00D8               	movwf	ModbusMasterTransaction@u32StartTime+1
  9855  03FB  0848               	movf	?_millis,w
  9856  03FC  00D7               	movwf	ModbusMasterTransaction@u32StartTime
  9857                           
  9858                           ;ModbusMaster.c: 692: while (u8BytesLeft && !u8MBStatus)
  9859  03FD  2C90               	goto	l5903
  9860  03FE                     l5869:	
  9861                           
  9862                           ;ModbusMaster.c: 693: {
  9863                           ;ModbusMaster.c: 700: u8ModbusADU[u8ModbusADUSize++] = EUSART_Read();
  9864  03FE  318D  256A  3180   	fcall	_EUSART_Read
  9865  0401  0020               	movlb	0	; select bank0
  9866  0402  00D2               	movwf	??_ModbusMasterTransaction
  9867  0403  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
  9868  0404  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
  9869  0405  0086               	movwf	6
  9870  0406  3001               	movlw	1	; select bank2/3
  9871  0407  0087               	movwf	7
  9872  0408  0852               	movf	??_ModbusMasterTransaction,w
  9873  0409  0081               	movwf	1
  9874  040A  3001               	movlw	1
  9875  040B  00D2               	movwf	??_ModbusMasterTransaction
  9876  040C  0852               	movf	??_ModbusMasterTransaction,w
  9877  040D  07E4               	addwf	ModbusMasterTransaction@u8ModbusADUSize,f
  9878                           
  9879                           ;ModbusMaster.c: 701: u8BytesLeft--;
  9880  040E  3001               	movlw	1
  9881  040F  02DE               	subwf	ModbusMasterTransaction@u8BytesLeft,f
  9882                           
  9883                           ;ModbusMaster.c: 721: if (u8ModbusADUSize == 2)
  9884  0410  3002               	movlw	2
  9885  0411  0664               	xorwf	ModbusMasterTransaction@u8ModbusADUSize,w
  9886  0412  1D03               	btfss	3,2
  9887  0413  2C64               	goto	l5899
  9888                           
  9889                           ;ModbusMaster.c: 722: {
  9890                           ;ModbusMaster.c: 724: if (u8ModbusADU[0] != _u8MBSlave)
  9891  0414  0022               	movlb	2	; select bank2
  9892  0415  0820               	movf	_u8ModbusADU^(0+256),w
  9893  0416  0020               	movlb	0	; select bank0
  9894  0417  0640               	xorwf	__u8MBSlave,w
  9895  0418  1903               	skipnz
  9896  0419  2C1C               	goto	l5881
  9897                           
  9898                           ;ModbusMaster.c: 725: {
  9899                           ;ModbusMaster.c: 726: u8MBStatus = 0xE0;
  9900  041A  30E0               	movlw	224
  9901  041B  2C34               	goto	L4
  9902  041C                     l5881:	
  9903                           ;ModbusMaster.c: 727: break;
  9904                           
  9905                           
  9906                           ;ModbusMaster.c: 728: }
  9907                           ;ModbusMaster.c: 731: if ((u8ModbusADU[1] & 0x7F) != u8MBFunction)
  9908  041C  307F               	movlw	127
  9909  041D  0022               	movlb	2	; select bank2
  9910  041E  0521               	andwf	(_u8ModbusADU^(0+256)+1),w
  9911  041F  0020               	movlb	0	; select bank0
  9912  0420  00D2               	movwf	??_ModbusMasterTransaction
  9913  0421  0852               	movf	??_ModbusMasterTransaction,w
  9914  0422  065F               	xorwf	ModbusMasterTransaction@u8MBFunction,w
  9915  0423  1903               	skipnz
  9916  0424  2C27               	goto	l5885
  9917                           
  9918                           ;ModbusMaster.c: 732: {
  9919                           ;ModbusMaster.c: 733: u8MBStatus = 0xE1;
  9920  0425  30E1               	movlw	225
  9921  0426  2C34               	goto	L4
  9922  0427                     l5885:	
  9923                           ;ModbusMaster.c: 734: break;
  9924                           
  9925                           
  9926                           ;ModbusMaster.c: 735: }
  9927                           ;ModbusMaster.c: 738: if ((((u8ModbusADU[1]) >> (7)) & 0x01))
  9928  0427  0022               	movlb	2	; select bank2
  9929  0428  0821               	movf	(_u8ModbusADU^(0+256)+1),w
  9930  0429  0020               	movlb	0	; select bank0
  9931  042A  00D2               	movwf	??_ModbusMasterTransaction
  9932  042B  3007               	movlw	7
  9933  042C                     u4525:	
  9934  042C  36D2               	lsrf	??_ModbusMasterTransaction,f
  9935  042D  0B89               	decfsz	9,f
  9936  042E  2C2C               	goto	u4525
  9937  042F  1C52               	btfss	??_ModbusMasterTransaction,0
  9938  0430  2C43               	goto	l5897
  9939                           
  9940                           ;ModbusMaster.c: 739: {
  9941                           ;ModbusMaster.c: 740: u8MBStatus = u8ModbusADU[2];
  9942  0431  0022               	movlb	2	; select bank2
  9943  0432  0822               	movf	(_u8ModbusADU^(0+256)+2),w
  9944  0433  0020               	movlb	0	; select bank0
  9945  0434                     L4:	
  9946  0434  00D2               	movwf	??_ModbusMasterTransaction
  9947  0435  0852               	movf	??_ModbusMasterTransaction,w
  9948  0436  00E0               	movwf	ModbusMasterTransaction@u8MBStatus
  9949                           
  9950                           ;ModbusMaster.c: 741: break;
  9951  0437  2C96               	goto	l5907
  9952  0438                     l5889:	
  9953                           ;ModbusMaster.c: 746: {
  9954                           ;ModbusMaster.c: 747: case 0x01:
  9955                           
  9956                           ;ModbusMaster.c: 742: }
  9957                           ;ModbusMaster.c: 745: switch(u8ModbusADU[1])
  9958                           
  9959                           
  9960                           ;ModbusMaster.c: 748: case 0x02:
  9961                           ;ModbusMaster.c: 749: case 0x04:
  9962                           ;ModbusMaster.c: 750: case 0x03:
  9963                           ;ModbusMaster.c: 751: case 0x17:
  9964                           ;ModbusMaster.c: 752: u8BytesLeft = u8ModbusADU[2];
  9965  0438  0022               	movlb	2	; select bank2
  9966  0439  0822               	movf	(_u8ModbusADU^(0+256)+2),w
  9967  043A  2C3E               	goto	L6
  9968  043B                     l5891:	
  9969                           ;ModbusMaster.c: 755: case 0x05:
  9970                           
  9971                           ;ModbusMaster.c: 753: break;
  9972                           
  9973                           
  9974                           ;ModbusMaster.c: 756: case 0x0F:
  9975                           ;ModbusMaster.c: 757: case 0x06:
  9976                           ;ModbusMaster.c: 758: case 0x10:
  9977                           ;ModbusMaster.c: 759: u8BytesLeft = 3;
  9978  043B  3003               	movlw	3
  9979  043C  2C3E               	goto	L6
  9980  043D                     l5893:	
  9981                           ;ModbusMaster.c: 762: case 0x16:
  9982                           
  9983                           ;ModbusMaster.c: 760: break;
  9984                           
  9985                           
  9986                           ;ModbusMaster.c: 763: u8BytesLeft = 5;
  9987  043D  3005               	movlw	5
  9988  043E                     L6:	
  9989  043E  0020               	movlb	0	; select bank0
  9990  043F  00D2               	movwf	??_ModbusMasterTransaction
  9991  0440  0852               	movf	??_ModbusMasterTransaction,w
  9992  0441  00DE               	movwf	ModbusMasterTransaction@u8BytesLeft
  9993                           
  9994                           ;ModbusMaster.c: 765: }
  9995                           
  9996                           ;ModbusMaster.c: 764: break;
  9997  0442  2C64               	goto	l5899
  9998  0443                     l5897:	
  9999  0443  0022               	movlb	2	; select bank2
 10000  0444  0821               	movf	(_u8ModbusADU^(0+256)+1),w
 10001                           
 10002                           ; Switch size 1, requested type "space"
 10003                           ; Number of cases is 10, Range of values is 1 to 23
 10004                           ; switch strategies available:
 10005                           ; Name         Instructions Cycles
 10006                           ; simple_byte           31    16 (average)
 10007                           ; direct_byte           55     9 (fixed)
 10008                           ; jumptable            263     9 (fixed)
 10009                           ;	Chosen strategy is simple_byte
 10010  0445  3A01               	xorlw	1	; case 1
 10011  0446  1903               	skipnz
 10012  0447  2C38               	goto	l5889
 10013  0448  3A03               	xorlw	3	; case 2
 10014  0449  1903               	skipnz
 10015  044A  2C38               	goto	l5889
 10016  044B  3A01               	xorlw	1	; case 3
 10017  044C  1903               	skipnz
 10018  044D  2C38               	goto	l5889
 10019  044E  3A07               	xorlw	7	; case 4
 10020  044F  1903               	skipnz
 10021  0450  2C38               	goto	l5889
 10022  0451  3A01               	xorlw	1	; case 5
 10023  0452  1903               	skipnz
 10024  0453  2C3B               	goto	l5891
 10025  0454  3A03               	xorlw	3	; case 6
 10026  0455  1903               	skipnz
 10027  0456  2C3B               	goto	l5891
 10028  0457  3A09               	xorlw	9	; case 15
 10029  0458  1903               	skipnz
 10030  0459  2C3B               	goto	l5891
 10031  045A  3A1F               	xorlw	31	; case 16
 10032  045B  1903               	skipnz
 10033  045C  2C3B               	goto	l5891
 10034  045D  3A06               	xorlw	6	; case 22
 10035  045E  1903               	skipnz
 10036  045F  2C3D               	goto	l5893
 10037  0460  3A01               	xorlw	1	; case 23
 10038  0461  1903               	skipnz
 10039  0462  2C38               	goto	l5889
 10040  0463  2C64               	goto	l5899
 10041  0464                     l5899:	
 10042                           
 10043                           ;ModbusMaster.c: 766: }
 10044                           ;ModbusMaster.c: 767: if ((millis() - u32StartTime) > 2000)
 10045  0464  0020               	movlb	0	; select bank0
 10046  0465  0957               	comf	ModbusMasterTransaction@u32StartTime,w
 10047  0466  00D2               	movwf	??_ModbusMasterTransaction
 10048  0467  0958               	comf	ModbusMasterTransaction@u32StartTime+1,w
 10049  0468  00D3               	movwf	??_ModbusMasterTransaction+1
 10050  0469  0959               	comf	ModbusMasterTransaction@u32StartTime+2,w
 10051  046A  00D4               	movwf	??_ModbusMasterTransaction+2
 10052  046B  095A               	comf	ModbusMasterTransaction@u32StartTime+3,w
 10053  046C  00D5               	movwf	??_ModbusMasterTransaction+3
 10054  046D  0AD2               	incf	??_ModbusMasterTransaction,f
 10055  046E  1903               	skipnz
 10056  046F  0AD3               	incf	??_ModbusMasterTransaction+1,f
 10057  0470  1903               	skipnz
 10058  0471  0AD4               	incf	??_ModbusMasterTransaction+2,f
 10059  0472  1903               	skipnz
 10060  0473  0AD5               	incf	??_ModbusMasterTransaction+3,f
 10061  0474  318E  2629  3180   	fcall	_millis
 10062  0477  0020               	movlb	0	; select bank0
 10063  0478  0848               	movf	?_millis,w
 10064  0479  07D2               	addwf	??_ModbusMasterTransaction,f
 10065  047A  0849               	movf	?_millis+1,w
 10066  047B  3DD3               	addwfc	??_ModbusMasterTransaction+1,f
 10067  047C  084A               	movf	?_millis+2,w
 10068  047D  3DD4               	addwfc	??_ModbusMasterTransaction+2,f
 10069  047E  084B               	movf	?_millis+3,w
 10070  047F  3DD5               	addwfc	??_ModbusMasterTransaction+3,f
 10071  0480  0855               	movf	??_ModbusMasterTransaction+3,w
 10072  0481  1D03               	btfss	3,2
 10073  0482  2C8C               	goto	l5901
 10074  0483  0854               	movf	??_ModbusMasterTransaction+2,w
 10075  0484  1D03               	btfss	3,2
 10076  0485  2C8C               	goto	l5901
 10077  0486  30D1               	movlw	209
 10078  0487  0252               	subwf	??_ModbusMasterTransaction,w
 10079  0488  3007               	movlw	7
 10080  0489  3B53               	subwfb	??_ModbusMasterTransaction+1,w
 10081  048A  1C03               	btfss	3,0
 10082  048B  2C90               	goto	l5903
 10083  048C                     l5901:	
 10084                           
 10085                           ;ModbusMaster.c: 768: {
 10086                           ;ModbusMaster.c: 769: u8MBStatus = 0xE2;
 10087  048C  30E2               	movlw	226
 10088  048D  00D2               	movwf	??_ModbusMasterTransaction
 10089  048E  0852               	movf	??_ModbusMasterTransaction,w
 10090  048F  00E0               	movwf	ModbusMasterTransaction@u8MBStatus
 10091  0490                     l5903:	
 10092  0490  085E               	movf	ModbusMasterTransaction@u8BytesLeft,w
 10093  0491  1903               	btfsc	3,2
 10094  0492  2C96               	goto	l5907
 10095  0493  0860               	movf	ModbusMasterTransaction@u8MBStatus,w
 10096  0494  1903               	btfsc	3,2
 10097  0495  2BFE               	goto	l5869
 10098  0496                     l5907:	
 10099                           
 10100                           ;ModbusMaster.c: 770: }
 10101                           ;ModbusMaster.c: 771: }
 10102                           ;ModbusMaster.c: 774: if (!u8MBStatus && u8ModbusADUSize >= 5)
 10103  0496  0860               	movf	ModbusMasterTransaction@u8MBStatus,w
 10104  0497  1D03               	btfss	3,2
 10105  0498  2CF7               	goto	l5929
 10106  0499  3005               	movlw	5
 10107  049A  0264               	subwf	ModbusMasterTransaction@u8ModbusADUSize,w
 10108  049B  1C03               	skipc
 10109  049C  2CF7               	goto	l5929
 10110                           
 10111                           ;ModbusMaster.c: 775: {
 10112                           ;ModbusMaster.c: 777: u16CRC = 0xFFFF;
 10113  049D  30FF               	movlw	255
 10114  049E  00E1               	movwf	ModbusMasterTransaction@u16CRC
 10115  049F  30FF               	movlw	255
 10116  04A0  00E2               	movwf	ModbusMasterTransaction@u16CRC+1
 10117                           
 10118                           ;ModbusMaster.c: 778: for (i = 0; i < (u8ModbusADUSize - 2); i++)
 10119  04A1  01E3               	clrf	ModbusMasterTransaction@i
 10120  04A2                     l5919:	
 10121  04A2  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
 10122  04A3  3EFE               	addlw	254
 10123  04A4  00D2               	movwf	??_ModbusMasterTransaction
 10124  04A5  30FF               	movlw	255
 10125  04A6  1803               	skipnc
 10126  04A7  3000               	movlw	0
 10127  04A8  00D3               	movwf	??_ModbusMasterTransaction+1
 10128  04A9  0853               	movf	??_ModbusMasterTransaction+1,w
 10129  04AA  3A80               	xorlw	128
 10130  04AB  3C80               	sublw	128
 10131  04AC  1D03               	skipz
 10132  04AD  2CB0               	goto	u4595
 10133  04AE  0852               	movf	??_ModbusMasterTransaction,w
 10134  04AF  0263               	subwf	ModbusMasterTransaction@i,w
 10135  04B0                     u4595:	
 10136  04B0  1803               	btfsc	3,0
 10137  04B1  2CCD               	goto	l5921
 10138                           
 10139                           ;ModbusMaster.c: 779: {
 10140                           ;ModbusMaster.c: 780: u16CRC = crc16_update(u16CRC, u8ModbusADU[i]);
 10141  04B2  0020               	movlb	0	; select bank0
 10142  04B3  0862               	movf	ModbusMasterTransaction@u16CRC+1,w
 10143  04B4  00C9               	movwf	crc16_update@crc+1
 10144  04B5  0861               	movf	ModbusMasterTransaction@u16CRC,w
 10145  04B6  00C8               	movwf	crc16_update@crc
 10146  04B7  0863               	movf	ModbusMasterTransaction@i,w
 10147  04B8  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10148  04B9  0086               	movwf	6
 10149  04BA  3001               	movlw	1	; select bank2/3
 10150  04BB  0087               	movwf	7
 10151  04BC  0801               	movf	1,w
 10152  04BD  00D2               	movwf	??_ModbusMasterTransaction
 10153  04BE  0852               	movf	??_ModbusMasterTransaction,w
 10154  04BF  00CA               	movwf	crc16_update@a
 10155  04C0  3187  2782  3180   	fcall	_crc16_update
 10156  04C3  0020               	movlb	0	; select bank0
 10157  04C4  0849               	movf	?_crc16_update+1,w
 10158  04C5  00E2               	movwf	ModbusMasterTransaction@u16CRC+1
 10159  04C6  0848               	movf	?_crc16_update,w
 10160  04C7  00E1               	movwf	ModbusMasterTransaction@u16CRC
 10161  04C8  3001               	movlw	1
 10162  04C9  00D2               	movwf	??_ModbusMasterTransaction
 10163  04CA  0852               	movf	??_ModbusMasterTransaction,w
 10164  04CB  07E3               	addwf	ModbusMasterTransaction@i,f
 10165  04CC  2CA2               	goto	l5919
 10166  04CD                     l5921:	
 10167                           
 10168                           ;ModbusMaster.c: 781: }
 10169                           ;ModbusMaster.c: 784: if (!u8MBStatus && (lowByte(u16CRC) != u8ModbusADU[u8ModbusADUSize
      +                           - 2] ||
 10170                           ;ModbusMaster.c: 785: highByte(u16CRC) != u8ModbusADU[u8ModbusADUSize - 1]))
 10171  04CD  0020               	movlb	0	; select bank0
 10172  04CE  0860               	movf	ModbusMasterTransaction@u8MBStatus,w
 10173  04CF  1D03               	btfss	3,2
 10174  04D0  2CF7               	goto	l5929
 10175  04D1  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
 10176  04D2  3EFE               	addlw	254
 10177  04D3  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10178  04D4  0086               	movwf	6
 10179  04D5  3001               	movlw	1	; select bank2/3
 10180  04D6  0087               	movwf	7
 10181  04D7  0862               	movf	ModbusMasterTransaction@u16CRC+1,w
 10182  04D8  00C9               	movwf	lowByte@ww+1
 10183  04D9  0861               	movf	ModbusMasterTransaction@u16CRC,w
 10184  04DA  00C8               	movwf	lowByte@ww
 10185  04DB  318C  24C6  3180   	fcall	_lowByte
 10186  04DE  0601               	xorwf	1,w
 10187  04DF  1D03               	skipz
 10188  04E0  2CF2               	goto	l5927
 10189  04E1  0020               	movlb	0	; select bank0
 10190  04E2  0864               	movf	ModbusMasterTransaction@u8ModbusADUSize,w
 10191  04E3  3EFF               	addlw	255
 10192  04E4  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10193  04E5  0086               	movwf	6
 10194  04E6  3001               	movlw	1	; select bank2/3
 10195  04E7  0087               	movwf	7
 10196  04E8  0862               	movf	ModbusMasterTransaction@u16CRC+1,w
 10197  04E9  00C9               	movwf	highByte@ww+1
 10198  04EA  0861               	movf	ModbusMasterTransaction@u16CRC,w
 10199  04EB  00C8               	movwf	highByte@ww
 10200  04EC  318C  24C3  3180   	fcall	_highByte
 10201  04EF  0601               	xorwf	1,w
 10202  04F0  1903               	skipnz
 10203  04F1  2CF7               	goto	l5929
 10204  04F2                     l5927:	
 10205                           
 10206                           ;ModbusMaster.c: 786: {
 10207                           ;ModbusMaster.c: 787: u8MBStatus = 0xE3;
 10208  04F2  30E3               	movlw	227
 10209  04F3  0020               	movlb	0	; select bank0
 10210  04F4  00D2               	movwf	??_ModbusMasterTransaction
 10211  04F5  0852               	movf	??_ModbusMasterTransaction,w
 10212  04F6  00E0               	movwf	ModbusMasterTransaction@u8MBStatus
 10213  04F7                     l5929:	
 10214                           
 10215                           ;ModbusMaster.c: 788: }
 10216                           ;ModbusMaster.c: 789: }
 10217                           ;ModbusMaster.c: 792: if (!u8MBStatus)
 10218  04F7  0020               	movlb	0	; select bank0
 10219  04F8  0860               	movf	ModbusMasterTransaction@u8MBStatus,w
 10220  04F9  1903               	btfsc	3,2
 10221  04FA  2DA6               	goto	l5965
 10222  04FB  2DB8               	goto	l5967
 10223  04FC                     l5933:	
 10224                           ;ModbusMaster.c: 796: {
 10225                           ;ModbusMaster.c: 797: case 0x01:
 10226                           
 10227                           ;ModbusMaster.c: 793: {
 10228                           ;ModbusMaster.c: 795: switch(u8ModbusADU[1])
 10229                           
 10230                           
 10231                           ;ModbusMaster.c: 798: case 0x02:
 10232                           ;ModbusMaster.c: 800: for (i = 0; i < (u8ModbusADU[2] >> 1); i++)
 10233  04FC  0020               	movlb	0	; select bank0
 10234  04FD  01E3               	clrf	ModbusMasterTransaction@i
 10235  04FE                     l5943:	
 10236  04FE  0022               	movlb	2	; select bank2
 10237  04FF  3622               	lsrf	(_u8ModbusADU^(0+256)+2),w
 10238  0500  0020               	movlb	0	; select bank0
 10239  0501  0263               	subwf	ModbusMasterTransaction@i,w
 10240  0502  1803               	btfsc	3,0
 10241  0503  2D39               	goto	l1019
 10242                           
 10243                           ;ModbusMaster.c: 801: {
 10244                           ;ModbusMaster.c: 802: if (i < 64)
 10245  0504  3040               	movlw	64
 10246  0505  0263               	subwf	ModbusMasterTransaction@i,w
 10247  0506  1803               	skipnc
 10248  0507  2D30               	goto	l5939
 10249                           
 10250                           ;ModbusMaster.c: 803: {
 10251                           ;ModbusMaster.c: 804: _u16ResponseBuffer[i] = word(u8ModbusADU[2 * i + 4], u8ModbusADU[2
      +                           * i + 3]);
 10252  0508  3563               	lslf	ModbusMasterTransaction@i,w
 10253  0509  3E03               	addlw	3
 10254  050A  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10255  050B  0086               	movwf	6
 10256  050C  3001               	movlw	1	; select bank2/3
 10257  050D  0087               	movwf	7
 10258  050E  0801               	movf	1,w
 10259  050F  00D2               	movwf	??_ModbusMasterTransaction
 10260  0510  0852               	movf	??_ModbusMasterTransaction,w
 10261  0511  00C8               	movwf	word@lowByte
 10262  0512  3563               	lslf	ModbusMasterTransaction@i,w
 10263  0513  3E04               	addlw	4
 10264  0514  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10265  0515  0086               	movwf	6
 10266  0516  3001               	movlw	1	; select bank2/3
 10267  0517  0087               	movwf	7
 10268  0518  0801               	movf	1,w
 10269  0519  318E  26B7  3180   	fcall	_word
 10270  051C  0020               	movlb	0	; select bank0
 10271  051D  0863               	movf	ModbusMasterTransaction@i,w
 10272  051E  00D3               	movwf	??_ModbusMasterTransaction+1
 10273  051F  01D4               	clrf	??_ModbusMasterTransaction+2
 10274  0520  35D3               	lslf	??_ModbusMasterTransaction+1,f
 10275  0521  0DD4               	rlf	??_ModbusMasterTransaction+2,f
 10276  0522  30F0               	movlw	240
 10277  0523  00D5               	movwf	??_ModbusMasterTransaction+3
 10278  0524  3020               	movlw	32
 10279  0525  00D6               	movwf	??_ModbusMasterTransaction+4
 10280  0526  0853               	movf	??_ModbusMasterTransaction+1,w
 10281  0527  0755               	addwf	??_ModbusMasterTransaction+3,w
 10282  0528  0086               	movwf	6
 10283  0529  0854               	movf	??_ModbusMasterTransaction+2,w
 10284  052A  3D56               	addwfc	??_ModbusMasterTransaction+4,w
 10285  052B  0087               	movwf	7
 10286  052C  0848               	movf	?_word,w
 10287  052D  3FC0               	movwi [0]fsr1
 10288  052E  0849               	movf	?_word+1,w
 10289  052F  3FC1               	movwi [1]fsr1
 10290  0530                     l5939:	
 10291                           
 10292                           ;ModbusMaster.c: 805: }
 10293                           ;ModbusMaster.c: 807: _u8ResponseBufferLength = i;
 10294  0530  0863               	movf	ModbusMasterTransaction@i,w
 10295  0531  00D2               	movwf	??_ModbusMasterTransaction
 10296  0532  0852               	movf	??_ModbusMasterTransaction,w
 10297  0533  00BD               	movwf	__u8ResponseBufferLength
 10298  0534  3001               	movlw	1
 10299  0535  00D2               	movwf	??_ModbusMasterTransaction
 10300  0536  0852               	movf	??_ModbusMasterTransaction,w
 10301  0537  07E3               	addwf	ModbusMasterTransaction@i,f
 10302  0538  2CFE               	goto	l5943
 10303  0539                     l1019:	
 10304                           
 10305                           ;ModbusMaster.c: 808: }
 10306                           ;ModbusMaster.c: 811: if (u8ModbusADU[2] % 2)
 10307  0539  0022               	movlb	2	; select bank2
 10308  053A  1C22               	btfss	(_u8ModbusADU^(0+256)+2),0
 10309  053B  2DB8               	goto	l5967
 10310                           
 10311                           ;ModbusMaster.c: 812: {
 10312                           ;ModbusMaster.c: 813: if (i < 64)
 10313  053C  3040               	movlw	64
 10314  053D  0020               	movlb	0	; select bank0
 10315  053E  0263               	subwf	ModbusMasterTransaction@i,w
 10316  053F  1803               	skipnc
 10317  0540  2D63               	goto	l5949
 10318                           
 10319                           ;ModbusMaster.c: 814: {
 10320                           ;ModbusMaster.c: 815: _u16ResponseBuffer[i] = word(0, u8ModbusADU[2 * i + 3]);
 10321  0541  3563               	lslf	ModbusMasterTransaction@i,w
 10322  0542  3E03               	addlw	3
 10323  0543  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10324  0544  0086               	movwf	6
 10325  0545  3001               	movlw	1	; select bank2/3
 10326  0546  0087               	movwf	7
 10327  0547  0801               	movf	1,w
 10328  0548  00D2               	movwf	??_ModbusMasterTransaction
 10329  0549  0852               	movf	??_ModbusMasterTransaction,w
 10330  054A  00C8               	movwf	word@lowByte
 10331  054B  3000               	movlw	0
 10332  054C  318E  26B7  3180   	fcall	_word
 10333  054F  0020               	movlb	0	; select bank0
 10334  0550  0863               	movf	ModbusMasterTransaction@i,w
 10335  0551  00D3               	movwf	??_ModbusMasterTransaction+1
 10336  0552  01D4               	clrf	??_ModbusMasterTransaction+2
 10337  0553  35D3               	lslf	??_ModbusMasterTransaction+1,f
 10338  0554  0DD4               	rlf	??_ModbusMasterTransaction+2,f
 10339  0555  30F0               	movlw	240
 10340  0556  00D5               	movwf	??_ModbusMasterTransaction+3
 10341  0557  3020               	movlw	32
 10342  0558  00D6               	movwf	??_ModbusMasterTransaction+4
 10343  0559  0853               	movf	??_ModbusMasterTransaction+1,w
 10344  055A  0755               	addwf	??_ModbusMasterTransaction+3,w
 10345  055B  0086               	movwf	6
 10346  055C  0854               	movf	??_ModbusMasterTransaction+2,w
 10347  055D  3D56               	addwfc	??_ModbusMasterTransaction+4,w
 10348  055E  0087               	movwf	7
 10349  055F  0848               	movf	?_word,w
 10350  0560  3FC0               	movwi [0]fsr1
 10351  0561  0849               	movf	?_word+1,w
 10352  0562  3FC1               	movwi [1]fsr1
 10353  0563                     l5949:	
 10354                           
 10355                           ;ModbusMaster.c: 816: }
 10356                           ;ModbusMaster.c: 818: _u8ResponseBufferLength = i + 1;
 10357  0563  0863               	movf	ModbusMasterTransaction@i,w
 10358  0564  3E01               	addlw	1
 10359  0565  00D2               	movwf	??_ModbusMasterTransaction
 10360  0566  0852               	movf	??_ModbusMasterTransaction,w
 10361  0567  00BD               	movwf	__u8ResponseBufferLength
 10362                           
 10363                           ;ModbusMaster.c: 819: }
 10364                           ;ModbusMaster.c: 820: break;
 10365  0568  2DB8               	goto	l5967
 10366  0569                     l5951:	
 10367                           ;ModbusMaster.c: 822: case 0x04:
 10368                           
 10369                           
 10370                           ;ModbusMaster.c: 823: case 0x03:
 10371                           ;ModbusMaster.c: 824: case 0x17:
 10372                           ;ModbusMaster.c: 826: for (i = 0; i < (u8ModbusADU[2] >> 1); i++)
 10373  0569  0020               	movlb	0	; select bank0
 10374  056A  01E3               	clrf	ModbusMasterTransaction@i
 10375  056B                     l5961:	
 10376  056B  0022               	movlb	2	; select bank2
 10377  056C  3622               	lsrf	(_u8ModbusADU^(0+256)+2),w
 10378  056D  0020               	movlb	0	; select bank0
 10379  056E  0263               	subwf	ModbusMasterTransaction@i,w
 10380  056F  1803               	btfsc	3,0
 10381  0570  2DB8               	goto	l5967
 10382                           
 10383                           ;ModbusMaster.c: 827: {
 10384                           ;ModbusMaster.c: 828: if (i < 64)
 10385  0571  3040               	movlw	64
 10386  0572  0263               	subwf	ModbusMasterTransaction@i,w
 10387  0573  1803               	skipnc
 10388  0574  2D9D               	goto	l5957
 10389                           
 10390                           ;ModbusMaster.c: 829: {
 10391                           ;ModbusMaster.c: 830: _u16ResponseBuffer[i] = word(u8ModbusADU[2 * i + 3], u8ModbusADU[2
      +                           * i + 4]);
 10392  0575  3563               	lslf	ModbusMasterTransaction@i,w
 10393  0576  3E04               	addlw	4
 10394  0577  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10395  0578  0086               	movwf	6
 10396  0579  3001               	movlw	1	; select bank2/3
 10397  057A  0087               	movwf	7
 10398  057B  0801               	movf	1,w
 10399  057C  00D2               	movwf	??_ModbusMasterTransaction
 10400  057D  0852               	movf	??_ModbusMasterTransaction,w
 10401  057E  00C8               	movwf	word@lowByte
 10402  057F  3563               	lslf	ModbusMasterTransaction@i,w
 10403  0580  3E03               	addlw	3
 10404  0581  3E20               	addlw	(low (_u8ModbusADU| (0+256)))& (0+255)
 10405  0582  0086               	movwf	6
 10406  0583  3001               	movlw	1	; select bank2/3
 10407  0584  0087               	movwf	7
 10408  0585  0801               	movf	1,w
 10409  0586  318E  26B7  3180   	fcall	_word
 10410  0589  0020               	movlb	0	; select bank0
 10411  058A  0863               	movf	ModbusMasterTransaction@i,w
 10412  058B  00D3               	movwf	??_ModbusMasterTransaction+1
 10413  058C  01D4               	clrf	??_ModbusMasterTransaction+2
 10414  058D  35D3               	lslf	??_ModbusMasterTransaction+1,f
 10415  058E  0DD4               	rlf	??_ModbusMasterTransaction+2,f
 10416  058F  30F0               	movlw	240
 10417  0590  00D5               	movwf	??_ModbusMasterTransaction+3
 10418  0591  3020               	movlw	32
 10419  0592  00D6               	movwf	??_ModbusMasterTransaction+4
 10420  0593  0853               	movf	??_ModbusMasterTransaction+1,w
 10421  0594  0755               	addwf	??_ModbusMasterTransaction+3,w
 10422  0595  0086               	movwf	6
 10423  0596  0854               	movf	??_ModbusMasterTransaction+2,w
 10424  0597  3D56               	addwfc	??_ModbusMasterTransaction+4,w
 10425  0598  0087               	movwf	7
 10426  0599  0848               	movf	?_word,w
 10427  059A  3FC0               	movwi [0]fsr1
 10428  059B  0849               	movf	?_word+1,w
 10429  059C  3FC1               	movwi [1]fsr1
 10430  059D                     l5957:	
 10431                           
 10432                           ;ModbusMaster.c: 831: }
 10433                           ;ModbusMaster.c: 833: _u8ResponseBufferLength = i;
 10434  059D  0863               	movf	ModbusMasterTransaction@i,w
 10435  059E  00D2               	movwf	??_ModbusMasterTransaction
 10436  059F  0852               	movf	??_ModbusMasterTransaction,w
 10437  05A0  00BD               	movwf	__u8ResponseBufferLength
 10438  05A1  3001               	movlw	1
 10439  05A2  00D2               	movwf	??_ModbusMasterTransaction
 10440  05A3  0852               	movf	??_ModbusMasterTransaction,w
 10441  05A4  07E3               	addwf	ModbusMasterTransaction@i,f
 10442  05A5  2D6B               	goto	l5961
 10443  05A6                     l5965:	
 10444                           ;ModbusMaster.c: 836: }
 10445                           
 10446                           ;ModbusMaster.c: 834: }
 10447                           ;ModbusMaster.c: 835: break;
 10448                           
 10449  05A6  0022               	movlb	2	; select bank2
 10450  05A7  0821               	movf	(_u8ModbusADU^(0+256)+1),w
 10451                           
 10452                           ; Switch size 1, requested type "space"
 10453                           ; Number of cases is 5, Range of values is 1 to 23
 10454                           ; switch strategies available:
 10455                           ; Name         Instructions Cycles
 10456                           ; simple_byte           16     9 (average)
 10457                           ; direct_byte           55     9 (fixed)
 10458                           ; jumptable            263     9 (fixed)
 10459                           ;	Chosen strategy is simple_byte
 10460  05A8  3A01               	xorlw	1	; case 1
 10461  05A9  1903               	skipnz
 10462  05AA  2CFC               	goto	l5933
 10463  05AB  3A03               	xorlw	3	; case 2
 10464  05AC  1903               	skipnz
 10465  05AD  2CFC               	goto	l5933
 10466  05AE  3A01               	xorlw	1	; case 3
 10467  05AF  1903               	skipnz
 10468  05B0  2D69               	goto	l5951
 10469  05B1  3A07               	xorlw	7	; case 4
 10470  05B2  1903               	skipnz
 10471  05B3  2D69               	goto	l5951
 10472  05B4  3A13               	xorlw	19	; case 23
 10473  05B5  1903               	skipnz
 10474  05B6  2D69               	goto	l5951
 10475  05B7  2DB8               	goto	l5967
 10476  05B8                     l5967:	
 10477                           
 10478                           ;ModbusMaster.c: 837: }
 10479                           ;ModbusMaster.c: 839: _u8TransmitBufferIndex = 0;
 10480  05B8  0020               	movlb	0	; select bank0
 10481  05B9  01BF               	clrf	__u8TransmitBufferIndex
 10482                           
 10483                           ;ModbusMaster.c: 840: u16TransmitBufferLength = 0;
 10484  05BA  0021               	movlb	1	; select bank1
 10485  05BB  01B4               	clrf	_u16TransmitBufferLength^(0+128)
 10486  05BC  01B5               	clrf	(_u16TransmitBufferLength+1)^(0+128)
 10487                           
 10488                           ;ModbusMaster.c: 841: _u8ResponseBufferIndex = 0;
 10489  05BD  0020               	movlb	0	; select bank0
 10490  05BE  01BE               	clrf	__u8ResponseBufferIndex
 10491                           
 10492                           ;ModbusMaster.c: 842: return u8MBStatus;
 10493  05BF  0860               	movf	ModbusMasterTransaction@u8MBStatus,w
 10494  05C0  0008               	return
 10495  05C1                     __end_of_ModbusMasterTransaction:	
 10496                           
 10497                           	psect	text37
 10498  0EB7                     __ptext37:	
 10499 ;; *************** function _word *****************
 10500 ;; Defined at:
 10501 ;;		line 54 in file "word.h"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  highByte        1    wreg     unsigned char 
 10504 ;;  lowByte         1    0[BANK0 ] unsigned char 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  highByte        1    9[BANK0 ] unsigned char 
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  2    0[BANK0 ] unsigned int 
 10509 ;; Registers used:
 10510 ;;		wreg
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10516 ;;      Params:         0       2       0       0       0       0       0       0
 10517 ;;      Locals:         0       1       0       0       0       0       0       0
 10518 ;;      Temps:          0       7       0       0       0       0       0       0
 10519 ;;      Totals:         0      10       0       0       0       0       0       0
 10520 ;;Total ram usage:       10 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    5
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_ModbusMasterTransaction
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           
 10531                           ;psect for function _word
 10532  0EB7                     _word:	
 10533                           
 10534                           ;incstack = 0
 10535                           ; Regs used in _word: [wreg]
 10536                           ;word@highByte stored from wreg
 10537  0EB7  0020               	movlb	0	; select bank0
 10538  0EB8  00D1               	movwf	word@highByte
 10539                           
 10540                           ;word.h: 56: return (unsigned int) ((((unsigned int) highByte)<<8) & 0xFF00) | (((unsign
      +                          ed int) lowByte)&0x00FF);
 10541  0EB9  0848               	movf	word@lowByte,w
 10542  0EBA  00CA               	movwf	??_word
 10543  0EBB  01CB               	clrf	??_word+1
 10544  0EBC  0851               	movf	word@highByte,w
 10545  0EBD  00CC               	movwf	??_word+2
 10546  0EBE  01CD               	clrf	??_word+3
 10547  0EBF  084C               	movf	??_word+2,w
 10548  0EC0  00CD               	movwf	??_word+3
 10549  0EC1  01CC               	clrf	??_word+2
 10550  0EC2  3000               	movlw	0
 10551  0EC3  054C               	andwf	??_word+2,w
 10552  0EC4  00CF               	movwf	??_word+5
 10553  0EC5  30FF               	movlw	255
 10554  0EC6  054D               	andwf	??_word+3,w
 10555  0EC7  00D0               	movwf	??_word+6
 10556  0EC8  084A               	movf	??_word,w
 10557  0EC9  044F               	iorwf	??_word+5,w
 10558  0ECA  00C8               	movwf	?_word
 10559  0ECB  084B               	movf	??_word+1,w
 10560  0ECC  0450               	iorwf	??_word+6,w
 10561  0ECD  00C9               	movwf	?_word+1
 10562  0ECE  0008               	return
 10563  0ECF                     __end_of_word:	
 10564                           
 10565                           	psect	text38
 10566  0CC9                     __ptext38:	
 10567 ;; *************** function _preTransmission_App *****************
 10568 ;; Defined at:
 10569 ;;		line 54 in file "ModbusManager.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;		None
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		None
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10583 ;;      Params:         0       0       0       0       0       0       0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0
 10586 ;;      Totals:         0       0       0       0       0       0       0       0
 10587 ;;Total ram usage:        0 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    5
 10590 ;; This function calls:
 10591 ;;		Nothing
 10592 ;; This function is called by:
 10593 ;;		_ModbusMasterSetup
 10594 ;;		_ModbusMasterTransaction
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           
 10599                           ;psect for function _preTransmission_App
 10600  0CC9                     _preTransmission_App:	
 10601                           
 10602                           ;incstack = 0
 10603                           ; Regs used in _preTransmission_App: []
 10604                           ;ModbusManager.c: 56: do { LATBbits.LATB6 = 1; } while(0);
 10605  0CC9  0022               	movlb	2	; select bank2
 10606  0CCA  170D               	bsf	13,6	;volatile
 10607  0CCB  0008               	return
 10608  0CCC                     __end_of_preTransmission_App:	
 10609                           
 10610                           	psect	text39
 10611  0CE9                     __ptext39:	
 10612 ;; *************** function _postTransmission_App *****************
 10613 ;; Defined at:
 10614 ;;		line 59 in file "ModbusManager.c"
 10615 ;; Parameters:    Size  Location     Type
 10616 ;;		None
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;		None
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  1    wreg      void 
 10621 ;; Registers used:
 10622 ;;		None
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10628 ;;      Params:         0       0       0       0       0       0       0       0
 10629 ;;      Locals:         0       0       0       0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0       0
 10631 ;;      Totals:         0       0       0       0       0       0       0       0
 10632 ;;Total ram usage:        0 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; Hardware stack levels required when called:    5
 10635 ;; This function calls:
 10636 ;;		Nothing
 10637 ;; This function is called by:
 10638 ;;		_ModbusMasterSetup
 10639 ;;		_ModbusMasterTransaction
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           
 10644                           ;psect for function _postTransmission_App
 10645  0CE9                     _postTransmission_App:	
 10646                           
 10647                           ;incstack = 0
 10648                           ; Regs used in _postTransmission_App: []
 10649                           ;ModbusManager.c: 61: do { LATBbits.LATB6 = 0; } while(0);
 10650  0CE9  0022               	movlb	2	; select bank2
 10651  0CEA  130D               	bcf	13,6	;volatile
 10652                           
 10653                           ;ModbusManager.c: 62: PIR1bits.RCIF=0;
 10654  0CEB  0020               	movlb	0	; select bank0
 10655  0CEC  1291               	bcf	17,5	;volatile
 10656  0CED  0008               	return
 10657  0CEE                     __end_of_postTransmission_App:	
 10658                           
 10659                           	psect	text40
 10660  0D74                     __ptext40:	
 10661 ;; *************** function _millisReset *****************
 10662 ;; Defined at:
 10663 ;;		line 668 in file "main.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;		None
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;		None
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10677 ;;      Params:         0       0       0       0       0       0       0       0
 10678 ;;      Locals:         0       0       0       0       0       0       0       0
 10679 ;;      Temps:          0       0       0       0       0       0       0       0
 10680 ;;      Totals:         0       0       0       0       0       0       0       0
 10681 ;;Total ram usage:        0 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    5
 10684 ;; This function calls:
 10685 ;;		Nothing
 10686 ;; This function is called by:
 10687 ;;		_ModbusMasterTransaction
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           
 10692                           ;psect for function _millisReset
 10693  0D74                     _millisReset:	
 10694                           
 10695                           ;main.c: 670: TimertickMsec=0;
 10696                           
 10697                           ;incstack = 0
 10698                           ; Regs used in _millisReset: [wreg]
 10699  0D74  3000               	movlw	0
 10700  0D75  0021               	movlb	1	; select bank1
 10701  0D76  00A3               	movwf	(_TimertickMsec+3)^(0+128)
 10702  0D77  3000               	movlw	0
 10703  0D78  00A2               	movwf	(_TimertickMsec+2)^(0+128)
 10704  0D79  3000               	movlw	0
 10705  0D7A  00A1               	movwf	(_TimertickMsec+1)^(0+128)
 10706  0D7B  3000               	movlw	0
 10707  0D7C  00A0               	movwf	_TimertickMsec^(0+128)
 10708  0D7D  0008               	return
 10709  0D7E                     __end_of_millisReset:	
 10710                           
 10711                           	psect	text41
 10712  0E29                     __ptext41:	
 10713 ;; *************** function _millis *****************
 10714 ;; Defined at:
 10715 ;;		line 663 in file "main.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  4    0[BANK0 ] unsigned long 
 10722 ;; Registers used:
 10723 ;;		wreg
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10729 ;;      Params:         0       4       0       0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0
 10732 ;;      Totals:         0       4       0       0       0       0       0       0
 10733 ;;Total ram usage:        4 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    5
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_ModbusMasterTransaction
 10740 ;;		_OnEncPulseEdgeEvent
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function _millis
 10746  0E29                     _millis:	
 10747                           
 10748                           ;main.c: 665: return TimertickMsec;
 10749                           
 10750                           ;incstack = 0
 10751                           ; Regs used in _millis: [wreg]
 10752  0E29  0021               	movlb	1	; select bank1
 10753  0E2A  0823               	movf	(_TimertickMsec+3)^(0+128),w
 10754  0E2B  0020               	movlb	0	; select bank0
 10755  0E2C  00CB               	movwf	?_millis+3
 10756  0E2D  0021               	movlb	1	; select bank1
 10757  0E2E  0822               	movf	(_TimertickMsec+2)^(0+128),w
 10758  0E2F  0020               	movlb	0	; select bank0
 10759  0E30  00CA               	movwf	?_millis+2
 10760  0E31  0021               	movlb	1	; select bank1
 10761  0E32  0821               	movf	(_TimertickMsec+1)^(0+128),w
 10762  0E33  0020               	movlb	0	; select bank0
 10763  0E34  00C9               	movwf	?_millis+1
 10764  0E35  0021               	movlb	1	; select bank1
 10765  0E36  0820               	movf	_TimertickMsec^(0+128),w
 10766  0E37  0020               	movlb	0	; select bank0
 10767  0E38  00C8               	movwf	?_millis
 10768  0E39  0008               	return
 10769  0E3A                     __end_of_millis:	
 10770                           
 10771                           	psect	text42
 10772  0CC6                     __ptext42:	
 10773 ;; *************** function _lowByte *****************
 10774 ;; Defined at:
 10775 ;;		line 43 in file "word.h"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  ww              2    0[BANK0 ] unsigned int 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;		None
 10780 ;; Return value:  Size  Location     Type
 10781 ;;                  1    wreg      unsigned char 
 10782 ;; Registers used:
 10783 ;;		wreg
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10789 ;;      Params:         0       2       0       0       0       0       0       0
 10790 ;;      Locals:         0       0       0       0       0       0       0       0
 10791 ;;      Temps:          0       0       0       0       0       0       0       0
 10792 ;;      Totals:         0       2       0       0       0       0       0       0
 10793 ;;Total ram usage:        2 bytes
 10794 ;; Hardware stack levels used:    1
 10795 ;; Hardware stack levels required when called:    5
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_ModbusMasterTransaction
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           
 10804                           ;psect for function _lowByte
 10805  0CC6                     _lowByte:	
 10806                           
 10807                           ;word.h: 45: return (unsigned char) ((ww) & 0xFF);
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _lowByte: [wreg]
 10811  0CC6  0020               	movlb	0	; select bank0
 10812  0CC7  0848               	movf	lowByte@ww,w
 10813  0CC8  0008               	return
 10814  0CC9                     __end_of_lowByte:	
 10815                           
 10816                           	psect	text43
 10817  0CC3                     __ptext43:	
 10818 ;; *************** function _highByte *****************
 10819 ;; Defined at:
 10820 ;;		line 38 in file "word.h"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  ww              2    0[BANK0 ] unsigned int 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      unsigned char 
 10827 ;; Registers used:
 10828 ;;		wreg, status,2
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10834 ;;      Params:         0       2       0       0       0       0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0
 10837 ;;      Totals:         0       2       0       0       0       0       0       0
 10838 ;;Total ram usage:        2 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    5
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_ModbusMasterTransaction
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           
 10849                           ;psect for function _highByte
 10850  0CC3                     _highByte:	
 10851                           
 10852                           ;word.h: 40: return (unsigned char) ((ww) >> 8);
 10853                           
 10854                           ;incstack = 0
 10855                           ; Regs used in _highByte: [wreg+status,2]
 10856  0CC3  0020               	movlb	0	; select bank0
 10857  0CC4  0849               	movf	highByte@ww+1,w
 10858  0CC5  0008               	return
 10859  0CC6                     __end_of_highByte:	
 10860                           
 10861                           	psect	text44
 10862  0782                     __ptext44:	
 10863 ;; *************** function _crc16_update *****************
 10864 ;; Defined at:
 10865 ;;		line 27 in file "crc16.h"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  crc             2    0[BANK0 ] unsigned int 
 10868 ;;  a               1    2[BANK0 ] unsigned char 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  i               2    5[BANK0 ] int 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  2    0[BANK0 ] unsigned int 
 10873 ;; Registers used:
 10874 ;;		wreg, status,2, status,0
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10880 ;;      Params:         0       3       0       0       0       0       0       0
 10881 ;;      Locals:         0       2       0       0       0       0       0       0
 10882 ;;      Temps:          0       2       0       0       0       0       0       0
 10883 ;;      Totals:         0       7       0       0       0       0       0       0
 10884 ;;Total ram usage:        7 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:    5
 10887 ;; This function calls:
 10888 ;;		Nothing
 10889 ;; This function is called by:
 10890 ;;		_ModbusMasterTransaction
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           
 10895                           ;psect for function _crc16_update
 10896  0782                     _crc16_update:	
 10897                           
 10898                           ;crc16.h: 29: int i;
 10899                           ;crc16.h: 31: crc ^= (unsigned int)a;
 10900                           
 10901                           ;incstack = 0
 10902                           ; Regs used in _crc16_update: [wreg+status,2+status,0]
 10903  0782  0020               	movlb	0	; select bank0
 10904  0783  084A               	movf	crc16_update@a,w
 10905  0784  00CB               	movwf	??_crc16_update
 10906  0785  01CC               	clrf	??_crc16_update+1
 10907  0786  084B               	movf	??_crc16_update,w
 10908  0787  06C8               	xorwf	crc16_update@crc,f
 10909  0788  084C               	movf	??_crc16_update+1,w
 10910  0789  06C9               	xorwf	crc16_update@crc+1,f
 10911                           
 10912                           ;crc16.h: 32: for (i = 0; i < 8; ++i)
 10913  078A  01CD               	clrf	crc16_update@i
 10914  078B  01CE               	clrf	crc16_update@i+1
 10915  078C                     L12:	
 10916  078C  084E               	movf	crc16_update@i+1,w
 10917  078D  3A80               	xorlw	128
 10918  078E  00CB               	movwf	??_crc16_update
 10919  078F  3080               	movlw	128
 10920  0790  024B               	subwf	??_crc16_update,w
 10921  0791  3008               	movlw	8
 10922  0792  1903               	btfsc	3,2
 10923  0793  024D               	subwf	crc16_update@i,w
 10924  0794  1803               	btfsc	3,0
 10925  0795  0008               	return
 10926                           
 10927                           ;crc16.h: 33: {
 10928                           ;crc16.h: 34: if (crc & 1)
 10929  0796  0020               	movlb	0	; select bank0
 10930  0797  1C48               	btfss	crc16_update@crc,0
 10931  0798  2FA5               	goto	l3061
 10932                           
 10933                           ;crc16.h: 35: crc = (crc >> 1) ^ 0xA001;
 10934  0799  0849               	movf	crc16_update@crc+1,w
 10935  079A  00CC               	movwf	??_crc16_update+1
 10936  079B  0848               	movf	crc16_update@crc,w
 10937  079C  00CB               	movwf	??_crc16_update
 10938  079D  36CC               	lsrf	??_crc16_update+1,f
 10939  079E  0CCB               	rrf	??_crc16_update,f
 10940  079F  3001               	movlw	1
 10941  07A0  064B               	xorwf	??_crc16_update,w
 10942  07A1  00C8               	movwf	crc16_update@crc
 10943  07A2  30A0               	movlw	160
 10944  07A3  064C               	xorwf	??_crc16_update+1,w
 10945  07A4  2FAE               	goto	L11
 10946  07A5                     l3061:	
 10947                           
 10948                           ;crc16.h: 36: else
 10949                           ;crc16.h: 37: crc = (crc >> 1);
 10950  07A5  0849               	movf	crc16_update@crc+1,w
 10951  07A6  00CC               	movwf	??_crc16_update+1
 10952  07A7  0848               	movf	crc16_update@crc,w
 10953  07A8  00CB               	movwf	??_crc16_update
 10954  07A9  36CC               	lsrf	??_crc16_update+1,f
 10955  07AA  0CCB               	rrf	??_crc16_update,f
 10956  07AB  084B               	movf	??_crc16_update,w
 10957  07AC  00C8               	movwf	crc16_update@crc
 10958  07AD  084C               	movf	??_crc16_update+1,w
 10959  07AE                     L11:	
 10960  07AE  00C9               	movwf	crc16_update@crc+1
 10961  07AF  3001               	movlw	1
 10962  07B0  07CD               	addwf	crc16_update@i,f
 10963  07B1  3000               	movlw	0
 10964  07B2  3DCE               	addwfc	crc16_update@i+1,f
 10965  07B3  2F8C               	goto	L12
 10966  07B4                     __end_of_crc16_update:	
 10967                           ;crc16.h: 38: }
 10968                           ;crc16.h: 40: return crc;
 10969                           
 10970                           
 10971                           	psect	text45
 10972  0D01                     __ptext45:	
 10973 ;; *************** function _EUSART_Write *****************
 10974 ;; Defined at:
 10975 ;;		line 96 in file "mcc_generated_files/eusart.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  txData          1    wreg     unsigned char 
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;  txData          1    0[BANK0 ] unsigned char 
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		wreg
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10989 ;;      Params:         0       0       0       0       0       0       0       0
 10990 ;;      Locals:         0       1       0       0       0       0       0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0
 10992 ;;      Totals:         0       1       0       0       0       0       0       0
 10993 ;;Total ram usage:        1 bytes
 10994 ;; Hardware stack levels used:    1
 10995 ;; Hardware stack levels required when called:    5
 10996 ;; This function calls:
 10997 ;;		Nothing
 10998 ;; This function is called by:
 10999 ;;		_ModbusMasterTransaction
 11000 ;;		_EPC_StateMachineControlLoop
 11001 ;;		_OnEncPulseEdgeEvent
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           
 11006                           ;psect for function _EUSART_Write
 11007  0D01                     _EUSART_Write:	
 11008                           
 11009                           ;incstack = 0
 11010                           ; Regs used in _EUSART_Write: [wreg]
 11011                           ;EUSART_Write@txData stored from wreg
 11012  0D01  0020               	movlb	0	; select bank0
 11013  0D02  00C8               	movwf	EUSART_Write@txData
 11014  0D03                     l159:	
 11015                           ;eusart.c: 99: {
 11016                           
 11017                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
 11018                           
 11019  0D03  1E11               	btfss	17,4	;volatile
 11020  0D04  2D03               	goto	l159
 11021                           
 11022                           ;eusart.c: 100: }
 11023                           ;eusart.c: 102: TX1REG = txData;
 11024  0D05  0848               	movf	EUSART_Write@txData,w
 11025  0D06  0023               	movlb	3	; select bank3
 11026  0D07  009A               	movwf	26	;volatile
 11027  0D08  0008               	return
 11028  0D09                     __end_of_EUSART_Write:	
 11029                           
 11030                           	psect	text46
 11031  0D6A                     __ptext46:	
 11032 ;; *************** function _EUSART_Read *****************
 11033 ;; Defined at:
 11034 ;;		line 77 in file "mcc_generated_files/eusart.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      unsigned char 
 11041 ;; Registers used:
 11042 ;;		wreg
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11048 ;;      Params:         0       0       0       0       0       0       0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; Hardware stack levels required when called:    5
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		_ModbusMasterTransaction
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           
 11063                           ;psect for function _EUSART_Read
 11064  0D6A                     _EUSART_Read:	
 11065  0D6A                     l152:	
 11066                           ;eusart.c: 81: {
 11067                           
 11068                           ;eusart.c: 80: while(!PIR1bits.RCIF)
 11069                           
 11070                           ;incstack = 0
 11071                           ; Regs used in _EUSART_Read: [wreg]
 11072                           
 11073  0D6A  0020               	movlb	0	; select bank0
 11074  0D6B  1E91               	btfss	17,5	;volatile
 11075  0D6C  2D6A               	goto	l152
 11076                           
 11077                           ;eusart.c: 82: }
 11078                           ;eusart.c: 85: if(1 == RC1STAbits.OERR)
 11079  0D6D  0023               	movlb	3	; select bank3
 11080  0D6E  1C9D               	btfss	29,1	;volatile
 11081  0D6F  2D72               	goto	l3007
 11082                           
 11083                           ;eusart.c: 86: {
 11084                           ;eusart.c: 89: RC1STAbits.CREN = 0;
 11085  0D70  121D               	bcf	29,4	;volatile
 11086                           
 11087                           ;eusart.c: 90: RC1STAbits.CREN = 1;
 11088  0D71  161D               	bsf	29,4	;volatile
 11089  0D72                     l3007:	
 11090                           
 11091                           ;eusart.c: 91: }
 11092                           ;eusart.c: 93: return RC1REG;
 11093  0D72  0819               	movf	25,w	;volatile
 11094  0D73  0008               	return
 11095  0D74                     __end_of_EUSART_Read:	
 11096                           
 11097                           	psect	text47
 11098  0F52                     __ptext47:	
 11099 ;; *************** function _getResponseBuffer *****************
 11100 ;; Defined at:
 11101 ;;		line 165 in file "ModbusMaster.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;  u8Index         1    wreg     unsigned char 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  u8Index         1    6[BANK0 ] unsigned char 
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  2    0[BANK0 ] unsigned int 
 11108 ;; Registers used:
 11109 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11115 ;;      Params:         0       2       0       0       0       0       0       0
 11116 ;;      Locals:         0       1       0       0       0       0       0       0
 11117 ;;      Temps:          0       4       0       0       0       0       0       0
 11118 ;;      Totals:         0       7       0       0       0       0       0       0
 11119 ;;Total ram usage:        7 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:    5
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_MB_UpdateEPCParameter
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           
 11130                           ;psect for function _getResponseBuffer
 11131  0F52                     _getResponseBuffer:	
 11132                           
 11133                           ;incstack = 0
 11134                           ; Regs used in _getResponseBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 11135                           ;getResponseBuffer@u8Index stored from wreg
 11136  0F52  0020               	movlb	0	; select bank0
 11137  0F53  00CE               	movwf	getResponseBuffer@u8Index
 11138                           
 11139                           ;ModbusMaster.c: 167: if (u8Index < 64)
 11140  0F54  3040               	movlw	64
 11141  0F55  024E               	subwf	getResponseBuffer@u8Index,w
 11142  0F56  1803               	skipnc
 11143  0F57  2F6C               	goto	l3631
 11144                           
 11145                           ;ModbusMaster.c: 168: {
 11146                           ;ModbusMaster.c: 169: return _u16ResponseBuffer[u8Index];
 11147  0F58  084E               	movf	getResponseBuffer@u8Index,w
 11148  0F59  00CA               	movwf	??_getResponseBuffer
 11149  0F5A  01CB               	clrf	??_getResponseBuffer+1
 11150  0F5B  35CA               	lslf	??_getResponseBuffer,f
 11151  0F5C  0DCB               	rlf	??_getResponseBuffer+1,f
 11152  0F5D  30F0               	movlw	240
 11153  0F5E  00CC               	movwf	??_getResponseBuffer+2
 11154  0F5F  3020               	movlw	32
 11155  0F60  00CD               	movwf	??_getResponseBuffer+3
 11156  0F61  084A               	movf	??_getResponseBuffer,w
 11157  0F62  074C               	addwf	??_getResponseBuffer+2,w
 11158  0F63  0086               	movwf	6
 11159  0F64  084B               	movf	??_getResponseBuffer+1,w
 11160  0F65  3D4D               	addwfc	??_getResponseBuffer+3,w
 11161  0F66  0087               	movwf	7
 11162  0F67  3F40               	moviw [0]fsr1
 11163  0F68  00C8               	movwf	?_getResponseBuffer
 11164  0F69  3F41               	moviw [1]fsr1
 11165  0F6A  00C9               	movwf	?_getResponseBuffer+1
 11166                           
 11167                           ;ModbusMaster.c: 170: }
 11168  0F6B  0008               	return
 11169  0F6C                     l3631:	
 11170                           
 11171                           ;ModbusMaster.c: 171: else
 11172                           ;ModbusMaster.c: 172: {
 11173                           ;ModbusMaster.c: 173: return 0xFFFF;
 11174  0F6C  30FF               	movlw	255
 11175  0F6D  00C8               	movwf	?_getResponseBuffer
 11176  0F6E  30FF               	movlw	255
 11177  0F6F  00C9               	movwf	?_getResponseBuffer+1
 11178  0F70  0008               	return
 11179  0F71                     __end_of_getResponseBuffer:	
 11180                           
 11181                           	psect	text48
 11182  0CC0                     __ptext48:	
 11183 ;; *************** function _LedONStatusBusy *****************
 11184 ;; Defined at:
 11185 ;;		line 12 in file "LED_Ctrl.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;		None
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  1    wreg      unsigned char 
 11192 ;; Registers used:
 11193 ;;		wreg
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11199 ;;      Params:         0       0       0       0       0       0       0       0
 11200 ;;      Locals:         0       0       0       0       0       0       0       0
 11201 ;;      Temps:          0       0       0       0       0       0       0       0
 11202 ;;      Totals:         0       0       0       0       0       0       0       0
 11203 ;;Total ram usage:        0 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    5
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_main
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           
 11214                           ;psect for function _LedONStatusBusy
 11215  0CC0                     _LedONStatusBusy:	
 11216                           
 11217                           ;LED_Ctrl.c: 14: return Led_ON;
 11218                           
 11219                           ;incstack = 0
 11220                           ; Regs used in _LedONStatusBusy: [wreg]
 11221  0CC0  0020               	movlb	0	; select bank0
 11222  0CC1  083C               	movf	_Led_ON,w
 11223  0CC2  0008               	return
 11224  0CC3                     __end_of_LedONStatusBusy:	
 11225                           
 11226                           	psect	text49
 11227  0631                     __ptext49:	
 11228 ;; *************** function _LedONStartConfig *****************
 11229 ;; Defined at:
 11230 ;;		line 18 in file "LED_Ctrl.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;  LEDcolor        1    wreg     unsigned char 
 11233 ;;  LedONDuratio    1    8[BANK0 ] unsigned char 
 11234 ;;  LedONNumBlin    1    9[BANK0 ] unsigned char 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  LEDcolor        1   12[BANK0 ] unsigned char 
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      unsigned char 
 11239 ;; Registers used:
 11240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11246 ;;      Params:         0       2       0       0       0       0       0       0
 11247 ;;      Locals:         0       1       0       0       0       0       0       0
 11248 ;;      Temps:          0       2       0       0       0       0       0       0
 11249 ;;      Totals:         0       5       0       0       0       0       0       0
 11250 ;;Total ram usage:        5 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    6
 11253 ;; This function calls:
 11254 ;;		___lwdiv
 11255 ;;		___wmul
 11256 ;; This function is called by:
 11257 ;;		_main
 11258 ;;		_EPC_StateMachineControlLoop
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           
 11263                           ;psect for function _LedONStartConfig
 11264  0631                     _LedONStartConfig:	
 11265                           
 11266                           ;incstack = 0
 11267                           ; Regs used in _LedONStartConfig: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11268                           ;LedONStartConfig@LEDcolor stored from wreg
 11269  0631  0020               	movlb	0	; select bank0
 11270  0632  00D4               	movwf	LedONStartConfig@LEDcolor
 11271                           
 11272                           ;LED_Ctrl.c: 20: if(Led_ON!=1 && (LedONDurationSec!=0)&& (LedONDurationSec <= 60))
 11273  0633  033C               	decf	_Led_ON,w
 11274  0634  1903               	btfsc	3,2
 11275  0635  0008               	return
 11276  0636  0850               	movf	LedONStartConfig@LedONDurationSec,w
 11277  0637  1903               	btfsc	3,2
 11278  0638  0008               	return
 11279  0639  303D               	movlw	61
 11280  063A  0250               	subwf	LedONStartConfig@LedONDurationSec,w
 11281  063B  1803               	skipnc
 11282  063C  0008               	return
 11283                           
 11284                           ;LED_Ctrl.c: 21: {
 11285                           ;LED_Ctrl.c: 22: Led_ON=1;
 11286  063D  01BC               	clrf	_Led_ON
 11287  063E  0ABC               	incf	_Led_ON,f
 11288                           
 11289                           ;LED_Ctrl.c: 23: LED_Color=LEDcolor;
 11290  063F  0854               	movf	LedONStartConfig@LEDcolor,w
 11291  0640  00D2               	movwf	??_LedONStartConfig
 11292  0641  0852               	movf	??_LedONStartConfig,w
 11293  0642  00EF               	movwf	_LED_Color
 11294                           
 11295                           ;LED_Ctrl.c: 25: switch(LED_Color)
 11296  0643  2E4D               	goto	l3769
 11297  0644                     l1146:	
 11298                           ;LED_Ctrl.c: 26: {
 11299                           ;LED_Ctrl.c: 27: case 0 : do { LATCbits.LATC0 = 1; } while(0);
 11300                           
 11301  0644  0022               	movlb	2	; select bank2
 11302  0645  140E               	bsf	14,0	;volatile
 11303                           
 11304                           ;LED_Ctrl.c: 28: break;
 11305  0646  2E59               	goto	l3771
 11306  0647                     l1150:	
 11307                           ;LED_Ctrl.c: 29: case 1 : do { LATCbits.LATC1 = 1; } while(0);
 11308                           
 11309  0647  0022               	movlb	2	; select bank2
 11310  0648  148E               	bsf	14,1	;volatile
 11311                           
 11312                           ;LED_Ctrl.c: 30: break;
 11313  0649  2E59               	goto	l3771
 11314  064A                     l1153:	
 11315                           ;LED_Ctrl.c: 31: case 2 : do { LATCbits.LATC2 = 1; } while(0);
 11316                           
 11317  064A  0022               	movlb	2	; select bank2
 11318  064B  150E               	bsf	14,2	;volatile
 11319                           
 11320                           ;LED_Ctrl.c: 34: }
 11321                           
 11322                           ;LED_Ctrl.c: 33: default : break;
 11323                           
 11324                           ;LED_Ctrl.c: 32: break;
 11325  064C  2E59               	goto	l3771
 11326  064D                     l3769:	
 11327  064D  0020               	movlb	0	; select bank0
 11328  064E  086F               	movf	_LED_Color,w
 11329                           
 11330                           ; Switch size 1, requested type "space"
 11331                           ; Number of cases is 3, Range of values is 0 to 2
 11332                           ; switch strategies available:
 11333                           ; Name         Instructions Cycles
 11334                           ; simple_byte           10     6 (average)
 11335                           ; direct_byte           12     6 (fixed)
 11336                           ; jumptable            260     6 (fixed)
 11337                           ;	Chosen strategy is simple_byte
 11338  064F  3A00               	xorlw	0	; case 0
 11339  0650  1903               	skipnz
 11340  0651  2E44               	goto	l1146
 11341  0652  3A01               	xorlw	1	; case 1
 11342  0653  1903               	skipnz
 11343  0654  2E47               	goto	l1150
 11344  0655  3A03               	xorlw	3	; case 2
 11345  0656  1903               	skipnz
 11346  0657  2E4A               	goto	l1153
 11347  0658  2E59               	goto	l3771
 11348  0659                     l3771:	
 11349                           
 11350                           ;LED_Ctrl.c: 36: LED_msec_Cnt=0;
 11351  0659  0020               	movlb	0	; select bank0
 11352  065A  01A6               	clrf	_LED_msec_Cnt
 11353  065B  01A7               	clrf	_LED_msec_Cnt+1
 11354                           
 11355                           ;LED_Ctrl.c: 37: LedON_Duration_msec=((unsigned int)LedONDurationSec)*1000;
 11356  065C  0850               	movf	LedONStartConfig@LedONDurationSec,w
 11357  065D  00D2               	movwf	??_LedONStartConfig
 11358  065E  01D3               	clrf	??_LedONStartConfig+1
 11359  065F  0852               	movf	??_LedONStartConfig,w
 11360  0660  00C8               	movwf	___wmul@multiplier
 11361  0661  0853               	movf	??_LedONStartConfig+1,w
 11362  0662  00C9               	movwf	___wmul@multiplier+1
 11363  0663  30E8               	movlw	232
 11364  0664  00CA               	movwf	___wmul@multiplicand
 11365  0665  3003               	movlw	3
 11366  0666  00CB               	movwf	___wmul@multiplicand+1
 11367  0667  318F  2736  3186   	fcall	___wmul
 11368  066A  0020               	movlb	0	; select bank0
 11369  066B  0849               	movf	?___wmul+1,w
 11370  066C  00A5               	movwf	_LedON_Duration_msec+1
 11371  066D  0848               	movf	?___wmul,w
 11372  066E  00A4               	movwf	_LedON_Duration_msec
 11373                           
 11374                           ;LED_Ctrl.c: 38: if(LedONNumBlink > 1)
 11375  066F  3002               	movlw	2
 11376  0670  0251               	subwf	LedONStartConfig@LedONNumBlink,w
 11377  0671  1C03               	skipc
 11378  0672  2E8C               	goto	l3779
 11379                           
 11380                           ;LED_Ctrl.c: 39: Blick_tickPointMsec=(LedON_Duration_msec/(((LedONNumBlink-1)*2)+1));
 11381  0673  0851               	movf	LedONStartConfig@LedONNumBlink,w
 11382  0674  00D2               	movwf	??_LedONStartConfig
 11383  0675  01D3               	clrf	??_LedONStartConfig+1
 11384  0676  35D2               	lslf	??_LedONStartConfig,f
 11385  0677  0DD3               	rlf	??_LedONStartConfig+1,f
 11386  0678  0852               	movf	??_LedONStartConfig,w
 11387  0679  3EFF               	addlw	255
 11388  067A  00C8               	movwf	___lwdiv@divisor
 11389  067B  30FF               	movlw	255
 11390  067C  3D53               	addwfc	??_LedONStartConfig+1,w
 11391  067D  00C9               	movwf	___lwdiv@divisor+1
 11392  067E  0825               	movf	_LedON_Duration_msec+1,w
 11393  067F  00CB               	movwf	___lwdiv@dividend+1
 11394  0680  0824               	movf	_LedON_Duration_msec,w
 11395  0681  00CA               	movwf	___lwdiv@dividend
 11396  0682  3187  274D  3186   	fcall	___lwdiv
 11397  0685  0020               	movlb	0	; select bank0
 11398  0686  0849               	movf	?___lwdiv+1,w
 11399  0687  0021               	movlb	1	; select bank1
 11400  0688  00B3               	movwf	(_Blick_tickPointMsec+1)^(0+128)
 11401  0689  0020               	movlb	0	; select bank0
 11402  068A  0848               	movf	?___lwdiv,w
 11403  068B  2E92               	goto	L13
 11404  068C                     l3779:	
 11405                           
 11406                           ;LED_Ctrl.c: 40: else
 11407                           ;LED_Ctrl.c: 41: Blick_tickPointMsec=LedON_Duration_msec;
 11408  068C  0020               	movlb	0	; select bank0
 11409  068D  0825               	movf	_LedON_Duration_msec+1,w
 11410  068E  0021               	movlb	1	; select bank1
 11411  068F  00B3               	movwf	(_Blick_tickPointMsec+1)^(0+128)
 11412  0690  0020               	movlb	0	; select bank0
 11413  0691  0824               	movf	_LedON_Duration_msec,w
 11414  0692                     L13:	
 11415  0692  0021               	movlb	1	; select bank1
 11416  0693  00B2               	movwf	_Blick_tickPointMsec^(0+128)
 11417                           
 11418                           ;LED_Ctrl.c: 43: Blick_tickPoint=Blick_tickPointMsec;
 11419  0694  0833               	movf	(_Blick_tickPointMsec+1)^(0+128),w
 11420  0695  00B1               	movwf	(_Blick_tickPoint+1)^(0+128)
 11421  0696  0832               	movf	_Blick_tickPointMsec^(0+128),w
 11422  0697  00B0               	movwf	_Blick_tickPoint^(0+128)
 11423                           
 11424                           ;LED_Ctrl.c: 46: else
 11425                           ;LED_Ctrl.c: 47: {
 11426                           ;LED_Ctrl.c: 48: return 0;
 11427                           ;	Return value of _LedONStartConfig is never used
 11428                           
 11429                           ;LED_Ctrl.c: 45: }
 11430                           
 11431                           ;LED_Ctrl.c: 44: return 1;
 11432                           ;	Return value of _LedONStartConfig is never used
 11433  0698  0008               	return
 11434  0699                     __end_of_LedONStartConfig:	
 11435                           
 11436                           	psect	text50
 11437  0F36                     __ptext50:	
 11438 ;; *************** function ___wmul *****************
 11439 ;; Defined at:
 11440 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11443 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;  product         2    4[BANK0 ] unsigned int 
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  2    0[BANK0 ] unsigned int 
 11448 ;; Registers used:
 11449 ;;		wreg, status,2, status,0
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11455 ;;      Params:         0       4       0       0       0       0       0       0
 11456 ;;      Locals:         0       2       0       0       0       0       0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0
 11458 ;;      Totals:         0       6       0       0       0       0       0       0
 11459 ;;Total ram usage:        6 bytes
 11460 ;; Hardware stack levels used:    1
 11461 ;; Hardware stack levels required when called:    5
 11462 ;; This function calls:
 11463 ;;		Nothing
 11464 ;; This function is called by:
 11465 ;;		_LedONStartConfig
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           
 11470                           ;psect for function ___wmul
 11471  0F36                     ___wmul:	
 11472                           
 11473                           ;incstack = 0
 11474                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11475  0F36  0020               	movlb	0	; select bank0
 11476  0F37  01CC               	clrf	___wmul@product
 11477  0F38  01CD               	clrf	___wmul@product+1
 11478  0F39                     l3643:	
 11479  0F39  1C48               	btfss	___wmul@multiplier,0
 11480  0F3A  2F3F               	goto	l1271
 11481  0F3B  084A               	movf	___wmul@multiplicand,w
 11482  0F3C  07CC               	addwf	___wmul@product,f
 11483  0F3D  084B               	movf	___wmul@multiplicand+1,w
 11484  0F3E  3DCD               	addwfc	___wmul@product+1,f
 11485  0F3F                     l1271:	
 11486  0F3F  3001               	movlw	1
 11487  0F40                     u1985:	
 11488  0F40  35CA               	lslf	___wmul@multiplicand,f
 11489  0F41  0DCB               	rlf	___wmul@multiplicand+1,f
 11490  0F42  0B89               	decfsz	9,f
 11491  0F43  2F40               	goto	u1985
 11492  0F44  3001               	movlw	1
 11493  0F45                     u1995:	
 11494  0F45  36C9               	lsrf	___wmul@multiplier+1,f
 11495  0F46  0CC8               	rrf	___wmul@multiplier,f
 11496  0F47  0B89               	decfsz	9,f
 11497  0F48  2F45               	goto	u1995
 11498  0F49  0848               	movf	___wmul@multiplier,w
 11499  0F4A  0449               	iorwf	___wmul@multiplier+1,w
 11500  0F4B  1D03               	btfss	3,2
 11501  0F4C  2F39               	goto	l3643
 11502  0F4D  084D               	movf	___wmul@product+1,w
 11503  0F4E  00C9               	movwf	?___wmul+1
 11504  0F4F  084C               	movf	___wmul@product,w
 11505  0F50  00C8               	movwf	?___wmul
 11506  0F51  0008               	return
 11507  0F52                     __end_of___wmul:	
 11508                           
 11509                           	psect	text51
 11510  074D                     __ptext51:	
 11511 ;; *************** function ___lwdiv *****************
 11512 ;; Defined at:
 11513 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;  divisor         2    0[BANK0 ] unsigned int 
 11516 ;;  dividend        2    2[BANK0 ] unsigned int 
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;  quotient        2    5[BANK0 ] unsigned int 
 11519 ;;  counter         1    7[BANK0 ] unsigned char 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  2    0[BANK0 ] unsigned int 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11529 ;;      Params:         0       4       0       0       0       0       0       0
 11530 ;;      Locals:         0       3       0       0       0       0       0       0
 11531 ;;      Temps:          0       1       0       0       0       0       0       0
 11532 ;;      Totals:         0       8       0       0       0       0       0       0
 11533 ;;Total ram usage:        8 bytes
 11534 ;; Hardware stack levels used:    1
 11535 ;; Hardware stack levels required when called:    5
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_LedONStartConfig
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           
 11544                           ;psect for function ___lwdiv
 11545  074D                     ___lwdiv:	
 11546                           
 11547                           ;incstack = 0
 11548                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11549  074D  0020               	movlb	0	; select bank0
 11550  074E  01CD               	clrf	___lwdiv@quotient
 11551  074F  01CE               	clrf	___lwdiv@quotient+1
 11552  0750  0848               	movf	___lwdiv@divisor,w
 11553  0751  0449               	iorwf	___lwdiv@divisor+1,w
 11554  0752  1903               	btfsc	3,2
 11555  0753  2F7D               	goto	l3677
 11556  0754  01CF               	clrf	___lwdiv@counter
 11557  0755  0ACF               	incf	___lwdiv@counter,f
 11558  0756                     l3665:	
 11559  0756  1BC9               	btfsc	___lwdiv@divisor+1,7
 11560  0757  2F62               	goto	l3667
 11561  0758  3001               	movlw	1
 11562  0759                     u2025:	
 11563  0759  35C8               	lslf	___lwdiv@divisor,f
 11564  075A  0DC9               	rlf	___lwdiv@divisor+1,f
 11565  075B  0B89               	decfsz	9,f
 11566  075C  2F59               	goto	u2025
 11567  075D  3001               	movlw	1
 11568  075E  00CC               	movwf	??___lwdiv
 11569  075F  084C               	movf	??___lwdiv,w
 11570  0760  07CF               	addwf	___lwdiv@counter,f
 11571  0761  2F56               	goto	l3665
 11572  0762                     l3667:	
 11573  0762  3001               	movlw	1
 11574  0763                     u2045:	
 11575  0763  35CD               	lslf	___lwdiv@quotient,f
 11576  0764  0DCE               	rlf	___lwdiv@quotient+1,f
 11577  0765  0B89               	decfsz	9,f
 11578  0766  2F63               	goto	u2045
 11579  0767  0849               	movf	___lwdiv@divisor+1,w
 11580  0768  024B               	subwf	___lwdiv@dividend+1,w
 11581  0769  1D03               	skipz
 11582  076A  2F6D               	goto	u2055
 11583  076B  0848               	movf	___lwdiv@divisor,w
 11584  076C  024A               	subwf	___lwdiv@dividend,w
 11585  076D                     u2055:	
 11586  076D  1C03               	skipc
 11587  076E  2F74               	goto	l3673
 11588  076F  0848               	movf	___lwdiv@divisor,w
 11589  0770  02CA               	subwf	___lwdiv@dividend,f
 11590  0771  0849               	movf	___lwdiv@divisor+1,w
 11591  0772  3BCB               	subwfb	___lwdiv@dividend+1,f
 11592  0773  144D               	bsf	___lwdiv@quotient,0
 11593  0774                     l3673:	
 11594  0774  3001               	movlw	1
 11595  0775                     u2065:	
 11596  0775  36C9               	lsrf	___lwdiv@divisor+1,f
 11597  0776  0CC8               	rrf	___lwdiv@divisor,f
 11598  0777  0B89               	decfsz	9,f
 11599  0778  2F75               	goto	u2065
 11600  0779  3001               	movlw	1
 11601  077A  02CF               	subwf	___lwdiv@counter,f
 11602  077B  1D03               	btfss	3,2
 11603  077C  2F62               	goto	l3667
 11604  077D                     l3677:	
 11605  077D  084E               	movf	___lwdiv@quotient+1,w
 11606  077E  00C9               	movwf	?___lwdiv+1
 11607  077F  084D               	movf	___lwdiv@quotient,w
 11608  0780  00C8               	movwf	?___lwdiv
 11609  0781  0008               	return
 11610  0782                     __end_of___lwdiv:	
 11611                           
 11612                           	psect	intentry
 11613  0004                     __pintentry:	
 11614 ;; *************** function _INTERRUPT_InterruptManager *****************
 11615 ;; Defined at:
 11616 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11617 ;; Parameters:    Size  Location     Type
 11618 ;;		None
 11619 ;; Auto vars:     Size  Location     Type
 11620 ;;		None
 11621 ;; Return value:  Size  Location     Type
 11622 ;;                  1    wreg      void 
 11623 ;; Registers used:
 11624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11625 ;; Tracked objects:
 11626 ;;		On entry : 0/0
 11627 ;;		On exit  : 0/0
 11628 ;;		Unchanged: 0/0
 11629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11630 ;;      Params:         0       0       0       0       0       0       0       0
 11631 ;;      Locals:         0       0       0       0       0       0       0       0
 11632 ;;      Temps:          1       0       0       0       0       0       0       0
 11633 ;;      Totals:         1       0       0       0       0       0       0       0
 11634 ;;Total ram usage:        1 bytes
 11635 ;; Hardware stack levels used:    1
 11636 ;; Hardware stack levels required when called:    4
 11637 ;; This function calls:
 11638 ;;		_CCP1_CaptureISR
 11639 ;;		_INT_ISR
 11640 ;;		_PIN_MANAGER_IOC
 11641 ;;		_TMR0_ISR
 11642 ;;		_TMR3_ISR
 11643 ;;		_TMR5_ISR
 11644 ;; This function is called by:
 11645 ;;		Interrupt level 1
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649  0004                     _INTERRUPT_InterruptManager:	
 11650                           
 11651                           ;incstack = 0
 11652  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11653                           
 11654                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11655  0005  3180               	pagesel	$
 11656  0006  0020               	movlb	0	; select bank0
 11657  0007  087F               	movf	127,w
 11658  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
 11659                           
 11660                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11661  0009  0021               	movlb	1	; select bank1
 11662  000A  1E90               	btfss	16,5	;volatile
 11663  000B  2813               	goto	i1l430
 11664  000C  0020               	movlb	0	; select bank0
 11665  000D  1E90               	btfss	16,5	;volatile
 11666  000E  2813               	goto	i1l430
 11667                           
 11668                           ;interrupt_manager.c: 55: {
 11669                           ;interrupt_manager.c: 56: TMR0_ISR();
 11670  000F  318C  24E4  3180   	fcall	_TMR0_ISR
 11671                           
 11672                           ;interrupt_manager.c: 57: }
 11673  0012  2849               	goto	i1l442
 11674  0013                     i1l430:	
 11675                           
 11676                           ;interrupt_manager.c: 58: else if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 11677  0013  0021               	movlb	1	; select bank1
 11678  0014  1C10               	btfss	16,0	;volatile
 11679  0015  281D               	goto	i1l432
 11680  0016  0020               	movlb	0	; select bank0
 11681  0017  1C10               	btfss	16,0	;volatile
 11682  0018  281D               	goto	i1l432
 11683                           
 11684                           ;interrupt_manager.c: 59: {
 11685                           ;interrupt_manager.c: 60: INT_ISR();
 11686  0019  318C  24DF  3180   	fcall	_INT_ISR
 11687                           
 11688                           ;interrupt_manager.c: 61: }
 11689  001C  2849               	goto	i1l442
 11690  001D                     i1l432:	
 11691                           
 11692                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE4bits.TMR5IE == 1 && PIR4bi
      +                          ts.TMR5IF == 1)
 11693  001D  1F0B               	btfss	11,6	;volatile
 11694  001E  2829               	goto	i1l434
 11695  001F  0021               	movlb	1	; select bank1
 11696  0020  1E14               	btfss	20,4	;volatile
 11697  0021  2829               	goto	i1l434
 11698  0022  0020               	movlb	0	; select bank0
 11699  0023  1E14               	btfss	20,4	;volatile
 11700  0024  2829               	goto	i1l434
 11701                           
 11702                           ;interrupt_manager.c: 63: {
 11703                           ;interrupt_manager.c: 64: TMR5_ISR();
 11704  0025  318E  2660  3180   	fcall	_TMR5_ISR
 11705                           
 11706                           ;interrupt_manager.c: 65: }
 11707  0028  2849               	goto	i1l442
 11708  0029                     i1l434:	
 11709                           
 11710                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE3bits.TMR3IE == 1 && PIR3bi
      +                          ts.TMR3IF == 1)
 11711  0029  1F0B               	btfss	11,6	;volatile
 11712  002A  2835               	goto	i1l436
 11713  002B  0021               	movlb	1	; select bank1
 11714  002C  1E13               	btfss	19,4	;volatile
 11715  002D  2835               	goto	i1l436
 11716  002E  0020               	movlb	0	; select bank0
 11717  002F  1E13               	btfss	19,4	;volatile
 11718  0030  2835               	goto	i1l436
 11719                           
 11720                           ;interrupt_manager.c: 67: {
 11721                           ;interrupt_manager.c: 68: TMR3_ISR();
 11722  0031  318E  264C  3180   	fcall	_TMR3_ISR
 11723                           
 11724                           ;interrupt_manager.c: 69: }
 11725  0034  2849               	goto	i1l442
 11726  0035                     i1l436:	
 11727                           
 11728                           ;interrupt_manager.c: 70: else if(INTCONbits.PEIE == 1 && PIE4bits.CCP1IE == 1 && PIR4bi
      +                          ts.CCP1IF == 1)
 11729  0035  1F0B               	btfss	11,6	;volatile
 11730  0036  2841               	goto	i1l438
 11731  0037  0021               	movlb	1	; select bank1
 11732  0038  1C14               	btfss	20,0	;volatile
 11733  0039  2841               	goto	i1l438
 11734  003A  0020               	movlb	0	; select bank0
 11735  003B  1C14               	btfss	20,0	;volatile
 11736  003C  2841               	goto	i1l438
 11737                           
 11738                           ;interrupt_manager.c: 71: {
 11739                           ;interrupt_manager.c: 72: CCP1_CaptureISR();
 11740  003D  318E  263A  3180   	fcall	_CCP1_CaptureISR
 11741                           
 11742                           ;interrupt_manager.c: 73: }
 11743  0040  2849               	goto	i1l442
 11744  0041                     i1l438:	
 11745                           
 11746                           ;interrupt_manager.c: 74: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 11747  0041  0021               	movlb	1	; select bank1
 11748  0042  1E10               	btfss	16,4	;volatile
 11749  0043  2849               	goto	i1l442
 11750  0044  0020               	movlb	0	; select bank0
 11751  0045  1E10               	btfss	16,4	;volatile
 11752  0046  2849               	goto	i1l442
 11753                           
 11754                           ;interrupt_manager.c: 75: {
 11755                           ;interrupt_manager.c: 76: PIN_MANAGER_IOC();
 11756  0047  318D  2589         	fcall	_PIN_MANAGER_IOC
 11757  0049                     i1l442:	
 11758                           ;interrupt_manager.c: 78: else
 11759                           ;interrupt_manager.c: 79: {
 11760                           
 11761                           ;interrupt_manager.c: 77: }
 11762                           
 11763  0049  0877               	movf	??_INTERRUPT_InterruptManager,w
 11764  004A  0020               	movlb	0	; select bank0
 11765  004B  00FF               	movwf	127
 11766  004C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11767  004D  0009               	retfie
 11768  004E                     __end_of_INTERRUPT_InterruptManager:	
 11769                           
 11770                           	psect	text53
 11771  0E60                     __ptext53:	
 11772 ;; *************** function _TMR5_ISR *****************
 11773 ;; Defined at:
 11774 ;;		line 156 in file "mcc_generated_files/tmr5.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;		None
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;		None
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      void 
 11781 ;; Registers used:
 11782 ;;		wreg, status,2, status,0, pclath, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11788 ;;      Params:         0       0       0       0       0       0       0       0
 11789 ;;      Locals:         0       0       0       0       0       0       0       0
 11790 ;;      Temps:          0       0       0       0       0       0       0       0
 11791 ;;      Totals:         0       0       0       0       0       0       0       0
 11792 ;;Total ram usage:        0 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:    2
 11795 ;; This function calls:
 11796 ;;		Absolute function
 11797 ;;		_TMR5_DefaultInterruptHandler
 11798 ;; This function is called by:
 11799 ;;		_INTERRUPT_InterruptManager
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803                           
 11804                           ;psect for function _TMR5_ISR
 11805  0E60                     _TMR5_ISR:	
 11806                           
 11807                           ;tmr5.c: 160: PIR4bits.TMR5IF = 0;
 11808                           
 11809                           ;incstack = 0
 11810                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 11811  0E60  0020               	movlb	0	; select bank0
 11812  0E61  1214               	bcf	20,4	;volatile
 11813                           
 11814                           ;tmr5.c: 162: TMR5H = (timer5ReloadVal >> 8);
 11815  0E62  086E               	movf	_timer5ReloadVal+1,w	;volatile
 11816  0E63  0028               	movlb	8	; select bank8
 11817  0E64  0099               	movwf	25	;volatile
 11818                           
 11819                           ;tmr5.c: 163: TMR5L = timer5ReloadVal;
 11820  0E65  0020               	movlb	0	; select bank0
 11821  0E66  086D               	movf	_timer5ReloadVal,w	;volatile
 11822  0E67  0028               	movlb	8	; select bank8
 11823  0E68  0098               	movwf	24	;volatile
 11824                           
 11825                           ;tmr5.c: 165: if(TMR5_InterruptHandler)
 11826  0E69  0021               	movlb	1	; select bank1
 11827  0E6A  084A               	movf	_TMR5_InterruptHandler^(0+128),w
 11828  0E6B  044B               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 11829  0E6C  1903               	btfsc	3,2
 11830  0E6D  0008               	return
 11831                           
 11832                           ;tmr5.c: 166: {
 11833                           ;tmr5.c: 167: TMR5_InterruptHandler();
 11834  0E6E  084B               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 11835  0E6F  008A               	movwf	10
 11836  0E70  084A               	movf	_TMR5_InterruptHandler^(0+128),w
 11837  0E71  000A               	callw
 11838  0E72  318E               	pagesel	$
 11839  0E73  0008               	return
 11840  0E74                     __end_of_TMR5_ISR:	
 11841                           
 11842                           	psect	text54
 11843  0CBD                     __ptext54:	
 11844 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 11845 ;; Defined at:
 11846 ;;		line 176 in file "mcc_generated_files/tmr5.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;		None
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      void 
 11853 ;; Registers used:
 11854 ;;		status,2, status,0, pclath, cstack
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11860 ;;      Params:         0       0       0       0       0       0       0       0
 11861 ;;      Locals:         0       0       0       0       0       0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0
 11863 ;;      Totals:         0       0       0       0       0       0       0       0
 11864 ;;Total ram usage:        0 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:    1
 11867 ;; This function calls:
 11868 ;;		_Timer5_Overflow
 11869 ;; This function is called by:
 11870 ;;		_TMR5_Initialize
 11871 ;;		_TMR5_ISR
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           
 11876                           ;psect for function _TMR5_DefaultInterruptHandler
 11877  0CBD                     _TMR5_DefaultInterruptHandler:	
 11878                           
 11879                           ;tmr5.c: 178: Timer5_Overflow();
 11880                           
 11881                           ;incstack = 0
 11882                           ; Regs used in _TMR5_DefaultInterruptHandler: [status,2+status,0+pclath+cstack]
 11883  0CBD  3180  2002         	fcall	_Timer5_Overflow
 11884  0CBF  0008               	return
 11885  0CC0                     __end_of_TMR5_DefaultInterruptHandler:	
 11886                           
 11887                           	psect	text55
 11888  0002                     __ptext55:	
 11889 ;; *************** function _Timer5_Overflow *****************
 11890 ;; Defined at:
 11891 ;;		line 648 in file "main.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;		None
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		None
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11905 ;;      Params:         0       0       0       0       0       0       0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0
 11908 ;;      Totals:         0       0       0       0       0       0       0       0
 11909 ;;Total ram usage:        0 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_TMR5_DefaultInterruptHandler
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           
 11919                           ;psect for function _Timer5_Overflow
 11920  0002                     _Timer5_Overflow:	
 11921                           
 11922                           ;incstack = 0
 11923                           ; Regs used in _Timer5_Overflow: []
 11924  0002  0008               	return
 11925  0003                     __end_of_Timer5_Overflow:	
 11926                           
 11927                           	psect	text56
 11928  0E4C                     __ptext56:	
 11929 ;; *************** function _TMR3_ISR *****************
 11930 ;; Defined at:
 11931 ;;		line 156 in file "mcc_generated_files/tmr3.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;		None
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  1    wreg      void 
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11945 ;;      Params:         0       0       0       0       0       0       0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0
 11948 ;;      Totals:         0       0       0       0       0       0       0       0
 11949 ;;Total ram usage:        0 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    2
 11952 ;; This function calls:
 11953 ;;		Absolute function
 11954 ;;		_TMR3_DefaultInterruptHandler
 11955 ;; This function is called by:
 11956 ;;		_INTERRUPT_InterruptManager
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           
 11961                           ;psect for function _TMR3_ISR
 11962  0E4C                     _TMR3_ISR:	
 11963                           
 11964                           ;tmr3.c: 160: PIR3bits.TMR3IF = 0;
 11965                           
 11966                           ;incstack = 0
 11967                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 11968  0E4C  0020               	movlb	0	; select bank0
 11969  0E4D  1213               	bcf	19,4	;volatile
 11970                           
 11971                           ;tmr3.c: 162: TMR3H = (timer3ReloadVal >> 8);
 11972  0E4E  086C               	movf	_timer3ReloadVal+1,w	;volatile
 11973  0E4F  0028               	movlb	8	; select bank8
 11974  0E50  0092               	movwf	18	;volatile
 11975                           
 11976                           ;tmr3.c: 163: TMR3L = timer3ReloadVal;
 11977  0E51  0020               	movlb	0	; select bank0
 11978  0E52  086B               	movf	_timer3ReloadVal,w	;volatile
 11979  0E53  0028               	movlb	8	; select bank8
 11980  0E54  0091               	movwf	17	;volatile
 11981                           
 11982                           ;tmr3.c: 165: if(TMR3_InterruptHandler)
 11983  0E55  0021               	movlb	1	; select bank1
 11984  0E56  0848               	movf	_TMR3_InterruptHandler^(0+128),w
 11985  0E57  0449               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 11986  0E58  1903               	btfsc	3,2
 11987  0E59  0008               	return
 11988                           
 11989                           ;tmr3.c: 166: {
 11990                           ;tmr3.c: 167: TMR3_InterruptHandler();
 11991  0E5A  0849               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 11992  0E5B  008A               	movwf	10
 11993  0E5C  0848               	movf	_TMR3_InterruptHandler^(0+128),w
 11994  0E5D  000A               	callw
 11995  0E5E  318E               	pagesel	$
 11996  0E5F  0008               	return
 11997  0E60                     __end_of_TMR3_ISR:	
 11998                           
 11999                           	psect	text57
 12000  0CBA                     __ptext57:	
 12001 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 12002 ;; Defined at:
 12003 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;		None
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;		None
 12008 ;; Return value:  Size  Location     Type
 12009 ;;                  1    wreg      void 
 12010 ;; Registers used:
 12011 ;;		wreg, status,2, status,0, pclath, cstack
 12012 ;; Tracked objects:
 12013 ;;		On entry : 0/0
 12014 ;;		On exit  : 0/0
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12017 ;;      Params:         0       0       0       0       0       0       0       0
 12018 ;;      Locals:         0       0       0       0       0       0       0       0
 12019 ;;      Temps:          0       0       0       0       0       0       0       0
 12020 ;;      Totals:         0       0       0       0       0       0       0       0
 12021 ;;Total ram usage:        0 bytes
 12022 ;; Hardware stack levels used:    1
 12023 ;; Hardware stack levels required when called:    1
 12024 ;; This function calls:
 12025 ;;		_Timer3_Overflow
 12026 ;; This function is called by:
 12027 ;;		_TMR3_Initialize
 12028 ;;		_TMR3_ISR
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           
 12033                           ;psect for function _TMR3_DefaultInterruptHandler
 12034  0CBA                     _TMR3_DefaultInterruptHandler:	
 12035                           
 12036                           ;tmr3.c: 178: Timer3_Overflow();
 12037                           
 12038                           ;incstack = 0
 12039                           ; Regs used in _TMR3_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 12040  0CBA  318F  27DA         	fcall	_Timer3_Overflow
 12041  0CBC  0008               	return
 12042  0CBD                     __end_of_TMR3_DefaultInterruptHandler:	
 12043                           
 12044                           	psect	text58
 12045  0FDA                     __ptext58:	
 12046 ;; *************** function _Timer3_Overflow *****************
 12047 ;; Defined at:
 12048 ;;		line 641 in file "main.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;		None
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;		None
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, status,2, status,0
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12062 ;;      Params:         0       0       0       0       0       0       0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0
 12064 ;;      Temps:          4       0       0       0       0       0       0       0
 12065 ;;      Totals:         4       0       0       0       0       0       0       0
 12066 ;;Total ram usage:        4 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; This function calls:
 12069 ;;		Nothing
 12070 ;; This function is called by:
 12071 ;;		_TMR3_DefaultInterruptHandler
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           
 12076                           ;psect for function _Timer3_Overflow
 12077  0FDA                     _Timer3_Overflow:	
 12078                           
 12079                           ;main.c: 643: EncEdgeTimeInterval= EncEdgeTimeInterval + 0x0000FFFF;
 12080                           
 12081                           ;incstack = 0
 12082                           ; Regs used in _Timer3_Overflow: [wreg+status,2+status,0]
 12083  0FDA  30FF               	movlw	255
 12084  0FDB  00F0               	movwf	??_Timer3_Overflow
 12085  0FDC  30FF               	movlw	255
 12086  0FDD  00F1               	movwf	??_Timer3_Overflow+1
 12087  0FDE  3000               	movlw	0
 12088  0FDF  00F2               	movwf	??_Timer3_Overflow+2
 12089  0FE0  3000               	movlw	0
 12090  0FE1  00F3               	movwf	??_Timer3_Overflow+3
 12091  0FE2  0020               	movlb	0	; select bank0
 12092  0FE3  0820               	movf	_EncEdgeTimeInterval,w
 12093  0FE4  07F0               	addwf	??_Timer3_Overflow,f
 12094  0FE5  0821               	movf	_EncEdgeTimeInterval+1,w
 12095  0FE6  3DF1               	addwfc	??_Timer3_Overflow+1,f
 12096  0FE7  0822               	movf	_EncEdgeTimeInterval+2,w
 12097  0FE8  3DF2               	addwfc	??_Timer3_Overflow+2,f
 12098  0FE9  0823               	movf	_EncEdgeTimeInterval+3,w
 12099  0FEA  3DF3               	addwfc	??_Timer3_Overflow+3,f
 12100  0FEB  0873               	movf	??_Timer3_Overflow+3,w
 12101  0FEC  00A3               	movwf	_EncEdgeTimeInterval+3
 12102  0FED  0872               	movf	??_Timer3_Overflow+2,w
 12103  0FEE  00A2               	movwf	_EncEdgeTimeInterval+2
 12104  0FEF  0871               	movf	??_Timer3_Overflow+1,w
 12105  0FF0  00A1               	movwf	_EncEdgeTimeInterval+1
 12106  0FF1  0870               	movf	??_Timer3_Overflow,w
 12107  0FF2  00A0               	movwf	_EncEdgeTimeInterval
 12108                           
 12109                           ;main.c: 644: if(EncEdgeTimeInterval >0xEFFFFFFF)
 12110  0FF3  30F0               	movlw	240
 12111  0FF4  0223               	subwf	_EncEdgeTimeInterval+3,w
 12112  0FF5  1C03               	btfss	3,0
 12113  0FF6  0008               	return
 12114                           
 12115                           ;main.c: 645: EncEdgeTimeInterval=0xEFFFFFFF;
 12116  0FF7  30EF               	movlw	239
 12117  0FF8  00A3               	movwf	_EncEdgeTimeInterval+3
 12118  0FF9  30FF               	movlw	255
 12119  0FFA  00A2               	movwf	_EncEdgeTimeInterval+2
 12120  0FFB  30FF               	movlw	255
 12121  0FFC  00A1               	movwf	_EncEdgeTimeInterval+1
 12122  0FFD  30FF               	movlw	255
 12123  0FFE  00A0               	movwf	_EncEdgeTimeInterval
 12124  0FFF  0008               	return
 12125  1000                     __end_of_Timer3_Overflow:	
 12126                           
 12127                           	psect	text59
 12128  0CE4                     __ptext59:	
 12129 ;; *************** function _TMR0_ISR *****************
 12130 ;; Defined at:
 12131 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;		None
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      void 
 12138 ;; Registers used:
 12139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12145 ;;      Params:         0       0       0       0       0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0
 12147 ;;      Temps:          0       0       0       0       0       0       0       0
 12148 ;;      Totals:         0       0       0       0       0       0       0       0
 12149 ;;Total ram usage:        0 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:    3
 12152 ;; This function calls:
 12153 ;;		_TMR0_CallBack
 12154 ;; This function is called by:
 12155 ;;		_INTERRUPT_InterruptManager
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           
 12160                           ;psect for function _TMR0_ISR
 12161  0CE4                     _TMR0_ISR:	
 12162                           
 12163                           ;tmr0.c: 126: PIR0bits.TMR0IF = 0;
 12164                           
 12165                           ;incstack = 0
 12166                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12167  0CE4  0020               	movlb	0	; select bank0
 12168  0CE5  1290               	bcf	16,5	;volatile
 12169                           
 12170                           ;tmr0.c: 129: TMR0_CallBack();
 12171  0CE6  318D  25EE         	fcall	_TMR0_CallBack
 12172  0CE8  0008               	return
 12173  0CE9                     __end_of_TMR0_ISR:	
 12174                           
 12175                           	psect	text60
 12176  0DEE                     __ptext60:	
 12177 ;; *************** function _TMR0_CallBack *****************
 12178 ;; Defined at:
 12179 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;		None
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;		None
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12193 ;;      Params:         0       0       0       0       0       0       0       0
 12194 ;;      Locals:         0       0       0       0       0       0       0       0
 12195 ;;      Temps:          0       0       0       0       0       0       0       0
 12196 ;;      Totals:         0       0       0       0       0       0       0       0
 12197 ;;Total ram usage:        0 bytes
 12198 ;; Hardware stack levels used:    1
 12199 ;; Hardware stack levels required when called:    2
 12200 ;; This function calls:
 12201 ;;		Absolute function
 12202 ;;		_TMR0_DefaultInterruptHandler
 12203 ;;		_Timer0_tick10msecFunc
 12204 ;; This function is called by:
 12205 ;;		_TMR0_ISR
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           
 12210                           ;psect for function _TMR0_CallBack
 12211  0DEE                     _TMR0_CallBack:	
 12212                           
 12213                           ;tmr0.c: 137: Timer0_tick10msecFunc();
 12214                           
 12215                           ;incstack = 0
 12216                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12217  0DEE  318F  27B4  318D   	fcall	_Timer0_tick10msecFunc
 12218                           
 12219                           ;tmr0.c: 139: if(TMR0_InterruptHandler)
 12220  0DF1  0021               	movlb	1	; select bank1
 12221  0DF2  0846               	movf	_TMR0_InterruptHandler^(0+128),w
 12222  0DF3  0447               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 12223  0DF4  1903               	btfsc	3,2
 12224  0DF5  0008               	return
 12225                           
 12226                           ;tmr0.c: 140: {
 12227                           ;tmr0.c: 141: TMR0_InterruptHandler();
 12228  0DF6  0847               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 12229  0DF7  008A               	movwf	10
 12230  0DF8  0846               	movf	_TMR0_InterruptHandler^(0+128),w
 12231  0DF9  000A               	callw
 12232  0DFA  318D               	pagesel	$
 12233  0DFB  0008               	return
 12234  0DFC                     __end_of_TMR0_CallBack:	
 12235                           
 12236                           	psect	text61
 12237  0FB4                     __ptext61:	
 12238 ;; *************** function _Timer0_tick10msecFunc *****************
 12239 ;; Defined at:
 12240 ;;		line 653 in file "main.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;		None
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;		None
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  1    wreg      void 
 12247 ;; Registers used:
 12248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12254 ;;      Params:         0       0       0       0       0       0       0       0
 12255 ;;      Locals:         0       0       0       0       0       0       0       0
 12256 ;;      Temps:          4       0       0       0       0       0       0       0
 12257 ;;      Totals:         4       0       0       0       0       0       0       0
 12258 ;;Total ram usage:        4 bytes
 12259 ;; Hardware stack levels used:    1
 12260 ;; Hardware stack levels required when called:    1
 12261 ;; This function calls:
 12262 ;;		_LedON_Control_10msec
 12263 ;; This function is called by:
 12264 ;;		_TMR0_CallBack
 12265 ;; This function uses a non-reentrant model
 12266 ;;
 12267                           
 12268                           
 12269                           ;psect for function _Timer0_tick10msecFunc
 12270  0FB4                     _Timer0_tick10msecFunc:	
 12271                           
 12272                           ;main.c: 655: LedON_Control_10msec();
 12273                           
 12274                           ;incstack = 0
 12275                           ; Regs used in _Timer0_tick10msecFunc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12276  0FB4  3185  25C1  318F   	fcall	_LedON_Control_10msec
 12277                           
 12278                           ;main.c: 657: TimertickMsec= TimertickMsec+5;
 12279  0FB7  3005               	movlw	5
 12280  0FB8  00F0               	movwf	??_Timer0_tick10msecFunc
 12281  0FB9  3000               	movlw	0
 12282  0FBA  00F1               	movwf	??_Timer0_tick10msecFunc+1
 12283  0FBB  3000               	movlw	0
 12284  0FBC  00F2               	movwf	??_Timer0_tick10msecFunc+2
 12285  0FBD  3000               	movlw	0
 12286  0FBE  00F3               	movwf	??_Timer0_tick10msecFunc+3
 12287  0FBF  0021               	movlb	1	; select bank1
 12288  0FC0  0820               	movf	_TimertickMsec^(0+128),w
 12289  0FC1  07F0               	addwf	??_Timer0_tick10msecFunc,f
 12290  0FC2  0821               	movf	(_TimertickMsec+1)^(0+128),w
 12291  0FC3  3DF1               	addwfc	??_Timer0_tick10msecFunc+1,f
 12292  0FC4  0822               	movf	(_TimertickMsec+2)^(0+128),w
 12293  0FC5  3DF2               	addwfc	??_Timer0_tick10msecFunc+2,f
 12294  0FC6  0823               	movf	(_TimertickMsec+3)^(0+128),w
 12295  0FC7  3DF3               	addwfc	??_Timer0_tick10msecFunc+3,f
 12296  0FC8  0873               	movf	??_Timer0_tick10msecFunc+3,w
 12297  0FC9  00A3               	movwf	(_TimertickMsec+3)^(0+128)
 12298  0FCA  0872               	movf	??_Timer0_tick10msecFunc+2,w
 12299  0FCB  00A2               	movwf	(_TimertickMsec+2)^(0+128)
 12300  0FCC  0871               	movf	??_Timer0_tick10msecFunc+1,w
 12301  0FCD  00A1               	movwf	(_TimertickMsec+1)^(0+128)
 12302  0FCE  0870               	movf	??_Timer0_tick10msecFunc,w
 12303  0FCF  00A0               	movwf	_TimertickMsec^(0+128)
 12304                           
 12305                           ;main.c: 659: if(delayFlag==1)
 12306  0FD0  0020               	movlb	0	; select bank0
 12307  0FD1  0341               	decf	_delayFlag,w
 12308  0FD2  1D03               	btfss	3,2
 12309  0FD3  0008               	return
 12310                           
 12311                           ;main.c: 660: delayCount+=5;
 12312  0FD4  3005               	movlw	5
 12313  0FD5  0021               	movlb	1	; select bank1
 12314  0FD6  07B6               	addwf	_delayCount^(0+128),f
 12315  0FD7  3000               	movlw	0
 12316  0FD8  3DB7               	addwfc	(_delayCount+1)^(0+128),f
 12317  0FD9  0008               	return
 12318  0FDA                     __end_of_Timer0_tick10msecFunc:	
 12319                           
 12320                           	psect	text62
 12321  05C1                     __ptext62:	
 12322 ;; *************** function _LedON_Control_10msec *****************
 12323 ;; Defined at:
 12324 ;;		line 54 in file "LED_Ctrl.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12338 ;;      Params:         0       0       0       0       0       0       0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0
 12341 ;;      Totals:         0       0       0       0       0       0       0       0
 12342 ;;Total ram usage:        0 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_Timer0_tick10msecFunc
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           
 12352                           ;psect for function _LedON_Control_10msec
 12353  05C1                     _LedON_Control_10msec:	
 12354                           
 12355                           ;LED_Ctrl.c: 56: if(1==Led_ON)
 12356                           
 12357                           ;incstack = 0
 12358                           ; Regs used in _LedON_Control_10msec: [wreg-fsr0h+status,2+status,0]
 12359  05C1  0020               	movlb	0	; select bank0
 12360  05C2  033C               	decf	_Led_ON,w
 12361  05C3  1D03               	btfss	3,2
 12362  05C4  0008               	return
 12363                           
 12364                           ;LED_Ctrl.c: 57: {
 12365                           ;LED_Ctrl.c: 59: if(LED_msec_Cnt >= Blick_tickPoint)
 12366  05C5  0021               	movlb	1	; select bank1
 12367  05C6  0831               	movf	(_Blick_tickPoint+1)^(0+128),w
 12368  05C7  0020               	movlb	0	; select bank0
 12369  05C8  0227               	subwf	_LED_msec_Cnt+1,w
 12370  05C9  1D03               	skipz
 12371  05CA  2DCF               	goto	u141_25
 12372  05CB  0021               	movlb	1	; select bank1
 12373  05CC  0830               	movf	_Blick_tickPoint^(0+128),w
 12374  05CD  0020               	movlb	0	; select bank0
 12375  05CE  0226               	subwf	_LED_msec_Cnt,w
 12376  05CF                     u141_25:	
 12377  05CF  1803               	btfsc	3,0
 12378  05D0  2DF6               	goto	i1l3033
 12379  05D1  2E09               	goto	i1l3037
 12380  05D2                     i1l3025:	
 12381                           ;LED_Ctrl.c: 62: {
 12382                           ;LED_Ctrl.c: 63: case 0 : do { LATCbits.LATC0 = ~LATCbits.LATC0; } while(0);
 12383                           
 12384                           ;LED_Ctrl.c: 60: {
 12385                           ;LED_Ctrl.c: 61: switch(LED_Color)
 12386                           
 12387  05D2  1003               	clrc
 12388  05D3  0022               	movlb	2	; select bank2
 12389  05D4  1C0E               	btfss	14,0	;volatile
 12390  05D5  1403               	setc
 12391  05D6  1C03               	btfss	3,0
 12392  05D7  2DDB               	goto	u142_20
 12393  05D8  0022               	movlb	2	; select bank2
 12394  05D9  140E               	bsf	14,0	;volatile
 12395  05DA  2E02               	goto	i1l3035
 12396  05DB                     u142_20:	
 12397  05DB  0022               	movlb	2	; select bank2
 12398  05DC  100E               	bcf	14,0	;volatile
 12399                           
 12400                           ;LED_Ctrl.c: 64: break;
 12401  05DD  2E02               	goto	i1l3035
 12402  05DE                     i1l3027:	
 12403                           ;LED_Ctrl.c: 65: case 1 : do { LATCbits.LATC1 = ~LATCbits.LATC1; } while(0);
 12404                           
 12405  05DE  1003               	clrc
 12406  05DF  0022               	movlb	2	; select bank2
 12407  05E0  1C8E               	btfss	14,1	;volatile
 12408  05E1  1403               	setc
 12409  05E2  1C03               	btfss	3,0
 12410  05E3  2DE7               	goto	u144_20
 12411  05E4  0022               	movlb	2	; select bank2
 12412  05E5  148E               	bsf	14,1	;volatile
 12413  05E6  2E02               	goto	i1l3035
 12414  05E7                     u144_20:	
 12415  05E7  0022               	movlb	2	; select bank2
 12416  05E8  108E               	bcf	14,1	;volatile
 12417                           
 12418                           ;LED_Ctrl.c: 66: break;
 12419  05E9  2E02               	goto	i1l3035
 12420  05EA                     i1l3029:	
 12421                           ;LED_Ctrl.c: 67: case 2 : do { LATCbits.LATC2 = ~LATCbits.LATC2; } while(0);
 12422                           
 12423  05EA  1003               	clrc
 12424  05EB  0022               	movlb	2	; select bank2
 12425  05EC  1D0E               	btfss	14,2	;volatile
 12426  05ED  1403               	setc
 12427  05EE  1C03               	btfss	3,0
 12428  05EF  2DF3               	goto	u146_20
 12429  05F0  0022               	movlb	2	; select bank2
 12430  05F1  150E               	bsf	14,2	;volatile
 12431  05F2  2E02               	goto	i1l3035
 12432  05F3                     u146_20:	
 12433  05F3  0022               	movlb	2	; select bank2
 12434  05F4  110E               	bcf	14,2	;volatile
 12435                           
 12436                           ;LED_Ctrl.c: 70: }
 12437                           
 12438                           ;LED_Ctrl.c: 69: default : break;
 12439                           
 12440                           ;LED_Ctrl.c: 68: break;
 12441  05F5  2E02               	goto	i1l3035
 12442  05F6                     i1l3033:	
 12443  05F6  0020               	movlb	0	; select bank0
 12444  05F7  086F               	movf	_LED_Color,w
 12445                           
 12446                           ; Switch size 1, requested type "space"
 12447                           ; Number of cases is 3, Range of values is 0 to 2
 12448                           ; switch strategies available:
 12449                           ; Name         Instructions Cycles
 12450                           ; simple_byte           10     6 (average)
 12451                           ; direct_byte           12     6 (fixed)
 12452                           ; jumptable            260     6 (fixed)
 12453                           ;	Chosen strategy is simple_byte
 12454  05F8  3A00               	xorlw	0	; case 0
 12455  05F9  1903               	skipnz
 12456  05FA  2DD2               	goto	i1l3025
 12457  05FB  3A01               	xorlw	1	; case 1
 12458  05FC  1903               	skipnz
 12459  05FD  2DDE               	goto	i1l3027
 12460  05FE  3A03               	xorlw	3	; case 2
 12461  05FF  1903               	skipnz
 12462  0600  2DEA               	goto	i1l3029
 12463  0601  2E02               	goto	i1l3035
 12464  0602                     i1l3035:	
 12465                           
 12466                           ;LED_Ctrl.c: 73: Blick_tickPoint=Blick_tickPoint+Blick_tickPointMsec;
 12467  0602  0021               	movlb	1	; select bank1
 12468  0603  0832               	movf	_Blick_tickPointMsec^(0+128),w
 12469  0604  0730               	addwf	_Blick_tickPoint^(0+128),w
 12470  0605  00B0               	movwf	_Blick_tickPoint^(0+128)
 12471  0606  0833               	movf	(_Blick_tickPointMsec+1)^(0+128),w
 12472  0607  3D31               	addwfc	(_Blick_tickPoint+1)^(0+128),w
 12473  0608  00B1               	movwf	(_Blick_tickPoint+1)^(0+128)
 12474  0609                     i1l3037:	
 12475                           
 12476                           ;LED_Ctrl.c: 75: }
 12477                           ;LED_Ctrl.c: 77: if(LED_msec_Cnt > LedON_Duration_msec)
 12478  0609  0020               	movlb	0	; select bank0
 12479  060A  0827               	movf	_LED_msec_Cnt+1,w
 12480  060B  0225               	subwf	_LedON_Duration_msec+1,w
 12481  060C  1D03               	skipz
 12482  060D  2E10               	goto	u148_25
 12483  060E  0826               	movf	_LED_msec_Cnt,w
 12484  060F  0224               	subwf	_LedON_Duration_msec,w
 12485  0610                     u148_25:	
 12486  0610  1C03               	btfss	3,0
 12487  0611  2E1C               	goto	i1l3043
 12488  0612  2E2C               	goto	i1l3047
 12489  0613                     i1l1179:	
 12490                           ;LED_Ctrl.c: 80: {
 12491                           ;LED_Ctrl.c: 81: case 0 : do { LATCbits.LATC0 = 0; } while(0);
 12492                           
 12493                           ;LED_Ctrl.c: 78: {
 12494                           ;LED_Ctrl.c: 79: switch(LED_Color)
 12495                           
 12496  0613  0022               	movlb	2	; select bank2
 12497  0614  100E               	bcf	14,0	;volatile
 12498                           
 12499                           ;LED_Ctrl.c: 82: break;
 12500  0615  2E28               	goto	i1l3045
 12501  0616                     i1l1183:	
 12502                           ;LED_Ctrl.c: 83: case 1 : do { LATCbits.LATC1 = 0; } while(0);
 12503                           
 12504  0616  0022               	movlb	2	; select bank2
 12505  0617  108E               	bcf	14,1	;volatile
 12506                           
 12507                           ;LED_Ctrl.c: 84: break;
 12508  0618  2E28               	goto	i1l3045
 12509  0619                     i1l1186:	
 12510                           ;LED_Ctrl.c: 85: case 2 : do { LATCbits.LATC2 = 0; } while(0);
 12511                           
 12512  0619  0022               	movlb	2	; select bank2
 12513  061A  110E               	bcf	14,2	;volatile
 12514                           
 12515                           ;LED_Ctrl.c: 88: }
 12516                           
 12517                           ;LED_Ctrl.c: 87: default : break;
 12518                           
 12519                           ;LED_Ctrl.c: 86: break;
 12520  061B  2E28               	goto	i1l3045
 12521  061C                     i1l3043:	
 12522  061C  0020               	movlb	0	; select bank0
 12523  061D  086F               	movf	_LED_Color,w
 12524                           
 12525                           ; Switch size 1, requested type "space"
 12526                           ; Number of cases is 3, Range of values is 0 to 2
 12527                           ; switch strategies available:
 12528                           ; Name         Instructions Cycles
 12529                           ; simple_byte           10     6 (average)
 12530                           ; direct_byte           12     6 (fixed)
 12531                           ; jumptable            260     6 (fixed)
 12532                           ;	Chosen strategy is simple_byte
 12533  061E  3A00               	xorlw	0	; case 0
 12534  061F  1903               	skipnz
 12535  0620  2E13               	goto	i1l1179
 12536  0621  3A01               	xorlw	1	; case 1
 12537  0622  1903               	skipnz
 12538  0623  2E16               	goto	i1l1183
 12539  0624  3A03               	xorlw	3	; case 2
 12540  0625  1903               	skipnz
 12541  0626  2E19               	goto	i1l1186
 12542  0627  2E28               	goto	i1l3045
 12543  0628                     i1l3045:	
 12544                           
 12545                           ;LED_Ctrl.c: 90: Led_ON=0;
 12546  0628  0020               	movlb	0	; select bank0
 12547  0629  01BC               	clrf	_Led_ON
 12548                           
 12549                           ;LED_Ctrl.c: 91: LED_msec_Cnt=0;
 12550  062A  01A6               	clrf	_LED_msec_Cnt
 12551  062B  01A7               	clrf	_LED_msec_Cnt+1
 12552  062C                     i1l3047:	
 12553                           
 12554                           ;LED_Ctrl.c: 92: }
 12555                           ;LED_Ctrl.c: 94: LED_msec_Cnt+=5;
 12556  062C  3005               	movlw	5
 12557  062D  07A6               	addwf	_LED_msec_Cnt,f
 12558  062E  3000               	movlw	0
 12559  062F  3DA7               	addwfc	_LED_msec_Cnt+1,f
 12560  0630  0008               	return
 12561  0631                     __end_of_LedON_Control_10msec:	
 12562                           
 12563                           	psect	text63
 12564  0CB9                     __ptext63:	
 12565 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12566 ;; Defined at:
 12567 ;;		line 149 in file "mcc_generated_files/tmr0.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;		None
 12570 ;; Auto vars:     Size  Location     Type
 12571 ;;		None
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  1    wreg      void 
 12574 ;; Registers used:
 12575 ;;		None
 12576 ;; Tracked objects:
 12577 ;;		On entry : 0/0
 12578 ;;		On exit  : 0/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12581 ;;      Params:         0       0       0       0       0       0       0       0
 12582 ;;      Locals:         0       0       0       0       0       0       0       0
 12583 ;;      Temps:          0       0       0       0       0       0       0       0
 12584 ;;      Totals:         0       0       0       0       0       0       0       0
 12585 ;;Total ram usage:        0 bytes
 12586 ;; Hardware stack levels used:    1
 12587 ;; This function calls:
 12588 ;;		Nothing
 12589 ;; This function is called by:
 12590 ;;		_TMR0_Initialize
 12591 ;;		_TMR0_CallBack
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           
 12596                           ;psect for function _TMR0_DefaultInterruptHandler
 12597  0CB9                     _TMR0_DefaultInterruptHandler:	
 12598                           
 12599                           ;incstack = 0
 12600                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 12601  0CB9  0008               	return
 12602  0CBA                     __end_of_TMR0_DefaultInterruptHandler:	
 12603                           
 12604                           	psect	text64
 12605  0D89                     __ptext64:	
 12606 ;; *************** function _PIN_MANAGER_IOC *****************
 12607 ;; Defined at:
 12608 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2, status,0, pclath, cstack
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12622 ;;      Params:         0       0       0       0       0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    2
 12629 ;; This function calls:
 12630 ;;		_IOCCF4_ISR
 12631 ;;		_IOCCF5_ISR
 12632 ;; This function is called by:
 12633 ;;		_INTERRUPT_InterruptManager
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function _PIN_MANAGER_IOC
 12639  0D89                     _PIN_MANAGER_IOC:	
 12640                           
 12641                           ;pin_manager.c: 135: if(IOCCFbits.IOCCF4 == 1)
 12642                           
 12643                           ;incstack = 0
 12644                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 12645  0D89  0027               	movlb	7	; select bank7
 12646  0D8A  1E19               	btfss	25,4	;volatile
 12647  0D8B  2D8F               	goto	i1l6035
 12648                           
 12649                           ;pin_manager.c: 136: {
 12650                           ;pin_manager.c: 137: IOCCF4_ISR();
 12651  0D8C  318D  25B9  318D   	fcall	_IOCCF4_ISR
 12652  0D8F                     i1l6035:	
 12653                           
 12654                           ;pin_manager.c: 138: }
 12655                           ;pin_manager.c: 141: if(IOCCFbits.IOCCF5 == 1)
 12656  0D8F  0027               	movlb	7	; select bank7
 12657  0D90  1E99               	btfss	25,5	;volatile
 12658  0D91  0008               	return
 12659                           
 12660                           ;pin_manager.c: 142: {
 12661                           ;pin_manager.c: 143: IOCCF5_ISR();
 12662  0D92  318D  25C6         	fcall	_IOCCF5_ISR
 12663  0D94  0008               	return
 12664  0D95                     __end_of_PIN_MANAGER_IOC:	
 12665                           
 12666                           	psect	text65
 12667  0DC6                     __ptext65:	
 12668 ;; *************** function _IOCCF5_ISR *****************
 12669 ;; Defined at:
 12670 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, status,2, status,0, pclath, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12684 ;;      Params:         0       0       0       0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0
 12686 ;;      Temps:          0       0       0       0       0       0       0       0
 12687 ;;      Totals:         0       0       0       0       0       0       0       0
 12688 ;;Total ram usage:        0 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    1
 12691 ;; This function calls:
 12692 ;;		Absolute function
 12693 ;;		_IOCCF5_DefaultInterruptHandler
 12694 ;; This function is called by:
 12695 ;;		_PIN_MANAGER_IOC
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           
 12700                           ;psect for function _IOCCF5_ISR
 12701  0DC6                     _IOCCF5_ISR:	
 12702                           
 12703                           ;pin_manager.c: 187: if(IOCCF5_InterruptHandler)
 12704                           
 12705                           ;incstack = 0
 12706                           ; Regs used in _IOCCF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 12707  0DC6  0021               	movlb	1	; select bank1
 12708  0DC7  0842               	movf	_IOCCF5_InterruptHandler^(0+128),w
 12709  0DC8  0443               	iorwf	(_IOCCF5_InterruptHandler+1)^(0+128),w
 12710  0DC9  1903               	btfsc	3,2
 12711  0DCA  2DD0               	goto	i1l5993
 12712                           
 12713                           ;pin_manager.c: 188: {
 12714                           ;pin_manager.c: 189: IOCCF5_InterruptHandler();
 12715  0DCB  0843               	movf	(_IOCCF5_InterruptHandler+1)^(0+128),w
 12716  0DCC  008A               	movwf	10
 12717  0DCD  0842               	movf	_IOCCF5_InterruptHandler^(0+128),w
 12718  0DCE  000A               	callw
 12719  0DCF  318D               	pagesel	$
 12720  0DD0                     i1l5993:	
 12721                           
 12722                           ;pin_manager.c: 190: }
 12723                           ;pin_manager.c: 191: IOCCFbits.IOCCF5 = 0;
 12724  0DD0  0027               	movlb	7	; select bank7
 12725  0DD1  1299               	bcf	25,5	;volatile
 12726  0DD2  0008               	return
 12727  0DD3                     __end_of_IOCCF5_ISR:	
 12728                           
 12729                           	psect	text66
 12730  0CB8                     __ptext66:	
 12731 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
 12732 ;; Defined at:
 12733 ;;		line 204 in file "mcc_generated_files/pin_manager.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;		None
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;		None
 12738 ;; Return value:  Size  Location     Type
 12739 ;;                  1    wreg      void 
 12740 ;; Registers used:
 12741 ;;		None
 12742 ;; Tracked objects:
 12743 ;;		On entry : 0/0
 12744 ;;		On exit  : 0/0
 12745 ;;		Unchanged: 0/0
 12746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12747 ;;      Params:         0       0       0       0       0       0       0       0
 12748 ;;      Locals:         0       0       0       0       0       0       0       0
 12749 ;;      Temps:          0       0       0       0       0       0       0       0
 12750 ;;      Totals:         0       0       0       0       0       0       0       0
 12751 ;;Total ram usage:        0 bytes
 12752 ;; Hardware stack levels used:    1
 12753 ;; This function calls:
 12754 ;;		Nothing
 12755 ;; This function is called by:
 12756 ;;		_PIN_MANAGER_Initialize
 12757 ;;		_IOCCF5_ISR
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           
 12762                           ;psect for function _IOCCF5_DefaultInterruptHandler
 12763  0CB8                     _IOCCF5_DefaultInterruptHandler:	
 12764                           
 12765                           ;incstack = 0
 12766                           ; Regs used in _IOCCF5_DefaultInterruptHandler: []
 12767  0CB8  0008               	return
 12768  0CB9                     __end_of_IOCCF5_DefaultInterruptHandler:	
 12769                           
 12770                           	psect	text67
 12771  0DB9                     __ptext67:	
 12772 ;; *************** function _IOCCF4_ISR *****************
 12773 ;; Defined at:
 12774 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;		None
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;		None
 12779 ;; Return value:  Size  Location     Type
 12780 ;;                  1    wreg      void 
 12781 ;; Registers used:
 12782 ;;		wreg, status,2, status,0, pclath, cstack
 12783 ;; Tracked objects:
 12784 ;;		On entry : 0/0
 12785 ;;		On exit  : 0/0
 12786 ;;		Unchanged: 0/0
 12787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12788 ;;      Params:         0       0       0       0       0       0       0       0
 12789 ;;      Locals:         0       0       0       0       0       0       0       0
 12790 ;;      Temps:          0       0       0       0       0       0       0       0
 12791 ;;      Totals:         0       0       0       0       0       0       0       0
 12792 ;;Total ram usage:        0 bytes
 12793 ;; Hardware stack levels used:    1
 12794 ;; Hardware stack levels required when called:    1
 12795 ;; This function calls:
 12796 ;;		Absolute function
 12797 ;;		_IOCCF4_DefaultInterruptHandler
 12798 ;; This function is called by:
 12799 ;;		_PIN_MANAGER_IOC
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           
 12804                           ;psect for function _IOCCF4_ISR
 12805  0DB9                     _IOCCF4_ISR:	
 12806                           
 12807                           ;pin_manager.c: 157: if(IOCCF4_InterruptHandler)
 12808                           
 12809                           ;incstack = 0
 12810                           ; Regs used in _IOCCF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 12811  0DB9  0021               	movlb	1	; select bank1
 12812  0DBA  0844               	movf	_IOCCF4_InterruptHandler^(0+128),w
 12813  0DBB  0445               	iorwf	(_IOCCF4_InterruptHandler+1)^(0+128),w
 12814  0DBC  1903               	btfsc	3,2
 12815  0DBD  2DC3               	goto	i1l5987
 12816                           
 12817                           ;pin_manager.c: 158: {
 12818                           ;pin_manager.c: 159: IOCCF4_InterruptHandler();
 12819  0DBE  0845               	movf	(_IOCCF4_InterruptHandler+1)^(0+128),w
 12820  0DBF  008A               	movwf	10
 12821  0DC0  0844               	movf	_IOCCF4_InterruptHandler^(0+128),w
 12822  0DC1  000A               	callw
 12823  0DC2  318D               	pagesel	$
 12824  0DC3                     i1l5987:	
 12825                           
 12826                           ;pin_manager.c: 160: }
 12827                           ;pin_manager.c: 161: IOCCFbits.IOCCF4 = 0;
 12828  0DC3  0027               	movlb	7	; select bank7
 12829  0DC4  1219               	bcf	25,4	;volatile
 12830  0DC5  0008               	return
 12831  0DC6                     __end_of_IOCCF4_ISR:	
 12832                           
 12833                           	psect	text68
 12834  0CB7                     __ptext68:	
 12835 ;; *************** function _IOCCF4_DefaultInterruptHandler *****************
 12836 ;; Defined at:
 12837 ;;		line 174 in file "mcc_generated_files/pin_manager.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;		None
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  1    wreg      void 
 12844 ;; Registers used:
 12845 ;;		None
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12851 ;;      Params:         0       0       0       0       0       0       0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0
 12854 ;;      Totals:         0       0       0       0       0       0       0       0
 12855 ;;Total ram usage:        0 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; This function calls:
 12858 ;;		Nothing
 12859 ;; This function is called by:
 12860 ;;		_PIN_MANAGER_Initialize
 12861 ;;		_IOCCF4_ISR
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           
 12866                           ;psect for function _IOCCF4_DefaultInterruptHandler
 12867  0CB7                     _IOCCF4_DefaultInterruptHandler:	
 12868                           
 12869                           ;incstack = 0
 12870                           ; Regs used in _IOCCF4_DefaultInterruptHandler: []
 12871  0CB7  0008               	return
 12872  0CB8                     __end_of_IOCCF4_DefaultInterruptHandler:	
 12873                           
 12874                           	psect	text69
 12875  0CDF                     __ptext69:	
 12876 ;; *************** function _INT_ISR *****************
 12877 ;; Defined at:
 12878 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12879 ;; Parameters:    Size  Location     Type
 12880 ;;		None
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;		None
 12883 ;; Return value:  Size  Location     Type
 12884 ;;                  1    wreg      void 
 12885 ;; Registers used:
 12886 ;;		wreg, status,2, status,0, pclath, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12892 ;;      Params:         0       0       0       0       0       0       0       0
 12893 ;;      Locals:         0       0       0       0       0       0       0       0
 12894 ;;      Temps:          0       0       0       0       0       0       0       0
 12895 ;;      Totals:         0       0       0       0       0       0       0       0
 12896 ;;Total ram usage:        0 bytes
 12897 ;; Hardware stack levels used:    1
 12898 ;; Hardware stack levels required when called:    2
 12899 ;; This function calls:
 12900 ;;		_INT_CallBack
 12901 ;; This function is called by:
 12902 ;;		_INTERRUPT_InterruptManager
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           
 12907                           ;psect for function _INT_ISR
 12908  0CDF                     _INT_ISR:	
 12909                           
 12910                           ;ext_int.c: 50: (PIR0bits.INTF = 0);
 12911                           
 12912                           ;incstack = 0
 12913                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 12914  0CDF  0020               	movlb	0	; select bank0
 12915  0CE0  1010               	bcf	16,0	;volatile
 12916                           
 12917                           ;ext_int.c: 53: INT_CallBack();
 12918  0CE1  318D  25E0         	fcall	_INT_CallBack
 12919  0CE3  0008               	return
 12920  0CE4                     __end_of_INT_ISR:	
 12921                           
 12922                           	psect	text70
 12923  0DE0                     __ptext70:	
 12924 ;; *************** function _INT_CallBack *****************
 12925 ;; Defined at:
 12926 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0, pclath, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12940 ;;      Params:         0       0       0       0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0
 12943 ;;      Totals:         0       0       0       0       0       0       0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    1
 12947 ;; This function calls:
 12948 ;;		Absolute function
 12949 ;;		_EncINX_PulseRisingEvent
 12950 ;;		_INT_DefaultInterruptHandler
 12951 ;; This function is called by:
 12952 ;;		_INT_ISR
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function _INT_CallBack
 12958  0DE0                     _INT_CallBack:	
 12959                           
 12960                           ;ext_int.c: 62: EncINX_PulseRisingEvent();
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12964  0DE0  3187  27B4  318D   	fcall	_EncINX_PulseRisingEvent
 12965                           
 12966                           ;ext_int.c: 64: if(INT_InterruptHandler)
 12967  0DE3  0021               	movlb	1	; select bank1
 12968  0DE4  0840               	movf	_INT_InterruptHandler^(0+128),w
 12969  0DE5  0441               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 12970  0DE6  1903               	btfsc	3,2
 12971  0DE7  0008               	return
 12972                           
 12973                           ;ext_int.c: 65: {
 12974                           ;ext_int.c: 66: INT_InterruptHandler();
 12975  0DE8  0841               	movf	(_INT_InterruptHandler+1)^(0+128),w
 12976  0DE9  008A               	movwf	10
 12977  0DEA  0840               	movf	_INT_InterruptHandler^(0+128),w
 12978  0DEB  000A               	callw
 12979  0DEC  318D               	pagesel	$
 12980  0DED  0008               	return
 12981  0DEE                     __end_of_INT_CallBack:	
 12982                           
 12983                           	psect	text71
 12984  0CB6                     __ptext71:	
 12985 ;; *************** function _INT_DefaultInterruptHandler *****************
 12986 ;; Defined at:
 12987 ;;		line 80 in file "mcc_generated_files/ext_int.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;		None
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;		None
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      void 
 12994 ;; Registers used:
 12995 ;;		None
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13001 ;;      Params:         0       0       0       0       0       0       0       0
 13002 ;;      Locals:         0       0       0       0       0       0       0       0
 13003 ;;      Temps:          0       0       0       0       0       0       0       0
 13004 ;;      Totals:         0       0       0       0       0       0       0       0
 13005 ;;Total ram usage:        0 bytes
 13006 ;; Hardware stack levels used:    1
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		_EXT_INT_Initialize
 13011 ;;		_INT_CallBack
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           
 13016                           ;psect for function _INT_DefaultInterruptHandler
 13017  0CB6                     _INT_DefaultInterruptHandler:	
 13018                           
 13019                           ;incstack = 0
 13020                           ; Regs used in _INT_DefaultInterruptHandler: []
 13021  0CB6  0008               	return
 13022  0CB7                     __end_of_INT_DefaultInterruptHandler:	
 13023                           
 13024                           	psect	text72
 13025  07B4                     __ptext72:	
 13026 ;; *************** function _EncINX_PulseRisingEvent *****************
 13027 ;; Defined at:
 13028 ;;		line 594 in file "main.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		wreg, status,2, status,0
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13042 ;;      Params:         0       0       0       0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0
 13044 ;;      Temps:          1       0       0       0       0       0       0       0
 13045 ;;      Totals:         1       0       0       0       0       0       0       0
 13046 ;;Total ram usage:        1 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; This function calls:
 13049 ;;		Nothing
 13050 ;; This function is called by:
 13051 ;;		_INT_CallBack
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           
 13056                           ;psect for function _EncINX_PulseRisingEvent
 13057  07B4                     _EncINX_PulseRisingEvent:	
 13058                           
 13059                           ;main.c: 596: EncoderPositionAtIndex = EncoderPosition;
 13060                           
 13061                           ;incstack = 0
 13062                           ; Regs used in _EncINX_PulseRisingEvent: [wreg+status,2+status,0]
 13063  07B4  0020               	movlb	0	; select bank0
 13064  07B5  0837               	movf	_EncoderPosition+1,w
 13065  07B6  0021               	movlb	1	; select bank1
 13066  07B7  00B9               	movwf	(_EncoderPositionAtIndex+1)^(0+128)
 13067  07B8  0020               	movlb	0	; select bank0
 13068  07B9  0836               	movf	_EncoderPosition,w
 13069  07BA  0021               	movlb	1	; select bank1
 13070  07BB  00B8               	movwf	_EncoderPositionAtIndex^(0+128)
 13071                           
 13072                           ;main.c: 598: if(EncoderPositionOneCycle < 0)
 13073  07BC  0020               	movlb	0	; select bank0
 13074  07BD  1FC5               	btfss	_EncoderPositionOneCycle,7
 13075  07BE  2FC1               	goto	i1l3115
 13076                           
 13077                           ;main.c: 599: EncoderPositionOneCycle=-EncoderPositionOneCycle;
 13078  07BF  09C5               	comf	_EncoderPositionOneCycle,f
 13079  07C0  0AC5               	incf	_EncoderPositionOneCycle,f
 13080  07C1                     i1l3115:	
 13081                           
 13082                           ;main.c: 601: if(flagForFirstRevolution == 1 && EncoderPositionOneCycle > 5)
 13083  07C1  037A               	decf	_flagForFirstRevolution,w
 13084  07C2  1D03               	btfss	3,2
 13085  07C3  2FDA               	goto	i1l3127
 13086  07C4  0845               	movf	_EncoderPositionOneCycle,w
 13087  07C5  3A80               	xorlw	128
 13088  07C6  3E7A               	addlw	-134
 13089  07C7  1C03               	skipc
 13090  07C8  2FDA               	goto	i1l3127
 13091                           
 13092                           ;main.c: 603: {
 13093                           ;main.c: 604: if(EncoderPositionOneCycle < 32)
 13094  07C9  0845               	movf	_EncoderPositionOneCycle,w
 13095  07CA  3A80               	xorlw	128
 13096  07CB  3E60               	addlw	-160
 13097  07CC  1803               	skipnc
 13098  07CD  2FD1               	goto	i1l3123
 13099                           
 13100                           ;main.c: 605: {
 13101                           ;main.c: 606: EncPulseError=1;
 13102  07CE  01FB               	clrf	_EncPulseError
 13103  07CF  0AFB               	incf	_EncPulseError,f
 13104                           
 13105                           ;main.c: 610: }
 13106  07D0  2FDA               	goto	i1l3127
 13107  07D1                     i1l3123:	
 13108                           
 13109                           ;main.c: 611: else if(EncoderPositionOneCycle > 32)
 13110  07D1  0845               	movf	_EncoderPositionOneCycle,w
 13111  07D2  3A80               	xorlw	128
 13112  07D3  3E5F               	addlw	-161
 13113  07D4  1C03               	skipc
 13114  07D5  2FDA               	goto	i1l3127
 13115                           
 13116                           ;main.c: 612: {
 13117                           ;main.c: 613: EncPulseError=2;
 13118  07D6  3002               	movlw	2
 13119  07D7  00F0               	movwf	??_EncINX_PulseRisingEvent
 13120  07D8  0870               	movf	??_EncINX_PulseRisingEvent,w
 13121  07D9  00FB               	movwf	_EncPulseError
 13122  07DA                     i1l3127:	
 13123                           
 13124                           ;main.c: 617: }
 13125                           ;main.c: 632: }
 13126                           ;main.c: 634: flagForFirstRevolution=1;
 13127  07DA  01FA               	clrf	_flagForFirstRevolution
 13128  07DB  0AFA               	incf	_flagForFirstRevolution,f
 13129                           
 13130                           ;main.c: 637: EncoderPositionOneCycle=0;
 13131  07DC  01C5               	clrf	_EncoderPositionOneCycle
 13132  07DD  0008               	return
 13133  07DE                     __end_of_EncINX_PulseRisingEvent:	
 13134                           
 13135                           	psect	text73
 13136  0E3A                     __ptext73:	
 13137 ;; *************** function _CCP1_CaptureISR *****************
 13138 ;; Defined at:
 13139 ;;		line 84 in file "mcc_generated_files/ccp1.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;		None
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  module          2    5[COMMON] struct CCPR1Reg_tag
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  1    wreg      void 
 13146 ;; Registers used:
 13147 ;;		wreg, status,2, status,0, pclath, cstack
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13153 ;;      Params:         0       0       0       0       0       0       0       0
 13154 ;;      Locals:         2       0       0       0       0       0       0       0
 13155 ;;      Temps:          1       0       0       0       0       0       0       0
 13156 ;;      Totals:         3       0       0       0       0       0       0       0
 13157 ;;Total ram usage:        3 bytes
 13158 ;; Hardware stack levels used:    1
 13159 ;; Hardware stack levels required when called:    2
 13160 ;; This function calls:
 13161 ;;		_CCP1_CallBack
 13162 ;; This function is called by:
 13163 ;;		_INTERRUPT_InterruptManager
 13164 ;; This function uses a non-reentrant model
 13165 ;;
 13166                           
 13167                           
 13168                           ;psect for function _CCP1_CaptureISR
 13169  0E3A                     _CCP1_CaptureISR:	
 13170                           
 13171                           ;ccp1.c: 86: CCP_PERIOD_REG_T module;
 13172                           ;ccp1.c: 89: PIR4bits.CCP1IF = 0;
 13173                           
 13174                           ;incstack = 0
 13175                           ; Regs used in _CCP1_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 13176  0E3A  0020               	movlb	0	; select bank0
 13177  0E3B  1014               	bcf	20,0	;volatile
 13178                           
 13179                           ;ccp1.c: 92: module.ccpr1l = CCPR1L;
 13180  0E3C  0025               	movlb	5	; select bank5
 13181  0E3D  0811               	movf	17,w	;volatile
 13182  0E3E  00F4               	movwf	??_CCP1_CaptureISR
 13183  0E3F  0874               	movf	??_CCP1_CaptureISR,w
 13184  0E40  00F5               	movwf	CCP1_CaptureISR@module
 13185                           
 13186                           ;ccp1.c: 93: module.ccpr1h = CCPR1H;
 13187  0E41  0812               	movf	18,w	;volatile
 13188  0E42  00F4               	movwf	??_CCP1_CaptureISR
 13189  0E43  0874               	movf	??_CCP1_CaptureISR,w
 13190  0E44  00F6               	movwf	CCP1_CaptureISR@module+1
 13191                           
 13192                           ;ccp1.c: 96: CCP1_CallBack(module.ccpr1_16Bit);
 13193  0E45  0876               	movf	CCP1_CaptureISR@module+1,w
 13194  0E46  00F3               	movwf	CCP1_CallBack@capturedValue+1
 13195  0E47  0875               	movf	CCP1_CaptureISR@module,w
 13196  0E48  00F2               	movwf	CCP1_CallBack@capturedValue
 13197  0E49  318C  24FA         	fcall	_CCP1_CallBack
 13198  0E4B  0008               	return
 13199  0E4C                     __end_of_CCP1_CaptureISR:	
 13200                           
 13201                           	psect	text74
 13202  0CFA                     __ptext74:	
 13203 ;; *************** function _CCP1_CallBack *****************
 13204 ;; Defined at:
 13205 ;;		line 99 in file "mcc_generated_files/ccp1.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  capturedValu    2    2[COMMON] unsigned int 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      void 
 13212 ;; Registers used:
 13213 ;;		wreg, status,2, status,0, pclath, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13219 ;;      Params:         2       0       0       0       0       0       0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0
 13222 ;;      Totals:         2       0       0       0       0       0       0       0
 13223 ;;Total ram usage:        2 bytes
 13224 ;; Hardware stack levels used:    1
 13225 ;; Hardware stack levels required when called:    1
 13226 ;; This function calls:
 13227 ;;		_EncA_PulseEdgeEvent
 13228 ;; This function is called by:
 13229 ;;		_CCP1_CaptureISR
 13230 ;; This function uses a non-reentrant model
 13231 ;;
 13232                           
 13233                           
 13234                           ;psect for function _CCP1_CallBack
 13235  0CFA                     _CCP1_CallBack:	
 13236                           
 13237                           ;ccp1.c: 102: EncA_PulseEdgeEvent(capturedValue);
 13238                           
 13239                           ;incstack = 0
 13240                           ; Regs used in _CCP1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 13241  0CFA  0873               	movf	CCP1_CallBack@capturedValue+1,w
 13242  0CFB  00F1               	movwf	EncA_PulseEdgeEvent@capturedValue+1
 13243  0CFC  0872               	movf	CCP1_CallBack@capturedValue,w
 13244  0CFD  00F0               	movwf	EncA_PulseEdgeEvent@capturedValue
 13245  0CFE  318D  2519         	fcall	_EncA_PulseEdgeEvent
 13246  0D00  0008               	return
 13247  0D01                     __end_of_CCP1_CallBack:	
 13248                           
 13249                           	psect	text75
 13250  0D19                     __ptext75:	
 13251 ;; *************** function _EncA_PulseEdgeEvent *****************
 13252 ;; Defined at:
 13253 ;;		line 269 in file "main.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;  capturedValu    2    0[COMMON] unsigned int 
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  1    wreg      void 
 13260 ;; Registers used:
 13261 ;;		None
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13267 ;;      Params:         2       0       0       0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0       0
 13270 ;;      Totals:         2       0       0       0       0       0       0       0
 13271 ;;Total ram usage:        2 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_CCP1_CallBack
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           
 13281                           ;psect for function _EncA_PulseEdgeEvent
 13282  0D19                     _EncA_PulseEdgeEvent:	
 13283                           
 13284                           ;incstack = 0
 13285                           ; Regs used in _EncA_PulseEdgeEvent: []
 13286                           ;main.c: 271: do { LATCbits.LATC3 = 1; } while(0);
 13287  0D19  0022               	movlb	2	; select bank2
 13288  0D1A  158E               	bsf	14,3	;volatile
 13289                           
 13290                           ;main.c: 273: PIE4bits.CCP1IE = 0;
 13291  0D1B  0021               	movlb	1	; select bank1
 13292  0D1C  1014               	bcf	20,0	;volatile
 13293                           
 13294                           ;main.c: 275: PIE4bits.CCP2IE = 0;
 13295  0D1D  1094               	bcf	20,1	;volatile
 13296                           
 13297                           ;main.c: 278: PIE4bits.CCP1IE = 1;
 13298  0D1E  1414               	bsf	20,0	;volatile
 13299                           
 13300                           ;main.c: 281: do { LATCbits.LATC3 = 0; } while(0);
 13301  0D1F  0022               	movlb	2	; select bank2
 13302  0D20  118E               	bcf	14,3	;volatile
 13303  0D21  0008               	return
 13304  0D22                     __end_of_EncA_PulseEdgeEvent:	
 13305  007E                     btemp	set	126	;btemp
 13306  007E                     int$flags	set	126
 13307  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         141
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     35      80
    BANK1            80      0      52
    BANK2            80      0      64
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    rxBuffer	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    txBuffer	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    postTransmission@postTransmission	PTR FTN()void  size(2) Largest target is 1
		 -> postTransmission_App(), 

    preTransmission@preTransmission	PTR FTN()void  size(2) Largest target is 1
		 -> preTransmission_App(), 

    _postTransmission	PTR FTN()void  size(2) Largest target is 1
		 -> postTransmission_App(), Absolute function(), 

    _preTransmission	PTR FTN()void  size(2) Largest target is 1
		 -> preTransmission_App(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), Absolute function(), 

    IOCCF4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCCF4_DefaultInterruptHandler(), 

    IOCCF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF4_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR5_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _TMR3_DefaultInterruptHandler->_Timer3_Overflow
    _TMR0_CallBack->_Timer0_tick10msecFunc
    _INT_CallBack->_EncINX_PulseRisingEvent
    _CCP1_CaptureISR->_CCP1_CallBack
    _CCP1_CallBack->_EncA_PulseEdgeEvent

Critical Paths under _main in BANK0

    _main->_MB_UpdateEPCParameter
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _NutRunCycleStart->_TMR3_WriteTimer
    _ModbusMasterSetup->_ModbusMasterInit
    _ModbusMasterSetup->_postTransmission
    _ModbusMasterSetup->_preTransmission
    _MB_UpdateEPCParameter->_readHoldingRegisters
    _readHoldingRegisters->_ModbusMasterTransaction
    _ModbusMasterTransaction->_word
    _LedONStartConfig->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12860
                   _LedONStartConfig
                    _LedONStatusBusy
              _MB_UpdateEPCParameter
                  _ModbusMasterSetup
                   _NutRunCycleStart
                  _SYSTEM_Initialize
                     _TMR3_StopTimer
                    _TMR3_WriteTimer
                     _TMR5_StopTimer
                    _TMR5_WriteTimer
                          _delayMsec
                    _getEncoderState
 ---------------------------------------------------------------------------------
 (1) _getEncoderState                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMsec                                            8     4      4      86
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR5_WriteTimer                                      2     0      2     216
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     539
                     _ADC_Initialize
                    _CCP1_Initialize
                    _CCP2_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      86
           _TMR5_SetInterruptHandler
                    _TMR5_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      86
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0     195
                                              2 BANK0      1     1      0
         _IOCCF4_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF4_SetInterruptHandler                           2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NutRunCycleStart                                     0     0      0     344
                   _NutRunCycleReset
                    _TMR3_StartTimer
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_WriteTimer                                      2     0      2     344
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NutRunCycleReset                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ModbusMasterSetup                                    0     0      0     194
                  _EUSART_Initialize
                   _ModbusMasterInit
                   _postTransmission
                    _preTransmission
 ---------------------------------------------------------------------------------
 (2) _preTransmission                                      2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _postTransmission                                     2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ModbusMasterInit                                     2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MB_UpdateEPCParameter                                2     2      0   10239
                                             33 BANK0      2     2      0
                  _getResponseBuffer
               _readHoldingRegisters
 ---------------------------------------------------------------------------------
 (2) _readHoldingRegisters                                 4     0      4   10110
                                             29 BANK0      4     0      4
            _ModbusMasterTransaction
 ---------------------------------------------------------------------------------
 (3) _ModbusMasterTransaction                             19    19      0    9714
                                             10 BANK0     19    19      0
                   Absolute function *
                        _EUSART_Read
                       _EUSART_Write
                       _crc16_update
                           _highByte
                            _lowByte
                             _millis
                        _millisReset
               _postTransmission_App *
                _preTransmission_App *
                               _word
 ---------------------------------------------------------------------------------
 (4) _word                                                10     8      2     236
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (4) _preTransmission_App                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _postTransmission_App                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _millisReset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _lowByte                                              2     0      2     982
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _highByte                                             2     0      2     854
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _crc16_update                                         7     4      3     415
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getResponseBuffer                                    7     5      2      44
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _LedONStatusBusy                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedONStartConfig                                     5     3      2     898
                                              8 BANK0      5     3      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0     197
                                              7 COMMON     1     1      0
                    _CCP1_CaptureISR
                            _INT_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR5_ISR                                             0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR5_DefaultInterruptHandler                         0     0      0       0
                    _Timer5_Overflow
 ---------------------------------------------------------------------------------
 (8) _Timer5_Overflow                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR3_ISR                                             0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR3_DefaultInterruptHandler                         0     0      0       0
                    _Timer3_Overflow
 ---------------------------------------------------------------------------------
 (8) _Timer3_Overflow                                      4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
              _Timer0_tick10msecFunc
 ---------------------------------------------------------------------------------
 (8) _Timer0_tick10msecFunc                                4     4      0       0
                                              0 COMMON     4     4      0
               _LedON_Control_10msec
 ---------------------------------------------------------------------------------
 (9) _LedON_Control_10msec                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF4_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCCF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCCF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCCF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCCF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0       0
                   Absolute function *
            _EncINX_PulseRisingEvent
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EncINX_PulseRisingEvent                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP1_CaptureISR                                      3     3      0     197
                                              4 COMMON     3     3      0
                      _CCP1_CallBack
 ---------------------------------------------------------------------------------
 (7) _CCP1_CallBack                                        2     0      2     150
                                              2 COMMON     2     0      2
                _EncA_PulseEdgeEvent
 ---------------------------------------------------------------------------------
 (8) _EncA_PulseEdgeEvent                                  2     0      2      64
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LedONStartConfig
     ___lwdiv
     ___wmul
   _LedONStatusBusy
   _MB_UpdateEPCParameter
     _getResponseBuffer
     _readHoldingRegisters
       _ModbusMasterTransaction
         Absolute function(Fake) *
         _EUSART_Read *
         _EUSART_Write *
         _crc16_update *
         _highByte *
         _lowByte *
         _millis *
         _millisReset *
         _postTransmission_App *
         _preTransmission_App *
         _word *
   _ModbusMasterSetup
     _EUSART_Initialize
     _ModbusMasterInit
     _postTransmission
     _preTransmission
   _NutRunCycleStart
     _NutRunCycleReset
     _TMR3_StartTimer
     _TMR3_WriteTimer
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _CCP2_Initialize
     _EUSART_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF4_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
       _TMR5_StartTimer
     _WDT_Initialize
   _TMR3_StopTimer
   _TMR3_WriteTimer
   _TMR5_StopTimer
   _TMR5_WriteTimer
   _delayMsec
   _getEncoderState

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_CaptureISR
     _CCP1_CallBack
       _EncA_PulseEdgeEvent
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _EncINX_PulseRisingEvent *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCCF4_ISR
       Absolute function(Fake) *
       _IOCCF4_DefaultInterruptHandler *
     _IOCCF5_ISR
       Absolute function(Fake) *
       _IOCCF5_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _Timer0_tick10msecFunc *
         _LedON_Control_10msec
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
       _Timer3_Overflow
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _Timer5_Overflow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      34       8       65.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      D1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat May 13 18:28:51 2017

                          __u16WriteAddress 002E            __end_of_TMR5_SetInterruptHandler 0D6A  
    __end_of_IOCCF4_DefaultInterruptHandler 0CB8     __size_of_IOCCF4_DefaultInterruptHandler 0001  
            _IOCCF4_DefaultInterruptHandler 0CB7                                 __CFG_CP$OFF 0000  
            __size_of_MB_UpdateEPCParameter 0022                         ___wmul@multiplicand 004A  
             __end_of_MB_UpdateEPCParameter 0FB4                 MB_UpdateEPCParameter@result 006A  
                         ??_TMR5_WriteTimer 004A                     __end_of_CCP1_Initialize 0E29  
                  __size_of_Timer5_Overflow 0001                                 __CFG_LVP$ON 0000  
                        __u16ResponseBuffer 20F0                                         l152 0D6A  
                                       l159 0D03                                         l627 073D  
                                       l982 03EE                                         l977 03E0  
                                       l979 03E3                                         _GIE 005F  
                              __CFG_CPD$OFF 0000               LedONStartConfig@LedONNumBlink 0051  
                 __size_of_LedONStartConfig 0068                                         wreg 0009  
                              ?_EUSART_Read 0070              preTransmission@preTransmission 0048  
                                      l1019 0539                                        l1150 0647  
                                      l1153 064A                                        l1146 0644  
                                      l1271 0F3F                                        l3007 0D72  
                           _timer3ReloadVal 006B                                        l3061 07A5  
                     __size_of_crc16_update 0032                                        l3631 0F6C  
                                      l3455 0E97                                        l3801 07E4  
                                      l3643 0F39                                        l6203 0248  
                                      l6109 0732                                        l3673 0774  
                                      l3665 0756                                        l6049 0FB0  
                                      l3667 0762                                        l3771 0659  
                                      l3677 077D                                        l3693 0EAE  
                                      l3749 0D86                                        l3769 064D  
                                      l3779 068C                                        l5731 0111  
                                      l5901 048C                                        l5733 0123  
                                      l5741 014C                                        l5717 00C0  
                                      l5903 0490                                        l5807 028E  
                                      l5743 0161                                        l5823 0347  
                                      l5921 04CD                                        l5833 0360  
                                      l5809 02E4                                        l5825 035B  
                                      l5907 0496                                        l5835 037E  
                                      l5763 01DA                                        l5755 019A  
                                      l5933 04FC                                        l5773 01FD  
                                      l5749 017A                                        l5951 0569  
                                      l5943 04FE                                        l5927 04F2  
                                      l5919 04A2                                        l5961 056B  
                                      l5929 04F7                                        l5881 041C  
                                      l5857 03C7                                        l5849 03C5  
                                      l5777 0214                                        l5785 0237  
                                      l5939 0530                                        l5891 043B  
                                      l5787 023B                                        l5957 059D  
                                      l5949 0563                                        l5965 05A6  
                                      l5893 043D                                        l5885 0427  
                                      l5869 03FE                                        l5789 0251  
                                      l5967 05B8                                        l5889 0438  
                                      l5897 0443         ModbusMasterTransaction@u32StartTime 0057  
                                      l5899 0464                                        u2025 0759  
                                      u2045 0763                                        _LATA 010C  
                                      _LATB 010D                             __end_of_INT_ISR 0CE4  
                                      u2055 076D                                        _LATC 010E  
                                      u2065 0775                                        u2195 07FC  
                                      u1910 06F8                                        u4525 042C  
                                      u1985 0F40                                        u1995 0F45  
                                      u4595 04B0                                        _WPUA 020C  
                                      _WPUB 020D                                        _WPUC 020E  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                   __end_of_CCP2_Initialize 0D34                                        _main 06FA  
                           _TMR0_StartTimer 0CCF                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                                      _word 0EB7            ??_IOCCF5_DefaultInterruptHandler 0070  
           ?_IOCCF5_DefaultInterruptHandler 0070                               __CFG_BOREN$ON 0000  
       __end_of_INT_DefaultInterruptHandler 0CB7                 _INT_DefaultInterruptHandler 0CB6  
                             __CFG_BORV$LOW 0000                                        start 004E  
                           _timer5ReloadVal 006D                     _EncEdgeMinTimeIntSumAvg 00A8  
                           _TMR3_Initialize 0F00             __end_of_INT_SetInterruptHandler 0D3D  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                          ?_CCP1_CaptureISR 0070                            ?_getEncoderState 0070  
                   __end_of_TMR0_Initialize 0E89              ??_TMR0_DefaultInterruptHandler 0070  
                             ?_EUSART_Write 0070              __size_of_OSCILLATOR_Initialize 0008  
             __end_of_OSCILLATOR_Initialize 0D11                         __size_of_IOCCF4_ISR 000D  
                       __size_of_IOCCF5_ISR 000D                                       _ADACT 009F  
                                     ?_main 0070                               __CFG_WDTE$OFF 0000  
               __end_of_preTransmission_App 0CCC                                       ?_word 0048  
                                     _T3CON 0413                                       _T5CON 041A  
                            __CFG_DEBUG$OFF 0000                             __end_of___lwdiv 0782  
                                     i1l430 0013                                       i1l432 001D  
                                     i1l434 0029                                       i1l442 0049  
                                     i1l436 0035                                       i1l438 0041  
                    _flagForFirstRevolution 007A                                       _OSCEN 091D  
                              _crc16_update 0782                                       _TMR0H 0016  
                                     _TMR0L 0015                                       _TMR3H 0412  
                                     _TMR5H 0419                                       _TMR3L 0411  
                                     _TMR5L 0418                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
                    __size_of_CCP1_CallBack 0007           __size_of_TMR0_SetInterruptHandler 0009  
            readHoldingRegisters@u16ReadQty 0067           __size_of_TMR3_SetInterruptHandler 0009  
                 ?_TMR0_SetInterruptHandler 0048                   ?_TMR3_SetInterruptHandler 0048  
                          __end_of_TMR0_ISR 0CE9                            __end_of_TMR3_ISR 0E60  
                          __end_of_TMR5_ISR 0E74                      ?_Timer0_tick10msecFunc 0070  
            ??_TMR3_DefaultInterruptHandler 0074                     __end_of_PIN_MANAGER_IOC 0D95  
                            _WDT_Initialize 0CDB                             __end_of_lowByte 0CC9  
                                     pclath 000A                   __size_of_ModbusMasterInit 000F  
         ModbusMasterTransaction@u8MBStatus 0060                           ?_postTransmission 0048  
                                     status 0003                                       wtemp0 007E  
                              ?_millisReset 0070                             _LedONStatusBusy 0CC0  
                        ??_postTransmission 004A                             _TMR5_Initialize 0F1B  
                           __initialization 0050                           _getResponseBuffer 0F52  
                              __end_of_main 074D                                __end_of_word 0ECF  
                        ?_getResponseBuffer 0048                              ??_EUSART_Write 0048  
               ?_INTERRUPT_InterruptManager 0070                           ??_Timer3_Overflow 0070  
                                    ??_main 006B                            ?_CCP1_Initialize 0070  
                  _TMR5_SetInterruptHandler 0D61                                      ??_word 004A  
                           _TMR3_StartTimer 0CCC                       _TMR3_InterruptHandler 00C8  
                       ??_getResponseBuffer 004A                      __end_of_WDT_Initialize 0CDF  
                                 ??_INT_ISR 0071            __size_of_ModbusMasterTransaction 0524  
                         ??_Timer5_Overflow 0070                     __end_of_TMR0_StartTimer 0CD2  
                                    _ADCON0 009D                                      _ADCON1 009E  
                                    _ADRESH 009C                                      _ADRESL 009B  
                                    _CCPR1H 0292                                      _CCPR2H 0296  
                                    _CCPR1L 0291                                      _CCPR2L 0295  
              ??_IOCCF4_SetInterruptHandler 004A                                      _ANSELA 018C  
                                    _ANSELB 018D                                      _ANSELC 018E  
                        __CFG_RSTOSC$HFINT1 0000                                      _T0CON0 0017  
                                    _T0CON1 0018                                      _T3GCON 0414  
                                    _T5GCON 041B                                      _RC1REG 0199  
                                    _RC1STA 019D                                      i1l1183 0616  
                                    i1l3025 05D2                                      i1l3033 05F6  
                                    _ODCONA 028C                                      i1l1186 0619  
                                    _ODCONB 028D                                      i1l3123 07D1  
                                    i1l3115 07C1                                      i1l1179 0613  
                                    i1l3043 061C                                      i1l3027 05DE  
                                    i1l3035 0602                                      _ODCONC 028E  
                                    i1l3045 0628                                      i1l3029 05EA  
                                    i1l3037 0609                                      i1l3127 07DA  
                                    i1l3047 062C                     __end_of_TMR3_Initialize 0F1B  
                                    i1l6035 0D8F                                      u141_25 05CF  
                                    u142_20 05DB                                      u144_20 05E7  
                                    i1l5993 0DD0                                      _INLVLA 038C  
                                    i1l5987 0DC3                                      _INLVLC 038E  
                                    u146_20 05F3                                      u148_25 0610  
                                    _OSCFRQ 091F                                      _TX1REG 019A  
                                    _WDTCON 0097                                      _TX1STA 019E  
                          ?_CCP2_Initialize 0070                                  __u8MBSlave 0040  
                           _TMR3_WriteTimer 0E89                                      _Led_ON 003C  
                 __end_of_getResponseBuffer 0F71                               _CCP1_CallBack 0CFA  
                            __CFG_PWRTE$OFF 0000                            __end_of_highByte 0CC6  
                                    ___wmul 0F36         ModbusMasterTransaction@u8MBFunction 005F  
                            __CFG_STVREN$ON 0000                                   ??___lwdiv 004C  
                  __size_of_preTransmission 0006                    ?_EncINX_PulseRisingEvent 0070  
                     ModbusMasterInit@slave 0049                            ?_TMR0_Initialize 0070  
                                    _millis 0E29                               ?_INT_CallBack 0070  
       __size_of_IOCCF4_SetInterruptHandler 0009                             __u16ReadAddress 0032  
                           _TMR5_StartTimer 0CD2                            _LedONStartConfig 0631  
                                 ??_lowByte 004A                             ?_WDT_Initialize 0070  
                     __end_of_TMR0_CallBack 0DFC            __size_of_INT_SetInterruptHandler 0009  
   INT_SetInterruptHandler@InterruptHandler 0048  IOCCF5_SetInterruptHandler@InterruptHandler 0048  
IOCCF4_SetInterruptHandler@InterruptHandler 0048    TMR0_SetInterruptHandler@InterruptHandler 0048  
  TMR3_SetInterruptHandler@InterruptHandler 0048    TMR5_SetInterruptHandler@InterruptHandler 0048  
                          ?_PIN_MANAGER_IOC 0070                 __end_of_EncA_PulseEdgeEvent 0D22  
                   __end_of_LedONStatusBusy 0CC3                             _EncPulseOpState 0038  
                              ??_IOCCF4_ISR 0070                                ??_IOCCF5_ISR 0070  
                   __end_of_TMR5_Initialize 0F36                        __size_of_EUSART_Read 000A  
                         _SYSTEM_Initialize 0F71                   __size_of_NutRunCycleReset 0018  
                   __end_of__initialization 0099                   __size_of_NutRunCycleStart 000F  
                            ?_CCP1_CallBack 0072                          ?_SYSTEM_Initialize 0070  
              __end_of_LedON_Control_10msec 0631                             _TMR5_WriteTimer 0EA0  
                            __pcstackCOMMON 0070                      __u8ResponseBufferIndex 003E  
                              __pidataBANK0 0003                                __pidataBANK1 0D11  
                       ??_SYSTEM_Initialize 004B                     __end_of_TMR3_StartTimer 0CCF  
                                 ?_TMR0_ISR 0070                                   ?_TMR3_ISR 0070  
                                 ?_TMR5_ISR 0070                          __size_of_delayMsec 0022  
                            ??_INT_CallBack 0071                          _MBreadSetNoOfPulse 00BE  
                        __end_of_IOCCF4_ISR 0DC6                          __end_of_IOCCF5_ISR 0DD3  
               __size_of_EXT_INT_Initialize 000C                          _multipleTimecheck0 0047  
                        _multipleTimecheck1 0046                     _MBwriteCurrentNoOfPulse 00BC  
              __end_of_readHoldingRegisters 0DE0                      __u8TransmitBufferIndex 003F  
                              word@highByte 0051                            ?_TMR0_StartTimer 0070  
                 __end_of_SYSTEM_Initialize 0F92                      _EncoderPositionAtIndex 00B8  
                   __end_of_TMR3_WriteTimer 0EA0                                  __pbssBANK0 0020  
                                __pbssBANK1 00A0                                  __pbssBANK2 0120  
                          _ModbusMasterInit 0DFC                        __end_of_EUSART_Write 0D09  
                          ?_TMR3_Initialize 0070                                  _delayCount 00B6  
                __size_of_getResponseBuffer 001F                                 __u16ReadQty 0030  
           __end_of_EncINX_PulseRisingEvent 07DE                        __size_of_millisReset 000A  
                                __pmaintext 06FA            __end_of_TMR0_SetInterruptHandler 0D58  
          __end_of_TMR3_SetInterruptHandler 0D61                                     ?___wmul 0048  
                                ??_TMR0_ISR 0074                     __end_of_TMR5_StartTimer 0CD5  
                           __CFG_PPS1WAY$ON 0000                                  ??_TMR3_ISR 0074  
                                ??_TMR5_ISR 0070                                  __pintentry 0004  
             __size_of_postTransmission_App 0005                                     _CCP1CAP 0294  
                                   _CCP2CAP 0298                                     _CCP1CON 0293  
                                   _CCP2CON 0297                                     ?_millis 0048  
    __end_of_IOCCF5_DefaultInterruptHandler 0CB9     __size_of_IOCCF5_DefaultInterruptHandler 0001  
            _IOCCF5_DefaultInterruptHandler 0CB8                     __size_of_ADC_Initialize 0009  
                     _MB_UpdateEPCParameter 0F92                     ??_Timer0_tick10msecFunc 0070  
                   _ModbusMasterTransaction 009D                           ??_preTransmission 004A  
                                   _SP1BRGH 019C                                     _SP1BRGL 019B  
                  getResponseBuffer@u8Index 004E                                     _INT_ISR 0CDF  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                                   _OSCTUNE 091E          __end_of_IOCCF4_SetInterruptHandler 0D46  
                _IOCCF4_SetInterruptHandler 0D3D                                     _PPSLOCK 0E0F  
                                 ?_highByte 0048                            ?_LedONStatusBusy 0070  
                   __end_of_TMR5_WriteTimer 0EB7                             ??_CCP1_CallBack 0074  
                          ?_TMR5_Initialize 0070                           __end_of_delayMsec 0800  
                       _Blick_tickPointMsec 00B2                     __size_of_TMR3_StopTimer 0003  
                           _Timer3_Overflow 0FDA                  ??_TMR5_SetInterruptHandler 004A  
                          ?_TMR3_StartTimer 0070                             __size_of___wmul 001C  
                                   ___lwdiv 074D                             _Timer5_Overflow 0002  
                 __size_of_postTransmission 0006                             __size_of_millis 0011  
                                   __ptext1 0D7E                                     __ptext2 07DE  
                                   __ptext3 0EA0                                     __ptext4 0CD8  
                                   __ptext5 0CD5                                     __ptext6 0F71  
                                   __ptext7 0CDB                                     __ptext8 0F1B  
                                   __ptext9 0CD2                    __size_of_CCP1_CaptureISR 0012  
                   __size_of_TMR5_StopTimer 0003                        _MBwriteToolOperating 007C  
                     _OSCILLATOR_Initialize 0D09                        _LedON_Control_10msec 05C1  
                                 _T3CONbits 0413                    __size_of_getEncoderState 000B  
                                   _lowByte 0CC6                    ??_PIN_MANAGER_Initialize 004A  
                   _INT_SetInterruptHandler 0D34                                   _T5CONbits 041A  
                                 _IOCCFbits 0399                                 _NutRunstate 0042  
                                 _IOCCNbits 0398                                   _IOCCPbits 0397  
                                ??_highByte 004A                __size_of_preTransmission_App 0003  
                __size_of_SYSTEM_Initialize 0021                                   _LED_Color 006F  
                                   clrloop0 0DAE                        end_of_initialization 0099  
                          ?_TMR3_WriteTimer 0048                                 _u8ModbusADU 0120  
                          _NutRunCycleReset 0ECF                            _NutRunCycleStart 0E0B  
                         __postTransmission 0028                        __end_of_INT_CallBack 0DEE  
                         _EUSART_Initialize 0D95                    __end_of_LedONStartConfig 0699  
                        ?_EUSART_Initialize 0070                        _readHoldingRegisters 0DD3  
                          ?_TMR5_StartTimer 0070            LedONStartConfig@LedONDurationSec 0050  
                 ??_ModbusMasterTransaction 0052                         ??_EUSART_Initialize 0048  
                          ??_WDT_Initialize 0048                      ?_MB_UpdateEPCParameter 0070  
                  _TMR0_SetInterruptHandler 0D4F                                   _PORTCbits 000E  
                  _TMR3_SetInterruptHandler 0D58                       _TMR5_InterruptHandler 00CA  
                     ?_LedON_Control_10msec 0070                                  highByte@ww 0048  
                   _IOCCF4_InterruptHandler 00C4                ModbusMasterTransaction@u8Qty 005D  
                     __size_of_EUSART_Write 0008            __size_of_EncINX_PulseRisingEvent 002A  
                  __size_of_CCP1_Initialize 000F                            __CFG_FEXTOSC$OFF 0000  
              ??_IOCCF5_SetInterruptHandler 004A                            ?_TMR5_WriteTimer 0048  
                   __end_of_Timer3_Overflow 1000                                   _RXPPSbits 0E24  
                   TMR5_WriteTimer@timerVal 0048                   __end_of_EUSART_Initialize 0DA1  
                          __preTransmission 002A                     __end_of_Timer5_Overflow 0003  
                     ?_readHoldingRegisters 0065                      _EncEdgeTimeIntervalOld 00AC  
                               _CCP1PPSbits 0E14                      _EncEdgeMinTimeInterval 00D0  
                               _CCP2PPSbits 0E15                    __size_of_CCP2_Initialize 0009  
                   __u8ResponseBufferLength 003D                              __end_of___wmul 0F52  
                             _EncSpdredFact 00CC                    __end_of_ModbusMasterInit 0E0B  
                              _EUSART_Write 0D01                           __size_of_TMR0_ISR 0005  
                         __size_of_TMR3_ISR 0014                              _ADC_Initialize 0D22  
                         __size_of_TMR5_ISR 0014                             crc16_update@crc 0048  
                        __u16TransmitBuffer 2170                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_millis 0E3A                   ??_INT_SetInterruptHandler 004A  
       __size_of_IOCCF5_SetInterruptHandler 0009                               _EncPulseError 007B  
                       start_initialization 0050                    ModbusMasterTransaction@i 0063  
                                 _OldEncPos 0034        __end_of_TMR5_DefaultInterruptHandler 0CC0  
     __size_of_TMR5_DefaultInterruptHandler 0003                _TMR5_DefaultInterruptHandler 0CBD  
                       _EncEdgeTimeInterval 0020                    __size_of_TMR0_Initialize 0015  
           __size_of_PIN_MANAGER_Initialize 0061                               ??_EUSART_Read 0048  
                         ??_CCP1_CaptureISR 0074                           ??_getEncoderState 0048  
                            _TMR3_StopTimer 0CD5                __size_of_EncA_PulseEdgeEvent 0009  
                  __size_of_PIN_MANAGER_IOC 000C                ?_INT_DefaultInterruptHandler 0070  
                          __CFG_LPBOREN$OFF 0000                             _preTransmission 0CF4  
                                  ??___wmul 004C                                _LED_msec_Cnt 0026  
                               _CCPTMRSbits 029F                      __size_of_TMR0_CallBack 000E  
                    __end_of_ADC_Initialize 0D2B                                 __pdataBANK0 006F  
                               __pdataBANK1 00CC                            _postTransmission 0CEE  
                                  ??_millis 004C                  __end_of_EXT_INT_Initialize 0DAD  
                    ??_LedON_Control_10msec 0070                              _TMR5_StopTimer 0CD8  
                     CCP1_CaptureISR@module 0075                               ?_crc16_update 0048  
                               __pbssBIGRAM 20F0                                 __pbssCOMMON 0078  
                         _ModbusMasterSetup 0EE7                                   ___latbits 0001  
            __size_of_Timer0_tick10msecFunc 0026                                    ?_INT_ISR 0070  
                             __pcstackBANK0 0048               __end_of_Timer0_tick10msecFunc 0FDA  
    ModbusMasterTransaction@u8ModbusADUSize 0064                               crc16_update@a 004A  
                             crc16_update@i 004D                 ?_IOCCF4_SetInterruptHandler 0048  
                        ?_ModbusMasterSetup 0070                __end_of_postTransmission_App 0CEE  
                     __size_of_INT_CallBack 000E               ?_TMR5_DefaultInterruptHandler 0070  
                    __end_of_TMR3_StopTimer 0CD8                     _EncoderPositionOneCycle 0045  
                          ?_Timer3_Overflow 0070                           __size_of_highByte 0003  
                __size_of_EUSART_Initialize 000C                         ??_ModbusMasterSetup 004A  
                             ??_millisReset 0048                         __end_of_EUSART_Read 0D74  
                     _TMR0_InterruptHandler 00C6                           ??_CCP1_Initialize 0048  
                                 __pnvBANK0 006B                                   __pnvBANK1 00C0  
                    ??_readHoldingRegisters 0069                    __size_of_TMR0_StartTimer 0003  
                               word@lowByte 0048                                   _delayFlag 0041  
                   _IOCCF5_InterruptHandler 00C2                                   _delayMsec 07DE  
                          ___lwdiv@dividend 004A                      _PIN_MANAGER_Initialize 0699  
                          ?_Timer5_Overflow 0070               ??_INT_DefaultInterruptHandler 0070  
                  __size_of_TMR3_Initialize 001B                         _preTransmission_App 0CC9  
                                  ?___lwdiv 0048                             ?_ADC_Initialize 0070  
                    __end_of_TMR5_StopTimer 0CDB                    __end_of_NutRunCycleReset 0EE7  
              ??_INTERRUPT_InterruptManager 0077                    __end_of_NutRunCycleStart 0E1A  
        readHoldingRegisters@u16ReadAddress 0065                              ??_crc16_update 004B  
                 __end_of_ModbusMasterSetup 0F00                                _INT_CallBack 0DE0  
                              __u16WriteQty 002C                                    _BAUD1CON 019F  
                         ??_CCP2_Initialize 0048                                    ?_lowByte 0048  
                   _EncINX_PulseRisingEvent 07B4          __end_of_IOCCF5_SetInterruptHandler 0D4F  
                _IOCCF5_SetInterruptHandler 0D46                            ___lwdiv@quotient 004D  
                      ?_preTransmission_App 0070                               _TMR0_CallBack 0DEE  
          postTransmission@postTransmission 0048                             ?_TMR3_StopTimer 0070  
          ??_IOCCF4_DefaultInterruptHandler 0070             ?_IOCCF4_DefaultInterruptHandler 0070  
                         ??_TMR0_Initialize 004A                              ___wmul@product 004C  
                                  _LATBbits 010D                                    _LATCbits 010E  
                   __end_of_preTransmission 0CFA                       __end_of_CCP1_CallBack 0D01  
                                 clear_ram0 0DAD                                    _PIE0bits 0090  
                            _EncEdgeGotFlag 0044                                    _PIE3bits 0093  
                                  _PIE4bits 0094                                  ?_delayMsec 0048  
                  __size_of_LedONStatusBusy 0003         __size_of_INTERRUPT_InterruptManager 004A  
                ??_TMR0_SetInterruptHandler 004A                                    _PIR0bits 0010  
                         _IdleTimeOnShutOff 00A4                                    _PIR1bits 0011  
                         ?_LedONStartConfig 0050                                    _PIR3bits 0013  
                                  _PIR4bits 0014                  ??_TMR3_SetInterruptHandler 004A  
                  __size_of_TMR5_Initialize 001B                         __end_of_millisReset 0D7E  
                   ??_MB_UpdateEPCParameter 0069                                    _TMR0_ISR 0CE4  
                        ??_LedONStartConfig 0052                                    _TMR3_ISR 0E4C  
                                  _TMR5_ISR 0E60                           ??_PIN_MANAGER_IOC 0070  
                           ?_TMR5_StopTimer 0070                               _TimertickMsec 00A0  
                                _ADCON0bits 009D                           ___wmul@multiplier 0048  
                  __size_of_TMR3_StartTimer 0003        __size_of_INT_DefaultInterruptHandler 0001  
         __size_of_TMR5_SetInterruptHandler 0009                   ?_TMR5_SetInterruptHandler 0048  
                     ??_preTransmission_App 0048                            __size_of_INT_ISR 0005  
                            ?_TMR0_CallBack 0070                                 _EUSART_Read 0D6A  
            ??_TMR5_DefaultInterruptHandler 0070                    __size_of_TMR3_WriteTimer 0017  
                        _OldEncPulseOpState 003A                     ??_OSCILLATOR_Initialize 0048  
                      _postTransmission_App 0CE9                           ??_TMR0_StartTimer 0048  
                          __size_of___lwdiv 0035                  CCP1_CallBack@capturedValue 0072  
                           _CCP1_CaptureISR 0E3A                           ?_ModbusMasterInit 0070  
                         ??_TMR3_Initialize 004A                  __size_of_ModbusMasterSetup 0019  
                 ??_EncINX_PulseRisingEvent 0070                             _getEncoderState 0D7E  
                                 lowByte@ww 0048                          ??_ModbusMasterInit 0048  
                       _EncA_PulseEdgeEvent 0D19                    __size_of_TMR5_StartTimer 0003  
                                _T0CON0bits 0017                             ___lwdiv@divisor 0048  
                          __size_of_lowByte 0003                             ___lwdiv@counter 004F  
                                  __ptext10 0D61                                    __ptext11 0F00  
                                  __ptext20 0DA1                                    __ptext12 0D58  
                                  __ptext21 0D34                                    __ptext13 0E74  
                                  __ptext30 0CF4                                    __ptext22 0D2B  
                                  __ptext14 0CCF                                    __ptext31 0CEE  
                                  __ptext23 0E1A                                    __ptext15 0D4F  
                                  __ptext40 0D74                                    __ptext32 0DFC  
                                  __ptext24 0D22                                    __ptext16 0699  
                                  __ptext41 0E29                                    __ptext33 0D95  
                                  __ptext25 0E0B                                    __ptext17 0D46  
                                  __ptext50 0F36                                    __ptext42 0CC6  
                                  __ptext34 0F92                                    __ptext26 0E89  
                                  __ptext18 0D3D                                    __ptext51 074D  
                                  __ptext43 0CC3                                    __ptext35 0DD3  
                                  __ptext27 0CCC                                    __ptext19 0D09  
                                  __ptext60 0DEE                                    __ptext44 0782  
                                  __ptext36 009D                                    __ptext28 0ECF  
                                  __ptext61 0FB4                                    __ptext53 0E60  
                                  __ptext45 0D01                                    __ptext37 0EB7  
                                  __ptext29 0EE7                                    __ptext70 0DE0  
                                  __ptext62 05C1                                    __ptext54 0CBD  
                                  __ptext46 0D6A                                    __ptext38 0CC9  
                                  __ptext71 0CB6                                    __ptext63 0CB9  
                                  __ptext55 0002                                    __ptext47 0F52  
                                  __ptext39 0CE9                                    __ptext72 07B4  
                                  __ptext64 0D89                                    __ptext56 0E4C  
                                  __ptext48 0CC0                                    __ptext73 0E3A  
                                  __ptext65 0DC6                                    __ptext57 0CBA  
                                  __ptext49 0631                                    __ptext74 0CFA  
                                  __ptext66 0CB8                                    __ptext58 0FDA  
                                  __ptext75 0D19                                    __ptext67 0DB9  
                                  __ptext59 0CE4                                    __ptext68 0CB7  
                                  __ptext69 0CDF                                    _highByte 0CC3  
                              _NutRunLength 00BA                                  _T3GCONbits 0414  
                                _IOCCF4_ISR 0DB9                     TMR3_WriteTimer@timerVal 0048  
                                _IOCCF5_ISR 0DC6                    __end_of_postTransmission 0CF4  
                          _ShutdownDetected 0043                               __size_of_main 0053  
                                _T5GCONbits 041B                               __size_of_word 0018  
                          ?_preTransmission 0048                        __end_of_crc16_update 07B4  
                               _millisReset 0D74                        ?_EncA_PulseEdgeEvent 0070  
      __end_of_TMR0_DefaultInterruptHandler 0CBA       __size_of_TMR0_DefaultInterruptHandler 0001  
              _TMR0_DefaultInterruptHandler 0CB9                                 ??_delayMsec 004C  
                                  _rxBuffer 0078                    __size_of_TMR5_WriteTimer 0017  
                                _RC1STAbits 019D                                    _txBuffer 0079  
                                _RB5PPSbits 0E9D                    ?_ModbusMasterTransaction 0070  
                     ?_postTransmission_App 0070                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 004E                  _INTERRUPT_InterruptManager 0004  
          EncA_PulseEdgeEvent@capturedValue 0070                           ??_LedONStatusBusy 0048  
      __end_of_TMR3_DefaultInterruptHandler 0CBD       __size_of_TMR3_DefaultInterruptHandler 0003  
              _TMR3_DefaultInterruptHandler 0CBA                 PIN_MANAGER_Initialize@state 004A  
                         ??_TMR5_Initialize 004A                    LedONStartConfig@LEDcolor 0054  
                                _INTCONbits 000B                             ??_TMR0_CallBack 0074  
                      _INT_InterruptHandler 00C0                             _CCP1_Initialize 0E1A  
                   _u16TransmitBufferLength 00B4                          _EXT_INT_Initialize 0DA1  
                   __size_of_WDT_Initialize 0004                                  _INTPPSbits 0E10  
                         ??_TMR3_StartTimer 0048                             delayMsec@timems 0048  
                                  intlevel1 0000          ModbusMasterTransaction@u8BytesLeft 005E  
                       _LedON_Duration_msec 0024                     ?_PIN_MANAGER_Initialize 0070  
                     ??_EncA_PulseEdgeEvent 0072                           __CFG_CLKOUTEN$OFF 0000  
                       ?_EXT_INT_Initialize 0070                                 _PPSLOCKbits 0E0F  
                          ??_ADC_Initialize 0048               ?_TMR0_DefaultInterruptHandler 0070  
                   __end_of_CCP1_CaptureISR 0E4C                             _CCP2_Initialize 0D2B  
                           _EncoderPosition 0036                     __end_of_getEncoderState 0D89  
                  ?_INT_SetInterruptHandler 0048                           ??_TMR3_WriteTimer 004A  
                         ?_NutRunCycleReset 0070                           ?_NutRunCycleStart 0070  
                      ??_EXT_INT_Initialize 004A               ?_TMR3_DefaultInterruptHandler 0070  
             __size_of_LedON_Control_10msec 0070                          ??_NutRunCycleReset 0048  
                           _TMR0_Initialize 0E74                             _Blick_tickPoint 00B0  
                        ??_NutRunCycleStart 004A                            ??_TMR3_StopTimer 0048  
               ?_IOCCF5_SetInterruptHandler 0048                _ModbusMasterTransaction$1565 005B  
                     _Timer0_tick10msecFunc 0FB4                          EUSART_Write@txData 0048  
                         ??_TMR5_StartTimer 0048                                 ?_IOCCF4_ISR 0070  
                               ?_IOCCF5_ISR 0070              __end_of_PIN_MANAGER_Initialize 06FA  
             ModbusMasterTransaction@u16CRC 0061                             _PIN_MANAGER_IOC 0D89  
           __end_of_ModbusMasterTransaction 05C1                            ??_TMR5_StopTimer 0048  
             __size_of_readHoldingRegisters 000D                      ??_postTransmission_App 0048  
                  __size_of_Timer3_Overflow 0026  
